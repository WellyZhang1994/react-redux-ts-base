{"version":3,"sources":["pages/dnd/Dnd.tsx"],"names":["useStyles","makeStyles","theme","createStyles","main","display","width","titleContainer","backgroundColor","padding","height","mainContainer","funnelListContainer","borderRadius","funnelListItem","marginBottom","profileContainer","border","searchContainer","audienceContainer","marginTop","serachInput","tableContainer","boxShadow","tableHeader","tableHeaderFont","color","fontFamily","fontWeight","fontSize","tableCellFont","rowStyle","nextButton","h1","h2","selectBorder","borderColor","cardsList","id","name","Dnd","props","classes","useState","todo","setTodo","Grid","container","direction","alignItems","className","item","Typography","onDragEnd","result","source","destination","items","Array","from","splice","index","newOrder","droppableId","provided","droppableProps","ref","innerRef","map","Fragment","draggableId","snapshot","draggableProps","dragHandleProps","style","isDragging","draggableStyle","margin","background"],"mappings":"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","file":"static/js/34.dbbf5b39.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Provider, useSelector } from 'react-redux'\nimport { RootState } from '../../reducers/index'\nimport {\n    Grid,\n    Button,\n    TextField,\n    InputAdornment,\n    Paper,\n    IconButton,\n    Typography,\n    Checkbox\n} from '@material-ui/core';\nimport AddToPhotosIcon from '@mui/icons-material/AddToPhotos';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport {\n    Autocomplete\n} from '@material-ui/lab';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Collapse from '@mui/material/Collapse';\nimport {\n    Search\n} from '@material-ui/icons';\nimport ArrowDropDownCircleIcon from '@mui/icons-material/ArrowDropDownCircle';\nimport ArrowDropUpCircleIcon from '@mui/icons-material/ArrowDropUp';\nimport LabelIcon from '@mui/icons-material/Label';\nimport Pagination from '@mui/material/Pagination';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport _ from 'lodash'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport { useHistory } from 'react-router';\nimport { DragDropContext, Draggable, Droppable, DropResult } from 'react-beautiful-dnd';\nimport { padding } from '@mui/system';\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            display: 'flex',\n            width: '100%',\n        },\n        titleContainer: {\n            width:'100%',\n            backgroundColor:'#FFFFFF',\n            padding: '30px 60px 0px 60px',\n            height:'142px'\n        },\n        mainContainer:{\n            width: '100%',\n            backgroundColor:'#F1F4F6',\n            height:'1000px'\n        },\n        funnelListContainer:{\n            width:'100%',\n            height:'600px',\n            backgroundColor:'#FFF',\n            padding: '20px 30px 0px 30px',\n            borderRadius:'10px'\n        },\n        funnelListItem:{\n            width:'100%',\n            height:'50px',\n            backgroundColor:'#F3F7FD',\n            borderRadius: '5px',\n            marginBottom: '10px',\n        },\n        profileContainer:{\n            width:'100%',\n            border:'2px solid #5A91FF',\n            borderRadius: '10px',\n            marginBottom: '20px'\n        },\n        searchContainer: {\n        },\n        audienceContainer: {\n            marginTop:'20px'\n        },\n        serachInput: {\n            [`& fieldset`]: {\n                borderRadius: 5,\n            },\n        },\n        tableContainer: {\n            boxShadow: 'none'\n        },\n        tableHeader:{\n            height:'50px',\n        },\n        tableHeaderFont:{\n            color:'#FFF',\n            fontFamily: 'Noto Sans',\n            fontWeight: 500,\n            fontSize: '16px'\n        },\n        tableCellFont:{\n            color:'#0E0F0F',\n            fontFamily: 'Noto Sans',\n            fontWeight: 500,\n            fontSize: '16px'\n        },\n        rowStyle:{\n            '&:hover': {\n                backgroundColor:'#F9F9F9 !important',\n            },\n        },\n        nextButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'120px',\n            height:'40px',\n            padding:'0 10px 0 10px'\n        },\n        h1: {\n            fontSize:'28px',\n            color:'#000',\n            fontWeight: 600,\n            fontFamily:'Noto Sans'\n        },\n        h2: {\n            fontSize:'14px',\n            color:'#989898',\n            fontWeight: 400,\n            fontFamily:'Noto Sans'   \n        },\n        selectBorder: {\n            borderColor: \"transparent !important\"\n        }\n    })\n);\n\nconst cardsList = [\n    {\n        id:'1',\n        name:'hihi1'\n    },\n    {\n        id:'2',\n        name:'hihi2'\n    },\n    {\n        id:'3',\n        name:'hihi3'\n    },\n    {\n        id:'4',\n        name:'hihi4'\n    },\n]\n\nconst getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\n\tpadding: 10,\n\tmargin: `0 50px 15px 50px`,\n\tbackground: isDragging ? \"#4a2975\" : \"white\",\n\tcolor: isDragging ? \"white\" : \"black\",\n\tborder: `1px solid black`,\n\tfontSize: `20px`,\n\tborderRadius: `5px`,\n\n\t...draggableStyle\n})\nconst Dnd = (props:Props) :React.ReactElement<Props>  =>  {\n    const classes = useStyles()\n    const [todo, setTodo] = useState(cardsList)\n\tconst onDragEnd = (result: DropResult) => {\n\t\tconst { source, destination } = result\n\t\tif (!destination) return\n\n\t\tconst items = Array.from(todo)\n\t\tconst [ newOrder ] = items.splice(source.index, 1)\n\t\titems.splice(destination.index, 0, newOrder)\n\n\t\tsetTodo(items)\n\t}\n    return(\n        <Grid container direction='column' alignItems='center' className={classes.main}>\n            <Grid item>\n                <Typography>Drag and Drop</Typography>\n            </Grid>\n            <DragDropContext onDragEnd={onDragEnd}>\n\t\t\t\t<Droppable droppableId=\"todo\">\n\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t<Grid container direction='column' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t{todo.map(({ id, name }, index) => {\n\t\t\t\t\t\t\t\treturn (\n                                    <React.Fragment>\n                                        <Draggable key={id} draggableId={id} index={index}>\n                                            {(provided, snapshot) => (\n                                                <Grid item  ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}>\n                                                    {name}\n                                                </Grid> \n                                            )}\n                                        </Draggable>\n                                    </React.Fragment>\n                                    \n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t</DragDropContext>\n            \n        </Grid>\n    )\n}\n\nexport default Dnd"],"sourceRoot":""}