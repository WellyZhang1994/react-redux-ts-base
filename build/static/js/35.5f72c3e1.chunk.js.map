{"version":3,"sources":["static/image_background.svg","pages/login/LoginPage.tsx"],"names":["useStyles","makeStyles","theme","createStyles","main","display","width","height","backgroundImage","background","backgroundColor","mainContainer","borderRadius","padding","boxShadow","loginWord","fontSize","color","fontWeight","fontFamily","h1","serachInput","selectBorder","borderColor","changeButton","LoginPage","props","classes","history","useHistory","useSelector","state","themeSelected","useDispatch","React","useState","password","setPassword","email","setEmail","passwordError","setPasswordError","emailError","setEmailError","showPassword","setShowPassword","needResetPassword","resetPassword","setResetPassword","resetConfirmPassword","setResetConfirmPassword","resetPasswordError","setResetPasswordError","resetConfirmPasswordError","setResetConfirmPasswordError","validateEmail","String","toLowerCase","match","Grid","container","style","position","margin","src","logo3","alt","direction","justifyContent","alignItems","className","item","Typography","marginTop","TextField","error","value","onChange","event","length","emailEvent","target","placeholder","variant","InputProps","type","marginRight","notchedOutline","startAdornment","InputAdornment","fill","size","passwordEvent","Checkbox","sx","bgcolor","marginLeft","disableRipple","Button","onClick","push","confirmPassword","_","isEqual","resetPasswordEvent","comfirmPasswordEvent","disabled","console","log"],"mappings":"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","file":"static/js/35.5f72c3e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image_background.c89f3bbf.svg\";","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from '../../reducers/index'\nimport {\n    Grid,\n    Button,\n    Divider,\n    TextField,\n    InputAdornment,\n    Typography\n} from '@material-ui/core';\n\nimport {\n    Email,\n    Lock\n} from '@material-ui/icons';\nimport { Checkbox } from '@mui/material';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport firebase from '../../utils/firebase'\nimport StyleFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport background from '../../static/image_background.svg'\nimport logo3 from '../../static/logo.png'\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            display: 'flex',\n            width: '100%',\n            height: '100vh',\n            backgroundImage: `url(${ background })`,\n            backgroundColor: '#f5f5f5'\n        },\n        mainContainer: {\n            borderRadius:10,\n            padding: '40px 50px',\n            height: '570px',\n            width: '500px',\n            backgroundColor: '#FFF',\n            boxShadow: '0px 0px 20px rgba(0, 115, 250, 0.1)'\n        },\n        loginWord: {\n            fontSize:'30px',\n            color:'#C17767',\n            fontWeight: 800,\n            fontFamily:'Lato, Noto Sans TC'\n        },\n        h1: {\n            fontSize:'14px',\n            color:'#9e9e9e',\n            fontWeight: 800,\n            fontFamily:'Lato, Noto Sans TC'\n        },\n        serachInput: {\n            [`& fieldset`]: {\n                borderRadius: 5,\n            },\n        },\n        selectBorder:{\n            borderColor: \"transparent !important\"\n        },\n        changeButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor: '#5A91FF',\n            width:'100%',\n            height:'40px',\n            boxShadow:'none',\n            '&:hover': {\n                backgroundColor:'#5A91FF',\n                boxShadow:'none'\n            },\n        },\n    })\n);\n\n\nconst LoginPage = (props:Props) :React.ReactElement<Props>  =>  {\n\n    const classes = useStyles()\n    const history = useHistory()\n    const theme: {[key: string]: {[key: string]:string}}  = useSelector((state: RootState) => state.theme)\n    const themeSelected :string = useSelector((state: RootState) => state.themeSelected)\n    const dispatch = useDispatch()\n\n    const changePassword = (password:string, confirmPassword:string) =>\n    {\n        //dispatch()\n        console.log(password, confirmPassword)\n        \n    }\n\n    const [password, setPassword] = React.useState<string>('');\n    const [email, setEmail] = React.useState<string>('');\n    const [passwordError, setPasswordError] = React.useState<boolean>(false);\n    const [emailError, setEmailError] = React.useState<boolean>(false);\n    const [showPassword, setShowPassword] = React.useState<boolean>(false);\n    const [needResetPassword, setNeedResetPassword] = React.useState<boolean>(false);\n\n    //confirm page\n    const [resetPassword, setResetPassword] = React.useState<string>('');\n    const [resetConfirmPassword, setResetConfirmPassword] = React.useState<string>('');\n    const [resetPasswordError, setResetPasswordError] = React.useState<boolean>(false);\n    const [resetConfirmPasswordError, setResetConfirmPasswordError] = React.useState<boolean>(false);\n\n    const emailEvent = (email: string) =>\n    {\n        if (email.length === 0)\n        {\n            setEmailError(false)\n        }\n        else if ( validateEmail(email) === null)\n        {\n            setEmailError(true)\n        }\n        else\n        {\n            setEmailError(false)\n        }\n        setEmail(email)\n    }\n\n    const passwordEvent = (password: string) =>\n    {\n        if (password.length === 0)\n        {\n            setPasswordError(false)\n        }\n        setPassword(password)\n    }\n\n    const validateEmail = (email:string) => {\n        return String(email)\n            .toLowerCase()\n            .match(\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n\n    const resetPasswordEvent = (password:string, confirmPassword: string) =>\n    {\n        if (password.length === 0)\n        {\n            setResetPasswordError(false)\n        }\n        else if (password.length < 8)\n        {\n            setResetPasswordError(true)\n        }\n        else\n        {\n            setResetPasswordError(false)\n        }\n\n        if(_.isEqual(password, confirmPassword) === false)\n        {\n            setResetConfirmPasswordError(true)\n        }\n\n            setResetPassword(password)\n        }\n    \n    const comfirmPasswordEvent = (password:string, confirmPassword: string) =>\n    {\n        if (confirmPassword.length === 0)\n        {\n            setResetConfirmPasswordError(false)\n        }\n        else if (_.isEqual(password, confirmPassword) === false)\n        {\n            setResetConfirmPasswordError(true)\n        }\n        else\n        {\n            setResetConfirmPasswordError(false)\n        }\n        setResetConfirmPassword(confirmPassword)\n    }\n    \n\n    return (\n        <>\n            <Grid container style={{position:'fixed',margin:'30px'}}>\n                <img  src={logo3} alt='jrg-logo' style={{width:'270px',height:'70px'}} />\n            </Grid>\n            {needResetPassword === false ? \n                <Grid container direction='column' justifyContent='center' alignItems='center' className={classes.main}>\n                    <Grid container direction='column' justifyContent='space-between' alignItems='center' className={classes.mainContainer}>\n                        <Grid item style={{width:'100%'}}>\n                            <Grid container direction='column' alignItems='center' >\n                                <Grid item>\n                                    <Typography style={{fontFamily:'Noto sans', fontSize:'28px',fontWeight:600}}>{'Sign in'}</Typography>\n                                </Grid>\n                                <Grid item style={{marginTop:'10px'}}>\n                                    <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:500,color:'#989898'}}>{'Enter your credentials to access your account.'}</Typography>\n                                </Grid>\n                                <Grid item container direction='column' style={{marginTop:'20px',width:'100%'}}>\n                                    <Grid item>\n                                        <Typography style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'Email address'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={emailError}\n                                            value={email}\n                                            onChange={(event)=> emailEvent(event.target.value)}    \n                                            placeholder='Enter your email'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: 'input',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 10px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                },\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                        <EmailIcon style={{fill:'#5A91FF'}}/>\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                            size=\"small\"\n                                            />\n                                    </Grid>\n                                        {emailError ?\n                                            <Typography  style={{marginTop:'4px',color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{'Please enter the correct mail format.'}</Typography> : ''}\n                                </Grid>    \n                                <Grid item container direction='column' style={{marginTop:'10px'}}>\n                                    <Grid item>\n                                        <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'Password'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={passwordError}\n                                            value={password}\n                                            onChange={(event)=> passwordEvent(event.target.value)}    \n                                            placeholder='Enter your password'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: showPassword? 'input' : 'password',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 10px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                },\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                        <LockOpenIcon style={{fill:'#5A91FF'}}/>\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                            size=\"small\"\n                                        />\n                                    </Grid>    \n                                        {passwordError ?\n                                        <Typography style={{color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{ \"Wrong password.\"}</Typography> : ''}\n                                </Grid>    \n                                <Grid item container alignItems='center'>\n                                    <Checkbox sx={{\n                                            '&:hover': { bgcolor: 'transparent' },\n                                            marginLeft:'-10px'\n                                    }}\n                                        onChange={()=> setShowPassword(!showPassword)}\n                                        disableRipple/>\n                                    <Typography style={{fontSize:'16px', fontFamily:'Noto sans'}}>{'Show password'}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item style={{width:'100%'}}>\n                                <Button onClick={()=> history.push('/dashboard')}  className={classes.changeButton}>{'Sign in'}</Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container justifyContent='center' style={{marginTop:'20px'}}>\n                        <Typography style={{marginRight:'4px',color:'#989898',fontSize:'16px', fontFamily:'Noto sans'}}>{'Forgot your password?'}</Typography>\n                        <Typography style={{color:'#5A91FF',fontSize:'16px', fontFamily:'Noto sans'}}>{'Plaese contact your administrator.'}</Typography>\n                    </Grid>\n                </Grid>\n                :\n                <Grid container direction='column' justifyContent='center' alignItems='center' className={classes.main}>\n                    <Grid container direction='column' justifyContent='space-between' alignItems='center' className={classes.mainContainer}>\n                        <Grid item style={{width:'100%'}}>\n                            <Grid container direction='column' alignItems='center'>\n                                <Grid item>\n                                    <Typography style={{fontFamily:'Noto sans', fontSize:'28px',fontWeight:600}}>{'Resetting password'}</Typography>\n                                </Grid>\n                                <Grid item style={{marginTop:'10px'}}>\n                                    <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:500,color:'#989898'}}>{'Please reset your password.'}</Typography>\n                                </Grid>\n                                <Grid item container direction='column' style={{marginTop:'20px',width:'100%'}}>\n                                    <Grid item>\n                                        <Typography style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'New password'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={resetPasswordError}\n                                            value={resetPassword}\n                                            onChange={(event)=> resetPasswordEvent(event.target.value, resetConfirmPassword)}    \n                                            placeholder='Please enter a password'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: 'password',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 5px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                }\n                                            }}\n                                            size=\"small\"\n                                            />\n                                    </Grid>\n                                        {passwordError ?\n                                            <Typography  style={{marginTop:'4px',color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{'The password must be at least 8 characters long.'}</Typography> : ''}\n                                </Grid>    \n                                <Grid item container direction='column' style={{marginTop:'10px'}}>\n                                    <Grid item>\n                                        <Typography  style={{fontFamily:'Noto sans', fontSize:'16px',fontWeight:600}}>{'Comfirm password'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{marginTop:'4px'}}>\n                                        <TextField\n                                            error={resetConfirmPasswordError}\n                                            value={resetConfirmPassword}\n                                            onChange={(event)=> comfirmPasswordEvent(resetPassword, event.target.value)}    \n                                            placeholder='Please re-type the password to confirm'\n                                            variant={'outlined'}\n                                            className={classes.serachInput}\n                                            InputProps={{\n                                                type: 'password',\n                                                style: {\n                                                    height:'40px',\n                                                    fontSize:'14px',\n                                                    width:'400px',\n                                                    padding:'0px 0px 0px 5px',\n                                                    backgroundColor:'#F3F3F3',\n                                                    marginRight: '20px',\n                                                    fontFamily:'Noto sans'\n                                                },\n                                                classes: {\n                                                    notchedOutline: classes.selectBorder\n                                                }\n                                            }}\n                                            size=\"small\"\n                                        />\n                                    </Grid>    \n                                        {resetConfirmPasswordError ?\n                                        <Typography style={{color:'#FE2D53', fontFamily:'Noto sans', fontSize:'14px'}}>{ \"New password and confirm password doesn't match.\"}</Typography> : ''}\n                                </Grid>    \n                            </Grid>\n                        </Grid>\n                        <Grid item style={{width:'100%'}}>\n                            <Button disabled={resetPasswordError || resetConfirmPasswordError || resetPassword.length === 0 || resetConfirmPassword.length === 0 } onClick={()=> console.log('hi')} className={classes.changeButton}>{'Confirm'}</Button>\n                        </Grid>\n                    </Grid>\n            </Grid>\n            }\n\n        </>\n\n    )\n}\n\nexport default LoginPage"],"sourceRoot":""}