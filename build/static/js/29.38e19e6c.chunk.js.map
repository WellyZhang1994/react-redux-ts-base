{"version":3,"sources":["utils/tool.ts","apis/httpRequest.ts","actions/landingActions.ts","components/CustomToolbar.tsx","static/icon_gender_male.svg","static/icon_gender_female.svg","static/icon_gender_unknown.svg","components/DetailTableNoBanner.tsx","pages/landings/moreDetails/Gender.tsx"],"names":["currencyFormat","value","undefined","toString","replace","dateOptionMappings","bannerMappings","memberTypeMappings","bannerTypeMappings","memberTypeColorMappings","trafficTypeColorMappings","bannerTypeColorMappings","bannerTypeColorMappingsForDetails","downloadFile","data","filename","downloadData","JSON","stringify","fileDownload","BACKEND_URL","process","REACT_APP_BACKEND_URL","console","log","axios","create","baseURL","headers","columnMapping","jrgMember","yuu","anonymous","yuu_jrgMember","yuu_anonymous","handleLandingTab","dispatch","a","type","LANDINGTAB","payload","fetchProfilesData","market","banner","startDate","endDate","compareStartDate","compareEndDate","FETCH_PROFILES_DATA","bannerFetch","concat","map","ban","web","get","fetchAgeRangesData","FETCH_AGERANGES_DATA","fetchGenderData","FETCH_GENDERS_DATA","fetchRecordsData","FETCH_RECORDS_DATA","newData","row","index","tempArray","slice","tempResult","date","_","keys","filter","x","key","sumBy","fetchTicketsData","FETCH_TICKETS_DATA","fetchSalesAmountsData","FETCH_SALESAMOUNTS_DATA","fetchTrafficsData","FETCH_TRAFFICS_DATA","fetchTrafficSourcesData","FETCH_TRAFFICSOURCES_DATA","takeRight","sortBy","fetchFunnelsData","FETCH_FUNNELS_DATA","fetchConversionsData","FETCH_CONVERSIONS_DATA","fetchMembersData","FETCH_MEMBERS_DATA","fetchPurchasesData","FETCH_PURCHASES_DATA","fetchTopsData","FETCH_TOPS_DATA","Promise","r","setTimeout","handleLandingFilter","dataPayload","HANDLE_MASTER_DATA_CHANGE","handleLandingFilterPeriod","period","periodOption","compareDateRange","HANDLE_MASTER_DATA_DATE_CHANGE","handleIsCustomCompareChecked","HANDLE_CUSTOM_COMPARE_CKECK","unmount_details","FETCH_LANDING_DETAILS","fetch_records_details","LOADING","rowData","f1Datas","flatMapDeep","values","f1Result","length","k","startsWith","item","lastValue","groupDateData","groupBy","f2tempResult","da","reduce","item1","item2","sum","forEach","hasOwnProperty","f2Result","statisticData","result","eachPeriod","dataList","tempDict","ke","p1","p2","fetch_genders_details","name","choosenPeriod","comparePeriod","statisticResult","fetch_ageRanges_details","fetch_tickets_details","fetch_salesamounts_details","fetch_traffics_details","fetch_trafficSources_details","traffic","f2Temp","now","compare","sourceKeyName","sourceKeyNameForCompare","dateKeys","flatten","includes","push","fetch_conversions_details","fetch_members_details","fetch_purchases_details","useStyles","makeStyles","theme","createStyles","tableNumberRateFont","fontFamily","fontSize","color","recordFontSm","fontStyle","fontWeight","lineHeight","CustomTooltipForLine","colorMappings","compareDates","activeKey","active","label","classes","currentDate","dateDiff","moment","diff","compareDate","add","format","container","style","backgroundColor","boxShadow","borderRadius","direction","padding","marginBottom","entry","dataKey","isActive","pastRate","round","justifyContent","alignItems","marginRight","width","height","className","opacity","isFinite","isNaN","Math","abs","CustomTooltipForPie","currentValue","dateRange","capitalize","CustomTooltipForBar","main","headerFont","bodyFont","DetailTableNoBanner","props","datas","periodValue","y","comparePeriodValue","changeValue","v","floor","divide","border","col","lg","md","borderBottom","Fragment","display","mainContainer","marginTop","breakpoints","down","titleContainer","cardContainer","h1","h2","breadcrumbsButton","Gender","useDispatch","history","useHistory","isLoadding","useSelector","state","isLoading","filterColumn","landingFilter","landingDetails","barColor","useEffect","window","scrollTo","top","behavior","separator","underline","onClick","disableRipple","paddingLeft","ty","marginLeft","margin","right","left","bottom","vertical","tick","fill","barSize","content","cursor","cx","cy","labelLine","midAngle","innerRadius","outerRadius","percent","RADIAN","PI","radius","cos","sin","textAnchor","dominantBaseline","toFixed","changeRate","src","MALE","FEMALE","UNKNOWN","alt"],"mappings":"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","file":"static/js/29.38e19e6c.chunk.js","sourcesContent":["import fileDownload from 'js-file-download'\n\n\nexport const currencyFormat = (value: string | number) =>\n{\n    if (value !== undefined)\n    {\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n    return ''\n}\n\nexport const dateOptionMappings: any = \n{\n    'Last 7 days': 'Last 7 days',\n    'Last 30 days': 'Last 30 days',\n    'Last 90 days': 'Last 90 days',\n    'Last 365 days': 'Last 365 days',\n    'custom': 'Custom date range'\n}\n\nexport const bannerMappings: any = \n{\n    'KFC': 'KFC',\n    'PHHK': 'Pizza Hut',\n    'PHDHK': 'PHD'\n}\n\nexport const memberTypeMappings: any =\n{\n    'jrgMember': 'JRG Member',\n    'yuu': 'Yuu',\n    'anonymous': 'Anonymous',\n    'yuu_jrgMember': 'Yuu & JRG Member',\n    'yuu_anonymous': 'Yuu & Anonymous'\n}\n\nexport const bannerTypeMappings: any =\n{\n    'kfc': 'KFC',\n    'phd': 'PHD',\n    'kfc_phd': 'KFC & PHD',\n    'pizzahut': 'Pizza Hut',\n    'kfc_pizzahut': 'KFC & PH',\n    'phd_pizzahut': 'PH & PHD',\n    'kfc_phd_pizzahut': 'KFC, PH & PHD',\n}\n\nexport const memberTypeColorMappings: any =\n{\n    'jrgMember': '#4A78DF',\n    'yuu': '#AC6700',\n    'anonymous': '#65CBFF',\n    'yuu_jrgMember': '#FEC558',\n    'yuu_anonymous': '#8C7CEE'\n}\n\nexport const trafficTypeColorMappings: any =\n{\n    'Yuu' : '#4A78DF',\n    'Social' : '#AC6700',\n    'Referral': '#6553D8',\n    'Paid Display': '#65CBFF',\n    'Paid Video': '#CCA645',\n    'Paid Social': '#AA9CFF',\n    'Paid Search': '#1AADC1',\n    'Own': '#FF9649',\n    'Others': '#56D6E8',\n    'Organic Search': '#FEC558',\n    'Offline': '#318408',\n    'Direct': '#FE2D53',\n    'BYOD': '#52C41A',\n    'APP': '#FC75FF',\n    'Affiliate' : 'green'\n}\n\nexport const bannerTypeColorMappings: any =\n{\n    'kfc': '#AC6700',\n    'phd': '#65CBFF',\n    'kfc_phd': '#FEC558',\n    'pizzahut': '#52C41A',\n    'kfc_pizzahut': '#8C7CEE',\n    'phd_pizzahut': '#FC75FF',\n    'kfc_phd_pizzahut': '#4A78DF',\n}\n\nexport const bannerTypeColorMappingsForDetails: any =\n{\n    'KFC': '#AC6700',\n    'PHD': '#65CBFF',\n    'KFC & PHD': '#FEC558',\n    'Pizza Hut': '#52C41A',\n    'KFC & PH': '#8C7CEE',\n    'PH & PHD': '#FC75FF',\n    'KFC, PH & PHD': '#4A78DF',\n}\n\nexport const downloadFile = (data:any, filename:string) =>\n{\n    const downloadData = JSON.stringify(data)\n    fileDownload(downloadData, filename)\n}\n\n\n\n\n","import axios from 'axios'\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL ? process.env.REACT_APP_BACKEND_URL: 'https://jrg-backend-tcgfqg2xbq-df.a.run.app'\nconsole.log(process.env)\nconsole.log(BACKEND_URL)\nexport default axios.create({\n    baseURL: BACKEND_URL,\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"authorization\": \"key\"\n    }\n});\n","import {\n    HANDLE_MASTER_DATA_CHANGE,\n    HANDLE_MASTER_DATA_DATE_CHANGE,\n    HANDLE_CUSTOM_COMPARE_CKECK,\n    HANDLE_CUSTOM_COMPARE_DATE_RANGE,\n    FETCH_LANDING_DETAILS,\n    FETCH_PROFILES_DATA,\n    FETCH_GENDERS_DATA,\n    FETCH_AGERANGES_DATA,\n    FETCH_RECORDS_DATA,\n    FETCH_TICKETS_DATA,\n    FETCH_SALESAMOUNTS_DATA,\n    FETCH_TRAFFICS_DATA,\n    FETCH_TRAFFICSOURCES_DATA,\n    FETCH_FUNNELS_DATA,\n    FETCH_CONVERSIONS_DATA,\n    FETCH_MEMBERS_DATA,\n    FETCH_PURCHASES_DATA,\n    FETCH_TOPS_DATA,\n    LANDINGTAB,\n    LOADING\n} from './type'\nimport web from '../apis/httpRequest'\nimport _ from 'lodash'\n\n\nconst columnMapping:any = {\n    jrgMember: 'JRG Members',\n    yuu: 'Yuu',\n    anonymous: 'Anonymous',\n    yuu_jrgMember: 'Y & JRG',\n    yuu_anonymous: 'Y & Anonymous'\n}\n\nexport const handleLandingTab = (value: number) => async (dispatch:any) => {\n\n    dispatch({\n        type:LANDINGTAB,\n        payload: value\n    })\n}\n\nexport const fetchProfilesData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    //const payload = {market, banner, startDate, endDate, compareStartDate, compareEndDate}\n\n    dispatch({ type: FETCH_PROFILES_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/profiles?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_PROFILES_DATA,\n        payload: payload.data.data\n    })\n\n    dispatch({ type: FETCH_PROFILES_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchAgeRangesData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_AGERANGES_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/ages?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_AGERANGES_DATA,\n        payload: payload.data.data\n    })\n\n    dispatch({ type: FETCH_AGERANGES_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchGenderData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n\n    dispatch({ type: FETCH_GENDERS_DATA, payload: true })\n \n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/genders?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_GENDERS_DATA,\n        payload: payload.data.data\n    })\n    \n    dispatch({ type: FETCH_GENDERS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchRecordsData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_RECORDS_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/records?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    const newData = payload.data.data?.map((row: any,index: number) =>\n    {\n        const tempArray = payload.data.data.slice(0, index)\n        const tempResult:any = {date: row.date}\n        _.keys(row).filter(x => x !== 'date').map((key: any) =>\n        {\n            tempResult[key] = _.sumBy(tempArray, key)\n            return true\n        })\n        return tempResult\n    })\n\n    dispatch({\n        type: FETCH_RECORDS_DATA,\n        payload: newData\n    })\n\n    dispatch({ type: FETCH_RECORDS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchTicketsData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_TICKETS_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/tickets?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_TICKETS_DATA,\n        payload: payload.data.data\n    })\n    \n\n    dispatch({ type: FETCH_TICKETS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchSalesAmountsData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_SALESAMOUNTS_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/sales?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_SALESAMOUNTS_DATA,\n        payload: payload.data.data\n    })\n    dispatch({ type: FETCH_SALESAMOUNTS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchTrafficsData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_TRAFFICS_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/traffics?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_TRAFFICS_DATA,\n        payload: payload.data.data\n    })\n\n    dispatch({ type: FETCH_TRAFFICS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchTrafficSourcesData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_TRAFFICSOURCES_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/trafficsources?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_TRAFFICSOURCES_DATA,\n        payload: _.takeRight(_.sortBy(payload.data.data,'value'),4)\n    })\n\n    dispatch({ type: FETCH_TRAFFICSOURCES_DATA, payload: false })\n\n    return payload\n}\nexport const fetchFunnelsData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_FUNNELS_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/funnels?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_FUNNELS_DATA,\n        payload: payload.data.data\n    })\n\n    dispatch({ type: FETCH_FUNNELS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchConversionsData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n  \n    dispatch({ type: FETCH_CONVERSIONS_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/conversions?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n   \n    dispatch({\n        type: FETCH_CONVERSIONS_DATA,\n        payload: payload.data.data\n    })\n\n    dispatch({ type: FETCH_CONVERSIONS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchMembersData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n\n    dispatch({ type: FETCH_MEMBERS_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/membercounts?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_MEMBERS_DATA,\n        payload: payload.data.data\n    })\n\n    dispatch({ type: FETCH_MEMBERS_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchPurchasesData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: FETCH_PURCHASES_DATA, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/memberpurchases?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n\n    dispatch({\n        type: FETCH_PURCHASES_DATA,\n        payload: payload.data.data\n    })\n\n    dispatch({ type: FETCH_PURCHASES_DATA, payload: false })\n\n    return payload\n}\n\nexport const fetchTopsData = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    const payload = {market, banner, startDate, endDate, compareStartDate, compareEndDate}\n\n    dispatch({ type: FETCH_TOPS_DATA, payload: true })\n\n    await new Promise(r => setTimeout(r, 3000));\n\n    dispatch({\n        type: FETCH_TOPS_DATA,\n        payload: payload\n    })\n\n    dispatch({ type: FETCH_TOPS_DATA, payload: false })\n\n    return payload\n}\n\nexport const handleLandingFilter = (dataPayload: object) => async (dispatch:any) => {\n\n    const payload = dataPayload\n    dispatch({\n        type:HANDLE_MASTER_DATA_CHANGE,\n        payload:payload\n    })\n}\n\n\nexport const handleLandingFilterPeriod = (dataPayload: any) => async (dispatch:any) => {\n\n    const payload = {\n        period: dataPayload.periodOption,\n        startDate: dataPayload.startDate,\n        endDate: dataPayload.endDate,\n        compareDateRange: [dataPayload.compareStartDate,dataPayload.compareEndDate]\n    }\n    dispatch({\n        type:HANDLE_MASTER_DATA_DATE_CHANGE,\n        payload:payload\n    })\n}\n\nexport const handleCalendarChoose = (dateRange: string[]) => async (dispatch:any) => {\n\n    const payload = {\n        startDate: dateRange[0],\n        endDate: dateRange[1] \n    }\n    dispatch({\n        type:HANDLE_MASTER_DATA_DATE_CHANGE,\n        payload:payload\n    })\n}\n\nexport const handleLandingFilterComparePeriod = (dataPayload: any) => async (dispatch:any) => {\n\n    const payload = {\n        compareDateRange: [dataPayload.compareStartDate,dataPayload.compareEndDate]\n    }\n    dispatch({\n        type:HANDLE_MASTER_DATA_DATE_CHANGE,\n        payload:payload\n    })\n}\n\nexport const handleIsCustomCompareChecked = () => async (dispatch:any) => {\n\n    dispatch({\n        type:HANDLE_CUSTOM_COMPARE_CKECK,\n        payload:''\n    })\n}\n\nexport const handleIsCustomCompareDateRange = (dateRange: string[]) => async (dispatch:any) => {\n\n    dispatch({\n        type:HANDLE_CUSTOM_COMPARE_DATE_RANGE,\n        payload:dateRange\n    })\n}\n\nexport const unmount_details = () => async (dispatch:any) => {\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload: []\n    })\n}\n\nexport const fetch_records_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/records/details?${ bannerFetch }market=${ market }&startdate=${ startDate }&enddate=${ endDate }&comparestartdate=${ compareStartDate }&compareenddate=${ compareEndDate }`)\n    const rowData = payload.data.data\n\n    //f1 (for bar chart statistic data)\n    const f1Datas = _.flatMapDeep(_.values(rowData.data))\n    let f1Result: any = []\n    if (f1Datas.length > 0)\n    {\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        //only retrieve keys of current values\n        f1Result = keys.filter(x=> _.startsWith(x,'_') === false ).map((item) =>\n        {\n            return {\n                key: columnMapping[item],\n                value: _.sumBy(f1Datas, item),\n                lastValue: _.sumBy(f1Datas, `_${item}`)\n                \n            }\n        })\n    }\n\n    //f2 (for line chart statistic with date data)\n    const groupDateData = _.groupBy(f1Datas, 'date')\n    const f2tempResult = _.keys(groupDateData).map(da =>\n    {\n        return groupDateData[da].reduce((item1, item2) =>\n        {\n            let sum:any = {};\n\n            _.keys(item1).forEach(key => {\n                if (item2.hasOwnProperty(key))\n                {\n                    if (key === 'date')\n                    {\n                        sum[key] = item1[key]\n                    }\n                    else\n                    {\n                        sum[key] = item1[key] + item2[key]\n                    }\n                }  \n            })\n            return sum;\n        })\n    })\n    const f2Result = f2tempResult.map((row: any,index: number) =>\n    {\n        const tempArray = f2tempResult.slice(0, index)\n        const tempResult:any = {date: row.date}\n        _.keys(row).filter(x => x !== 'date').map((key: any) =>\n        {\n            tempResult[key] = _.sumBy(tempArray, key)\n            return true\n        })\n        return tempResult\n    })\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\n\nexport const fetch_genders_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch: any) =>\n{\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/genders/details?${ bannerFetch }market=${ market }&startdate=${ startDate }&enddate=${ endDate }&comparestartdate=${ compareStartDate }&compareenddate=${ compareEndDate }`)\n    const rowData = payload.data.data\n\n    if (rowData.data.length > 0)\n    {\n        let f1Result: any = []\n        const keys = _.keys(rowData.data[0]).filter(k => k !== 'date')\n        //only retrieve keys of current values\n        f1Result = keys.filter(x => _.startsWith(x, '_') === false).map((item) =>\n        {\n            return {\n                key: item,\n                name: item,\n                value: _.sumBy(rowData.data, item),\n                lastValue: _.sumBy(rowData.data, `_${ item }`)\n                    \n            }\n        })\n\n        //statisticData\n        let statisticData: any = []\n\n        const choosenPeriod = `${ rowData.startDate } to ${ rowData.endDate }`\n        const comparePeriod = `${ rowData.compareStartDate } to ${ rowData.compareEndDate }`\n        const periodValue = [choosenPeriod, comparePeriod]\n\n        const statisticResult = periodValue.map((eachPeriod, index) =>\n        {\n            const dataList = rowData.data\n\n            const tempDict: any = {\n                period: eachPeriod\n            }\n                \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke, '_') ? _.replace(ke, '_', '') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n\n        statisticData = statisticResult\n\n        const result = {\n            p1: f1Result,\n            p2: f1Result,\n            statisticData: statisticData\n        }\n            \n        dispatch({\n            type: FETCH_LANDING_DETAILS,\n            payload: result\n        })\n    }\n\n    dispatch({ type: LOADING, payload: false })\n}\n\nexport const fetch_ageRanges_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n \n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/ages/details?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n    const rowData = payload.data.data\n\n    if (rowData.data.length > 0)\n    {\n        let f1Result: any = []\n        const keys = _.keys(rowData.data[0]).filter(k => k !== 'date')\n        //only retrieve keys of current values\n        f1Result = keys.filter(x=> _.startsWith(x,'_') === false ).map((item) =>\n        {\n            return {\n                key: item,\n                name: item,\n                value: _.sumBy(rowData.data, item),\n                lastValue: _.sumBy(rowData.data, `_${item}`)\n                \n            }\n        })\n\n        //statisticData\n        let statisticData:any = []\n\n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n\n        const statisticResult = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n\n        statisticData = statisticResult\n\n        const result = {\n            p1: _.sortBy(f1Result,'key'),\n            p2: _.sortBy(f1Result,'key'),\n            statisticData: statisticData\n        }\n        \n        dispatch({\n            type:FETCH_LANDING_DETAILS,\n            payload:result\n        })\n    }\n    \n    dispatch({ type: LOADING, payload: false })\n}\n\nexport const fetch_tickets_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/tickets/details?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n    const rowData = payload.data.data\n\n    //f1 (for bar chart statistic data)\n    const f1Datas = _.flatMapDeep(_.values(rowData.data))\n    let f1Result: any = []\n    if (f1Datas.length > 0)\n    {\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        //only retrieve keys of current values\n        f1Result = keys.filter(x=> _.startsWith(x,'_') === false ).map((item) =>\n        {\n            return {\n                key: columnMapping[item],\n                value: _.sumBy(f1Datas, item),\n                lastValue: _.sumBy(f1Datas, `_${item}`)\n                \n            }\n        })\n    }\n\n    //f2 (for line chart statistic with date data)\n    const groupDateData = _.groupBy(f1Datas, 'date')\n    const f2Result = _.keys(groupDateData).map(da =>\n    {\n        return groupDateData[da].reduce((item1, item2) =>\n        {\n            let sum:any = {};\n\n            _.keys(item1).forEach(key => {\n                if (item2.hasOwnProperty(key))\n                {\n                    if (key === 'date')\n                    {\n                        sum[key] = item1[key]\n                    }\n                    else\n                    {\n                        sum[key] = item1[key] + item2[key]\n                    }\n                } \n                return true\n            })\n            return sum;\n        })\n    })\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\nexport const fetch_salesamounts_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`)) \n    const payload = await web.get(`/v1/masterdata/sales/details?${bannerFetch}market=${market}&startdate=${startDate}&enddate=${endDate}&comparestartdate=${compareStartDate}&compareenddate=${compareEndDate}`)\n    const rowData = payload.data.data\n\n    //f1 (for bar chart statistic data)\n    const f1Datas = _.flatMapDeep(_.values(rowData.data))\n    let f1Result: any = []\n    if (f1Datas.length > 0)\n    {\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        //only retrieve keys of current values\n        f1Result = keys.filter(x=> _.startsWith(x,'_') === false ).map((item) =>\n        {\n            return {\n                key: columnMapping[item],\n                value: _.sumBy(f1Datas, item),\n                lastValue: _.sumBy(f1Datas, `_${item}`)\n                \n            }\n        })\n    }\n\n    //f2 (for line chart statistic with date data)\n    const groupDateData = _.groupBy(f1Datas, 'date')\n    const f2Result = _.keys(groupDateData).map(da =>\n    {\n        return groupDateData[da].reduce((item1, item2) =>\n        {\n            let sum:any = {};\n\n            _.keys(item1).forEach(key => {\n                if (item2.hasOwnProperty(key))\n                {\n                    if (key === 'date')\n                    {\n                        sum[key] = item1[key]\n                    }\n                    else\n                    {\n                        sum[key] = item1[key] + item2[key]\n                    }\n                }  \n                return true\n            })\n            return sum;\n        })\n    })\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\nexport const fetch_traffics_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/traffics/details?${ bannerFetch }market=${ market }&startdate=${ startDate }&enddate=${ endDate }&comparestartdate=${ compareStartDate }&compareenddate=${ compareEndDate }`)\n    const rowData = payload.data.data\n\n    //f1 (for bar chart statistic data)\n    const f1Datas = _.flatMapDeep(_.values(rowData.data))\n    let f1Result: any = []\n    if (f1Datas.length > 0)\n    {\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        //only retrieve keys of current values\n        f1Result = keys.filter(x=> _.startsWith(x,'_') === false ).map((item) =>\n        {\n            return {\n                key: columnMapping[item],\n                value: _.sumBy(f1Datas, item),\n                lastValue: _.sumBy(f1Datas, `_${item}`)\n                \n            }\n        })\n    }\n\n    //f2 (for line chart statistic with date data)\n    const groupDateData = _.groupBy(f1Datas, 'date')\n    const f2Result = _.keys(groupDateData).map(da =>\n    {\n        return groupDateData[da].reduce((item1, item2) =>\n        {\n            let sum:any = {};\n\n            _.keys(item1).forEach(key => {\n                if (item2.hasOwnProperty(key))\n                {\n                    if (key === 'date')\n                    {\n                        sum[key] = item1[key]\n                    }\n                    else\n                    {\n                        sum[key] = item1[key] + item2[key]\n                    }\n                }  \n            })\n            return sum;\n        })\n    })\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\n\nexport const fetch_trafficSources_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch: any) =>\n{\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/trafficsources/details?${ bannerFetch }market=${ market }&startdate=${ startDate }&enddate=${ endDate }&comparestartdate=${ compareStartDate }&compareenddate=${ compareEndDate }`)\n    const rowData = payload.data.data \n\n    //f1 (for bar chart statistic data)\n    const f1Result: any = _.keys(rowData.data).map(traffic =>\n    {\n        const f1Datas = rowData.data[traffic]\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        const now = _.sum(keys.filter(x => _.startsWith(x, '_') === false).map((item) =>\n        {\n            return _.sumBy(f1Datas, item)\n        }))\n        const compare = _.sum(keys.filter(x => _.startsWith(x, '_') === true).map((item) =>\n        {\n            return _.sumBy(f1Datas, item)\n        }))\n        return {\n            key: traffic,\n            name: traffic,\n            value: now,\n            lastValue: compare\n        }\n    })\n\n    //f2 (for line chart statistic with date data)\n    const f2Temp = _.keys(rowData.data).map(traffic =>\n    {\n        const f2Datas = rowData.data[traffic].map((row: any) =>\n        {\n            const keys = _.keys(row).filter(k => k !== 'date')\n            const now = _.sum(keys.filter(x => _.startsWith(x, '_') === false).map((item) =>\n            {\n                return row[item]\n            }))\n            const compare = _.sum(keys.filter(x => _.startsWith(x, '_') === true).map((item) =>\n            {\n                return row[item]\n            }))\n\n            const sourceKeyName = traffic\n            const sourceKeyNameForCompare = `_${traffic}`\n            const tempResult = {\n                date: row.date,\n                [sourceKeyName]: now,\n                [sourceKeyNameForCompare]: compare\n            }\n            return  tempResult\n        })\n        return f2Datas\n    })\n    \n    const dateKeys:any = []\n    const tempResult:any = {}\n     _.flatten(f2Temp).map(row =>\n     {\n\n        const isExisted = _.includes(dateKeys, row.date)\n        if (isExisted)\n        {\n            tempResult[row.date] = {...tempResult[row.date],...row}\n        }\n        else\n        {\n            const tempDict = { ...row }\n            dateKeys.push(row.date)\n            tempResult[row.date] = tempDict\n        }\n        return true\n     })\n    \n    const f2Result = _.values(tempResult)\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\n\nexport const fetch_conversions_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/conversions/details?${ bannerFetch }market=${ market }&startdate=${ startDate }&enddate=${ endDate }&comparestartdate=${ compareStartDate }&compareenddate=${ compareEndDate }`)\n    const rowData = payload.data.data\n\n    //f1 (for bar chart statistic data)\n    const f1Datas = _.flatMapDeep(_.values(rowData.data))\n    let f1Result: any = []\n    if (f1Datas.length > 0)\n    {\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        //only retrieve keys of current values\n        f1Result = keys.filter(x=> _.startsWith(x,'_') === false ).map((item) =>\n        {\n            return {\n                key: columnMapping[item],\n                value: _.sumBy(f1Datas, item),\n                lastValue: _.sumBy(f1Datas, `_${item}`)\n                \n            }\n        })\n    }\n\n    //f2 (for line chart statistic with date data)\n    const groupDateData = _.groupBy(f1Datas, 'date')\n    const f2Result = _.keys(groupDateData).map(da =>\n    {\n        return groupDateData[da].reduce((item1, item2) =>\n        {\n            let sum:any = {};\n\n            _.keys(item1).forEach(key => {\n                if (item2.hasOwnProperty(key))\n                {\n                    if (key === 'date')\n                    {\n                        sum[key] = item1[key]\n                    }\n                    else\n                    {\n                        sum[key] = item1[key] + item2[key]\n                    }\n                }  \n            })\n            return sum;\n        })\n    })\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\n\nexport const fetch_members_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/membercounts/details?${ bannerFetch }market=${ market }&startdate=${ startDate }&enddate=${ endDate }&comparestartdate=${ compareStartDate }&compareenddate=${ compareEndDate }`)\n    const rowData = payload.data.data\n\n    //f1 (for bar chart statistic data)\n    const f1Result: any = _.keys(rowData.data).map(traffic =>\n    {\n        const f1Datas = rowData.data[traffic]\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        const now = _.sum(keys.filter(x => _.startsWith(x, '_') === false).map((item) =>\n        {\n            return _.sumBy(f1Datas, item)\n        }))\n        const compare = _.sum(keys.filter(x => _.startsWith(x, '_') === true).map((item) =>\n        {\n            return _.sumBy(f1Datas, item)\n        }))\n        return {\n            key: traffic,\n            value: now,\n            lastValue: compare\n        }\n    })\n\n    //f2 (for line chart statistic with date data)\n    const f2Temp = _.keys(rowData.data).map(traffic =>\n    {\n        const f2Datas = rowData.data[traffic].map((row: any) =>\n        {\n            const keys = _.keys(row).filter(k => k !== 'date')\n            const now = _.sum(keys.filter(x => _.startsWith(x, '_') === false).map((item) =>\n            {\n                return row[item]\n            }))\n            const compare = _.sum(keys.filter(x => _.startsWith(x, '_') === true).map((item) =>\n            {\n                return row[item]\n            }))\n\n            const sourceKeyName = traffic\n            const sourceKeyNameForCompare = `_${traffic}`\n            const tempResult = {\n                date: row.date,\n                [sourceKeyName]: now,\n                [sourceKeyNameForCompare]: compare\n            }\n            return  tempResult\n        })\n        return f2Datas\n    })\n    \n    const dateKeys:any = []\n    const tempResult:any = {}\n     _.flatten(f2Temp).map(row =>\n     {\n\n        const isExisted = _.includes(dateKeys, row.date)\n        if (isExisted)\n        {\n            tempResult[row.date] = {...tempResult[row.date],...row}\n        }\n        else\n        {\n            const tempDict = { ...row }\n            dateKeys.push(row.date)\n            tempResult[row.date] = tempDict\n        }\n        return true\n     })\n    \n    const f2Result = _.values(tempResult)\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n\n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\n\nexport const fetch_purchases_details = (market: string, banner: string[], startDate: string, endDate: string, compareStartDate: string, compareEndDate: string) => async (dispatch:any) => {\n\n    dispatch({ type: LOADING, payload: true })\n\n    const bannerFetch = \"\".concat(...banner.map(ban => `banner=${ ban }&`))\n    const payload = await web.get(`/v1/masterdata/memberpurchases/details?${ bannerFetch }market=${ market }&startdate=${ startDate }&enddate=${ endDate }&comparestartdate=${ compareStartDate }&compareenddate=${ compareEndDate }`)\n    const rowData = payload.data.data\n\n    //f1 (for bar chart statistic data)\n    const f1Result: any = _.keys(rowData.data).map(traffic =>\n    {\n        const f1Datas = rowData.data[traffic]\n        const keys = _.keys(f1Datas[0]).filter(k => k !== 'date')\n        const now = _.sum(keys.filter(x => _.startsWith(x, '_') === false).map((item) =>\n        {\n            return _.sumBy(f1Datas, item)\n        }))\n        const compare = _.sum(keys.filter(x => _.startsWith(x, '_') === true).map((item) =>\n        {\n            return _.sumBy(f1Datas, item)\n        }))\n        return {\n            key: traffic,\n            value: now,\n            lastValue: compare\n        }\n    })\n\n    //f2 (for line chart statistic with date data)\n    const f2Temp = _.keys(rowData.data).map(traffic =>\n    {\n        const f2Datas = rowData.data[traffic].map((row: any) =>\n        {\n            const keys = _.keys(row).filter(k => k !== 'date')\n            const now = _.sum(keys.filter(x => _.startsWith(x, '_') === false).map((item) =>\n            {\n                return row[item]\n            }))\n            const compare = _.sum(keys.filter(x => _.startsWith(x, '_') === true).map((item) =>\n            {\n                return row[item]\n            }))\n\n            const sourceKeyName = traffic\n            const sourceKeyNameForCompare = `_${traffic}`\n            const tempResult = {\n                date: row.date,\n                [sourceKeyName]: now,\n                [sourceKeyNameForCompare]: compare\n            }\n            return  tempResult\n        })\n        return f2Datas\n    })\n    \n    const dateKeys:any = []\n    const tempResult:any = {}\n     _.flatten(f2Temp).map(row =>\n     {\n\n        const isExisted = _.includes(dateKeys, row.date)\n        if (isExisted)\n        {\n            tempResult[row.date] = {...tempResult[row.date],...row}\n        }\n        else\n        {\n            const tempDict = { ...row }\n            dateKeys.push(row.date)\n            tempResult[row.date] = tempDict\n        }\n        return true\n     })\n    \n    const f2Result = _.values(tempResult)\n\n    //tableData\n    const statisticData:any = {}\n\n    _.keys(rowData.data).map( banner =>{\n        \n        const choosenPeriod = `${rowData.startDate} to ${rowData.endDate}`\n        const comparePeriod = `${rowData.compareStartDate} to ${rowData.compareEndDate}`\n        const periodValue = [choosenPeriod, comparePeriod]\n        \n        const result = periodValue.map((eachPeriod,index) => {\n            const dataList = rowData.data[banner]\n\n            const tempDict:any = {\n                period: eachPeriod\n            }\n            \n            // filter date column and each period value\n            _.keys(dataList[0]).filter(x => x !== 'date' && (index === 0 ? !_.startsWith(x, '_') : _.startsWith(x, '_'))).map((ke: any) =>\n            {\n                const key = _.startsWith(ke,'_') ? _.replace(ke,'_','') : ke\n                tempDict[key] = _.sumBy(dataList, ke)\n                return true\n            })\n            return tempDict\n        })\n        statisticData[banner] = result\n        return true\n    })\n\n    const result = {\n        p1: f1Result,\n        p2: f2Result,\n        statisticData: statisticData\n    }\n    \n    dispatch({\n        type:FETCH_LANDING_DETAILS,\n        payload:result\n    })\n\n    dispatch({ type: LOADING, payload: false })\n}\n\n","import React from 'react'\nimport {\n    Grid,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { currencyFormat } from '../utils/tool';\nimport moment from 'moment'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        tableNumberRateFont:{\n            fontFamily: 'Noto Sans',\n            fontSize: '14px',\n            color: '#FE2D53'\n        },\n        recordFontSm:{\n            fontFamily: 'Noto Sans',\n            fontStyle: 'normal',\n            fontWeight: 400,\n            fontSize: '14px',\n            lineHeight: '19px'\n        }\n    })\n);\n\nexport const CustomTooltipForLine = ({ active, payload, label }: any, colorMappings: any, startDate: string, endDate:string, compareDates: string[], activeKey:string) =>\n{\n    const classes = useStyles()\n    \n    if (active && payload && payload.length)\n    {\n        const currentDate = label\n        const dateDiff = moment(currentDate).diff(moment(startDate), 'days') \n        const compareDate = moment(compareDates[0]).add(dateDiff, 'days').format('YYYY-MM-DD')\n        \n        return (\n            <Grid container style={{backgroundColor:'#FFF',boxShadow: '0px 9px 28px 8px rgba(0, 0, 0, 0.05)', borderRadius: '5px'}}>\n                <Grid item container direction='column' style={{padding:'14px'}}>\n                        <Grid item style={{marginBottom:'6px'}}>\n                            <Typography style={{fontSize:'16px',fontFamily:'Noto sans'}}>{`${currentDate} vs. ${compareDate}`}</Typography>\n                        </Grid>\n                        \n                        {payload.map((entry: any, index: number) =>\n                        {\n                            if (_.includes(entry.name, '_'))\n                            {\n                                return <Grid key={entry.dataKey }/>\n                            }\n                            \n                            const isActive = (activeKey !== entry.dataKey && activeKey !== '')\n                            const key = '_' + entry.dataKey \n                            const pastRate = _.round((entry.value - entry.payload[key]) / entry.payload[key] * 100, 2)\n                            \n                            return (\n                            <Grid key={ entry.dataKey } item style={{marginBottom:'6px'}}>\n                                <Grid container justifyContent='space-between' alignItems='center'>\n                                    <Grid item>\n                                        <Grid container alignItems='center'>\n                                                <Grid item style={{marginRight:'8px'}}>\n                                                <Grid item style={{width:'10px',height:'10px',backgroundColor: colorMappings[entry.dataKey]}}></Grid>\n                                            </Grid>\n                                            <Grid item style={{marginRight:'3px'}}>\n                                                <Typography className={classes.recordFontSm} style={{opacity: isActive ? 0.3 :1 }}> {`${entry.name} :`}</Typography>\n                                            </Grid>\n                                            <Grid item >\n                                                <Typography className={classes.recordFontSm} style={{color:'#4A78DF',opacity: isActive ? 0.3 :1}}> {currencyFormat(entry.value)}</Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Grid container alignItems='center'>\n                                            {\n                                                pastRate >= 0 || !_.isFinite(pastRate) ?  \n                                                <ArrowDropUpIcon style={{color:'#52C41A', opacity: isActive? 0.3 : 1}}/>:\n\n                                                <ArrowDropDownIcon style={{color:'#FE2D53', opacity: isActive? 0.3 : 1}}/>\n                                            }\n                                            <Typography className={classes.tableNumberRateFont} style={pastRate >= 0 || !_.isFinite(pastRate) ? {color:'#52C41A',opacity: isActive? 0.3 : 1} :{opacity: isActive? 0.3 : 1} }>{`${_.isNaN(pastRate)? '0' : !_.isFinite(pastRate) ? '100' : Math.abs(pastRate)}%`}</Typography>                   \n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>)\n                        })}\n                    \n                </Grid>\n            </Grid>\n        );\n    }\n\n    return null;\n};\n\n\n\nexport const CustomTooltipForPie = ({ active, payload, label }: any, startDate: string,endDate:string, compareDates: string[]) =>\n{\n    const classes = useStyles()\n\n    if (active && payload && payload.length)\n    {\n        const name = payload[0].name\n        const currentValue = payload[0].value\n        const lastValue = payload[0].payload.lastValue\n        const pastRate = _.round((currentValue - lastValue) / lastValue * 100, 2)\n        \n        const dateRange = `${ startDate }~${ endDate } vs. ${ compareDates[0] }~${ compareDates[1] }`\n\n        return (\n            <Grid  container style={{backgroundColor:'#FFF',boxShadow: '0px 9px 28px 8px rgba(0, 0, 0, 0.05)', borderRadius: '5px'}}>\n                <Grid item container direction='column' style={{padding:'14px'}}>\n                    <Grid item style={{marginBottom:'6px'}}>\n                        <Typography style={{fontStyle:'Noto sans',color:'#000000',fontSize:'16px',fontWeight:500}}>{dateRange}</Typography>\n                    </Grid>\n                    <Grid item container  alignItems='center'>\n                        <Grid item style={{marginRight:'6px'}}>\n                            <Grid container>\n                                <Grid item style={{marginRight:'2px'}}>\n                                    <Typography style={{fontStyle:'Noto sans',color:'#0E0F0F',fontSize:'14px'}}>{`${_.capitalize(name)} :`}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography style={{fontStyle:'Noto sans',color:'#4A78DF',fontSize:'14px'}}>{currencyFormat(currentValue)}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems='center'>\n                                    {\n                                    pastRate >= 0 || !_.isFinite(pastRate) ?  \n                                    <ArrowDropUpIcon style={{color:'#52C41A'}}/>:\n\n                                    <ArrowDropDownIcon style={{color:'#FE2D53'}}/>\n                                }\n                                <Typography className={classes.tableNumberRateFont} style={pastRate >= 0 || !_.isFinite(pastRate) ? {color:'#52C41A'} :{} }>{`${_.isNaN(pastRate)? '0' : !_.isFinite(pastRate) ? '100' : Math.abs(pastRate)}%`}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return null;\n};\n\n\nexport const CustomTooltipForBar = ({ active, payload, label }: any, startDate: string, endDate:string, compareDates: string[]) =>\n{\n    const classes = useStyles()\n\n    if (active && payload && payload.length)\n    {\n        const currentValue = payload[0].value\n        const lastValue = payload[0].payload.lastValue\n        const pastRate = _.round((currentValue - lastValue) / lastValue * 100, 2)\n        \n        const dateRange = `${ startDate }~${ endDate } vs. ${ compareDates[0] }~${ compareDates[1] }`\n\n        return (\n            <Grid container style={{backgroundColor:'#FFF',boxShadow: '0px 9px 28px 8px rgba(0, 0, 0, 0.05)', borderRadius: '5px'}}>\n                <Grid item container direction='column' style={{padding:'14px'}}>\n                    <Grid item style={{marginBottom:'6px'}}>\n                        <Typography style={{fontStyle:'Noto sans',color:'#000000',fontSize:'16px',fontWeight:500}}>{dateRange}</Typography>\n                    </Grid>\n                    <Grid item container  alignItems='center'>\n                        <Grid item style={{marginRight:'6px'}}>\n                            <Grid container>\n                                <Grid item style={{marginRight:'2px'}}>\n                                    <Typography style={{fontStyle:'Noto sans',color:'#0E0F0F',fontSize:'14px'}}>{`${label} :`}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography style={{fontStyle:'Noto sans',color:'#4A78DF',fontSize:'14px'}}>{currencyFormat(currentValue)}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems='center'>\n                                {\n                                    pastRate >= 0 || !_.isFinite(pastRate) ?  \n                                    <ArrowDropUpIcon style={{color:'#52C41A'}}/>:\n\n                                    <ArrowDropDownIcon style={{color:'#FE2D53'}}/>\n                                }\n                                <Typography className={classes.tableNumberRateFont} style={pastRate >= 0 || !_.isFinite(pastRate) ? {color:'#52C41A'} :{} }>{`${_.isNaN(pastRate)? '0' : !_.isFinite(pastRate) ? '100' : Math.abs(pastRate)}%`}</Typography>                       \n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n    return null;\n};","export default __webpack_public_path__ + \"static/media/icon_gender_male.de699598.svg\";","export default __webpack_public_path__ + \"static/media/icon_gender_female.227e3376.svg\";","export default __webpack_public_path__ + \"static/media/icon_gender_unknown.ca4ccf14.svg\";","import React from 'react';\nimport {\n    Grid,\n    Typography,\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp'\nimport _ from 'lodash'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { currencyFormat } from '../utils/tool';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            width: '100%'\n        },\n        headerFont: {\n            fontFamily:'Noto sans',\n            fontSize:'16px',\n            fontWeight:'bold',\n            color:'#0E0F0F'\n        },\n        bodyFont: {\n            fontFamily:'Noto sans',\n            fontSize:'16px',\n            color:'#0E0F0F'\n        }\n    })\n);\n\ninterface props {\n    headers: string[],\n    datas: any\n}\n\nconst DetailTableNoBanner = (props: props) =>  {\n\n \n    const classes = useStyles()\n\n    if (props.datas?.length > 0)\n    {\n        const period = props.datas[0].period\n        const comparePeriod = props.datas[1].period\n        \n        const periodValue = _.sortBy(_.keys(props.datas[0])).filter(x => x !== 'period').map(y => props.datas[0][y]) as number[]\n        const comparePeriodValue = _.sortBy(_.keys(props.datas[1])).filter(x => x !== 'period').map(y => props.datas[1][y]) as number[]\n\n        const changeValue = periodValue.map((v: number, index: number) =>\n        {\n            const value = _.floor(_.divide((v - comparePeriodValue[index]), comparePeriodValue[index]) * 100, 2)\n            const finalValue = _.isNaN(value) ? '0' : !_.isFinite(value) ? '100' : value\n            return finalValue\n        })\n\n        return(\n            <Grid container direction={'column'} className={classes.main} >\n                <Grid item style={{width:'100%',border:'1px solid #989898'}}>\n                    \n                </Grid>\n                {/* header */}\n                <Grid item container alignItems='center' justifyContent='center' style={{height:'50px'}}>\n                    <Grid item style={{width:'20%'}}>\n                        <Grid container justifyContent='flex-end'>\n                            <Grid item style={{height:'50px',width:'1px',border:'1px solid #989898'}}></Grid>\n                        </Grid>\n                    </Grid>\n                    {props.headers.map(col =>\n                    {\n                        return (\n                            <Grid item lg md>\n                                <Grid container justifyContent='center'>\n                                    <Typography className={classes.headerFont}>{col}</Typography>\n                                </Grid>\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n                <Grid item style={{width:'100%',border:'1px solid #989898'}}>\n                    \n                </Grid>\n                {/* table body */}\n                <Grid item container direction='column' style={{backgroundColor:'#FFF'}} >\n                    <Grid item container alignItems='center' justifyContent='center' style={{height:'50px',borderBottom:'1px solid rgba(0, 0, 0, 0.06)'}}>\n                        <Grid item style={{width:'20%'}}>\n                            <Grid container justifyContent='space-between' alignItems='center'>\n                                <Grid item>\n                                    <Typography>{period}</Typography>\n                                </Grid>\n                                <Grid item style={{height:'50px',width:'1px',border:'1px solid #989898'}}></Grid>\n                            </Grid>\n                        </Grid>\n                        {\n                            periodValue.map((value: any) =>\n                            {\n                                return (\n                                    <Grid item lg md key={value}>\n                                        <Grid container justifyContent='center'>\n                                            <Typography className={classes.bodyFont}>{currencyFormat(value)}</Typography>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })\n                        }   \n                    </Grid>\n                    <Grid item container alignItems='center' justifyContent='center' style={{height:'50px',borderBottom:'1px solid rgba(0, 0, 0, 0.06)'}}>\n                        <Grid item style={{width:'20%'}}>\n                            <Grid container justifyContent='space-between' alignItems='center'>\n                                <Grid item>\n                                    <Typography>{comparePeriod}</Typography>\n                                </Grid>\n                                <Grid item style={{height:'50px',width:'1px',border:'1px solid #989898'}}></Grid>\n                            </Grid>\n                        </Grid>\n                        {\n                            comparePeriodValue.map((value: any) =>\n                            {\n                                return (\n                                    <Grid item lg md key={value}>\n                                        <Grid container justifyContent='center'>\n                                            <Typography className={classes.bodyFont}>{currencyFormat(value)}</Typography>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })\n                        }   \n                    </Grid>\n                    <Grid item container  alignItems='center' justifyContent='center' style={{height:'50px',borderBottom:'2px solid #989898'}}>\n                        <Grid item style={{width:'20%'}}>\n                            <Grid container justifyContent='space-between' alignItems='center'>\n                                <Grid item>\n                                    <Typography>{'Change(%)'}</Typography>\n                                </Grid>\n                                <Grid item style={{height:'50px',width:'1px',border:'1px solid #989898'}}></Grid>\n                            </Grid>\n                        </Grid>\n                        {\n                            changeValue.map((value: any) =>\n                            {\n                                return (\n                                    <Grid item lg md key={value}>\n                                        <Grid container justifyContent='center' alignItems='center'>\n                                            <Typography className={classes.bodyFont} style={value >= 0 ?  { color: '#52C41A' } : { color: '#FE2D53' }}>{`${ Math.abs(value)}%`}</Typography>                       \n                                             {\n                                                value >= 0 ?    \n                                                <ArrowDropUpIcon style={{color:'#52C41A'}}/>:\n\n                                                <ArrowDropDownIcon style={{color:'#FE2D53'}}/>\n                                            }\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })\n                        }\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n  \n    }\n    else\n    {\n        return <React.Fragment></React.Fragment>\n    }\n}\n\n\nexport default DetailTableNoBanner","import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../reducers/index'\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    IconButton,\n    Typography,\n} from '@material-ui/core';\nimport ReactLoading from \"react-loading\";\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport { PieChart, Pie, BarChart, Bar, Cell, LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport CropSquareIcon from '@mui/icons-material/CropSquare';\nimport DetailTableNoBanner from '../../../components/DetailTableNoBanner'\nimport _ from 'lodash'\nimport { fetch_genders_details } from '../../../actions/landingActions'\nimport MALE from '../../../static/icon_gender_male.svg'\nimport FEMALE from '../../../static/icon_gender_female.svg'\nimport UNKNOWN from '../../../static/icon_gender_unknown.svg' \nimport {\n    handleLandingTab,\n    unmount_details\n} from '../../../actions/landingActions'\nimport { dateOptionMappings } from '../../../utils/tool'\nimport { currencyFormat } from '../../../utils/tool';\nimport { CustomTooltipForBar , CustomTooltipForPie } from '../../../components/CustomToolbar'\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            display: 'flex',\n            width: '100%',\n            backgroundColor:'#F9F9F9'\n        },\n        mainContainer: {\n            width:'70%',\n            marginTop:'30px',\n            marginBottom: '100px',\n            backgroundColor:'#FFFFFF',\n            borderRadius:10,\n            boxShadow: '0px 0px 20px rgba(0, 115, 250, 0.1)',\n            [theme.breakpoints.down('lg')]:\n            {\n                width:'85%'\n            }\n        },\n        titleContainer: {\n            width:'100%',\n            backgroundColor:'#FFFFFF',\n            padding: '30px 60px 0px 60px',\n            height:'120px'\n        },\n        cardContainer:{\n\n        },\n        h1: {\n            fontSize:'28px',\n            color:'#000',\n            fontWeight: 600,\n            fontFamily:'Noto sans'\n        },\n        h2: {\n            fontSize:'14px',\n            color:'#989898',\n            fontWeight: 400,\n            fontFamily:'Noto sans'   \n        },\n        tableNumberRateFont:{\n            fontFamily: 'Noto Sans',\n            fontSize: '14px',\n            color: '#FE2D53'\n        },\n        recordFontSm:{\n            fontFamily: 'Noto Sans',\n            fontStyle: 'normal',\n            fontWeight: 400,\n            fontSize: '14px',\n            lineHeight: '19px'\n        },\n        breadcrumbsButton: {\n            '&:hover': {\n                backgroundColor:'transparent',\n                boxShadow:'none'\n            },\n        }\n    })\n);\n\n\nconst Gender = (props:Props) :React.ReactElement<Props>  =>  {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const isLoadding = useSelector((state: RootState) => state.isLoading)\n    const filterColumn = useSelector((state: RootState)=> state.landingFilter)\n    const landingDetails = useSelector((state: RootState) => state.landingDetails)\n    const figureColor = ['#4A78DF', '#AC6700', '#65CBFF', '#FEC558', '#8C7CEE']\n    const barColor = ['#4A78DF','#96C6FF']\n    const tableHeader = ['Female','Male','Unknown']\n\n    useEffect(() =>\n    {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n        dispatch(fetch_genders_details(filterColumn.market, filterColumn.banner, filterColumn.startDate, filterColumn.endDate, filterColumn.compareDateRange[0], filterColumn.compareDateRange[1]))\n    }, [])\n    \n    useEffect(() => {\n        return () => {\n            dispatch(unmount_details())\n        };\n    }, []);\n\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }: any) =>\n    {\n        const RADIAN = Math.PI / 180;\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n        return (\n            <text x={x} y={y} fill=\"white\" textAnchor=\"middle\" dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n            </text>\n        );\n    };\n    \n    return(\n        <Grid container direction='column' alignItems='center' className={classes.main}>\n            {/* title and breadcurumbs */}\n            <Grid item container alignItems='center' className={classes.titleContainer} direction='column'>\n                <Grid item container direction='column' >\n                    <Grid item container>\n                        <Breadcrumbs\n                            separator={<NavigateNextIcon fontSize=\"small\" />}\n                            aria-label=\"breadcrumb\"\n                        >\n                            <Link underline=\"hover\">\n                                <Button onClick={() => { dispatch(handleLandingTab(0)); history.push('/dashboard') }} disableRipple className={classes.breadcrumbsButton}><Typography className={classes.h2} >{'Dashboard'}</Typography></Button>\n                            </Link>\n                            <Link\n                                underline=\"hover\"\n                            >\n                                <Button onClick={() => { dispatch(handleLandingTab(0)); history.push('/dashboard') }} disableRipple className={classes.breadcrumbsButton}><Typography className={classes.h2} >{'Master data'}</Typography></Button>\n                            </Link>\n                            <Link\n                                underline=\"hover\"\n                            >\n                                <Button disableRipple className={classes.breadcrumbsButton}><Typography className={classes.h2} style={{color:'#5A91FF'}}>{'Gender details'}</Typography></Button>\n                            </Link>\n                        </Breadcrumbs>\n                    </Grid>\n                    <Grid item container justifyContent='space-between' alignItems='center' style={{ paddingLeft: '10px' }} >\n                        <Grid item>\n                            <Grid container  alignItems='center'>\n                                <IconButton disableRipple style={{ backgroundColor: 'transparent', padding:0, marginRight:'20px'}} onClick={() => { dispatch(handleLandingTab(0)); history.push('/dashboard') }} >\n                                    <ArrowBackIosIcon style={{color:'#000'}}/>\n                                </IconButton>\n                                \n                                <Grid item >\n                                    <Typography className={classes.h1}>{'Gender details'}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container >\n                                <Grid item>\n                                    <Grid container alignItems='flex-end' direction='column'>\n                                        <Grid item>\n                                            <Typography style={{fontSize:'18px',fontFamily:'Noto sans', color:'#0E0F0F'}}>{`Date : ${filterColumn.startDate} to ${filterColumn.endDate}`}</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography style={{fontSize:'12px',fontFamily:'Noto sans', color:'#989898'}}>{`Compate : ${filterColumn.compareDateRange[0]} to ${filterColumn.compareDateRange[1]}`}</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {/* main container */}\n            {isLoadding ?\n                <Grid container justifyContent='center' alignItems='center' style={{ height: '70vh' }}>\n                    <ReactLoading type={'bars'} color=\"#5A91FF\" />\n                </Grid>\n                :\n                <Grid item container alignItems='center' className={classes.mainContainer} direction='column'>\n                    <Grid item container style={{ marginTop: '30px', padding: '0px 45px', width: '100%' }}>\n                        <Grid item lg={6} md={6}>\n                            <Grid item container direction='column' className={classes.cardContainer} >\n                                <Grid container style={{ marginTop: '30px' }}>\n                                    <Grid item >\n                                        <Typography style={{ fontSize: '18px', fontFamily: 'Noto sans' }} >{'Gender'}</Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid container alignItems='center' style={{ marginTop: '18px' }}>\n                                    {[dateOptionMappings[filterColumn.period], 'Preceding period'].map((ty, index) =>\n                                    {\n                                        return (\n                                            <Grid item key={ty}>\n                                                <Grid container direction='row' alignItems='center' style={{ marginRight: '20px' }}>\n                                                    <CropSquareIcon style={{ width: '10px', height: '10px', marginRight: '8px', color: barColor[index], backgroundColor: barColor[index] }} />\n                                                    <Grid item>\n                                                        <Typography style={{ fontSize: '14px', fontFamily: 'Noto sans' }}>{ty}</Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        )\n                                    })}\n                                </Grid>\n                                <Grid container style={{ width: '100%', height: '240px', marginTop: '20px', marginLeft: '-20px' }}>\n                                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                        <BarChart\n                                            width={700}\n                                            height={200}\n                                            data={landingDetails.p1}\n                                            margin={{\n                                                top: 5,\n                                                right: 30,\n                                                left: 20,\n                                                bottom: 5,\n                                            }}\n                                        >\n                                            <CartesianGrid vertical={false} />\n                                            <XAxis dataKey=\"key\" tick={{ color: '#989898', fontFamily: 'Roboto', fontWeight: 300, fontSize: '14px' }} />\n                                            <YAxis tick={{ color: '#989898', fontFamily: 'Roboto', fontWeight: 300, fontSize: '14px' }} />\n                                            <Bar dataKey=\"value\" fill=\"#4A78DF\" barSize={40} />\n                                            <Bar dataKey=\"lastValue\" fill=\"#96C6FF\" barSize={40} />\n                                            <Tooltip content={(payload) => CustomTooltipForBar(payload, filterColumn.startDate, filterColumn.endDate, filterColumn.compareDateRange)} cursor={{ fill: 'rgba(14, 15, 15, 0.1)' }} />\n                                        </BarChart>\n                                    </ResponsiveContainer>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item lg={6} md={6}>\n                            <Grid container direction='column' className={classes.cardContainer}>\n                                <Grid container justifyContent='center' alignItems='center' style={{ height: '200px', marginTop: '100px' }}>\n                                    <Grid item lg={6} md={6} style={{ height: '200px' }}>\n                                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                            <PieChart width={400} height={400}>\n                                                <Pie\n                                                    data={landingDetails.p1}\n                                                    cx=\"50%\"\n                                                    cy=\"50%\"\n                                                    labelLine={false}\n                                                    label={renderCustomizedLabel}\n                                                    outerRadius={100}\n                                                    fill=\"#8884d8\"\n                                                    dataKey=\"value\"\n                                                >\n                                                    {landingDetails.p1?.map((entry: any, index: any) => (\n                                                        <Cell key={`cell-${ index }`} fill={entry.key === 'male' ? '#4A78DF' : entry.key === 'female' ? '#65CBFF' : '#989898'} />\n                                                    ))}\n                                                </Pie>\n                                                <Tooltip content={(payload) => CustomTooltipForPie(payload, filterColumn.startDate, filterColumn.endDate, filterColumn.compareDateRange)} />\n                                            </PieChart>\n                                        </ResponsiveContainer>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} style={{ paddingLeft: '30px' }}>\n                                        <Grid container direction='column' justifyContent='center' alignItems='center' >\n                                            {landingDetails.p1?.map((row: any, index: any) =>\n                                            {\n                                                const changeRate = _.floor((row.value - row.lastValue) / row.lastValue * 100, 2)\n                                                return (\n                                                    <Grid key={row.key} item container direction='row' alignItems='center' style={{ margin: '20px 0px' }} >\n                                                        <Grid item lg={5} md={5}>\n                                                            <Grid container alignItems='center' >\n                                                                <img src={_.capitalize(row.key) === 'Male' ? MALE : _.capitalize(row.key) === 'Female' ? FEMALE : UNKNOWN} alt={row.key} style={{ width: '20px', height: '40px', marginRight: '10px' }} />\n                                                                <Grid item>\n                                                                    <Typography style={{ fontSize: '16px', fontFamily: 'Noto sans', color: '#0E0F0' }}>{_.capitalize(row.key)}</Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item lg={3} md={3}>\n                                                            <Typography style={{ fontSize: '18px', fontFamily: 'Noto sans', color: '#5A91FF' }}>{currencyFormat(row.value)}</Typography>\n                                                            \n                                                        </Grid>\n                                                        <Grid item lg md>\n                                                            <Grid container alignItems='center'>\n                                                                {\n                                                                    changeRate > 0 ?\n                                                                        <ArrowDropUpIcon style={{ color: '#52C41A' }} /> :\n\n                                                                        <ArrowDropDownIcon style={{ color: '#FE2D53' }} />\n                                                                }\n                                                                <Typography className={classes.tableNumberRateFont} style={changeRate > 0 ? { color: '#52C41A' } : {}}>{`${ Math.abs(changeRate) }%`}</Typography>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                )\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    {/* statistic area */}\n                    <Grid item container style={{ marginTop: '40px', marginBottom: '40px', padding: '0px 45px', width: '100%' }}>\n                        <DetailTableNoBanner headers={tableHeader} datas={landingDetails.statisticData} />\n                    </Grid>\n                </Grid>\n            }\n        </Grid>\n    )\n}\n\nexport default Gender"],"sourceRoot":""}