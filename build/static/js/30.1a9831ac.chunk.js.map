{"version":3,"sources":["utils/tool.ts","actions/audienceAction.ts","apis/httpRequest.ts","pages/audience_new/ColumnTypeGenerator_3.tsx","pages/audience_new/FilterColumn_3.tsx","pages/audience_new/ColumnTypeGenerator_4.tsx","pages/audience_new/FilterColumn_4.tsx","pages/audience_new/FilterSection.tsx","static/icon_status_draft.svg","static/icon_status_active.svg","pages/audience/AudienceDetailPages.tsx"],"names":["currencyFormat","value","undefined","toString","replace","dateOptionMappings","bannerMappings","memberTypeMappings","bannerTypeMappings","memberTypeColorMappings","trafficTypeColorMappings","bannerTypeColorMappings","bannerTypeColorMappingsForDetails","downloadFile","data","filename","downloadData","JSON","stringify","fileDownload","handleCreateAudienceTag","tag","dispatch","a","name","color","createUser","web","post","payload","handleModifyAudienceTag","put","id","handleDeleteAudienceTag","delete","fetchAudienceTag","get","type","FETCH_AUDIENCE_TAG","handleConfirmChecked","handleMutipleConfirmChecked","idList","Promise","all","map","fetchSpecificAudience","AUDIENCE_LOADING","status","FETCH_SPECIFIC_AUDIENCE","form","banner","details","filtering","tags","schedule","actionDestination","INIT_AUDIENCE_FORM","handleSpecificAudienceIntoForm","audience","unmount_audience_details","UNMOUNT_AUDIENCE_FORM","fetchAudience","FETCH_AUDIENCE","duplicatedAudience","randomChar","Math","random","slice","confirm","lastUpdatedBy","x","createAudience","body","audi","index","length","connector","modifyAudience","originalData","deleteAudience","handleMutipleDelete","handleAudienceFilter","HANDLE_AUDIENCE_FILTER","handleAudienceFormForName","HANDLE_AUDIENCE_FORM_NAME","handleAudienceFormForBanner","HANDLE_AUDIENCE_FORM_BANNER","handleAudienceFormForTags","HANDLE_AUDIENCE_FORM_TAGS","handleAudienceFormForTagsAfterEditTag","HANDLE_AUDIENCE_FORM_TAGS_AFTER_EDIT","handleAudienceFormForSchedule","scheduleForm","HANDLE_AUDIENCE_FORM_SCHEDULE","handleAudienceFormForAction","HANDLE_AUDIENCE_FORM_ACTION","handleAudienceAddFilter","creator","currentLength","HANDLE_AUDIENCE_FORM_FILTERING_ADD","handleAudienceRemoveFilter","filterID","HANDLE_AUDIENCE_FORM_FILTERING_REMOVE","handleAudienceChangeConnectorFilter","HANDLE_AUDIENCE_FORM_FILTERING_CHANGE","handleAudienceFilterStartTime","time","startTime","handleAudienceFilterEndTime","endTime","handleAudienceChangeAddFilterButton","chooseValue","filterColumn","temp","audienceSelectorMapping","filter","column","_","includes","maxId","max","filterId","defaultFilter","filterName","subFilterName","subValue","optionValues","operator","handleAudienceChangeCopyFilterButton","specificId","specificFilter","handleAudienceChangeRefineFilterButton","handleAudienceChangeRemoveFilterButton","handleAudienceChangeForName","newFilter","modifyFilter","keys","sortBy","handleAudienceChangeForOperator","selectedOperator","handleAudienceChangeForValues","mutipleValue","value1","value2","tempList","handleAudienceChangeForNameMutidimension","subname","handleAudienceChangeForSubNameMutidimension","mappings","handleAudienceChangeForOperatorMutidimension","handleAudienceChangeForValuesMutidimension","BACKEND_URL","process","REACT_APP_BACKEND_URL","console","log","axios","create","baseURL","headers","MutipleSelectBadge","props","useDispatch","Grid","item","style","marginRight","padding","margin","borderRadius","backgroundColor","border","container","justifyContent","alignItems","width","height","Typography","fontFamily","fontSize","label","IconButton","onClick","event","stopPropagation","exceptValues","fill","marginLeft","RenderValueItem","optionsSelector","classes","editable","TextField","variant","inputProps","underline","borderBottom","InputProps","startAdornment","disableUnderline","placeholder","disabled","onChange","target","paddingLeft","FormControl","fullWidth","Select","labelId","option","MenuItem","lang","InputLabelProps","shrink","options","Autocomplete","getOptionLabel","defaultValue","disableCloseOnSelect","ListboxProps","maxHeight","values","renderInput","params","mutipleOptions","multiple","renderTags","items","InputAdornment","position","useStyles","makeStyles","theme","createStyles","profileContainer","borderLeft","createButton","filterPannel","background","marginBottom","columnSelected","overflow","whiteSpace","textOverflow","operactorSelected","serachInput","h1","fontWeight","h2","selectBorder","borderColor","createorButton","divider","filterButton","boxShadow","FilterColumn_3","useTheme","optionSelector","useSelector","state","audienceFilterSelecetor","matchesMac","useMediaQuery","breakpoints","down","React","useState","className","renderValue","ColumnTypeGenerator","refineButton","FilterColumn_4","styled","LinearProgress","linearProgressClasses","colorPrimary","bar","group","chooseSubValue","filterKey","ColumnTypeGenerator_4","marginTop","Button","startIcon","disableRipple","textTransform","RenderFilterColumn","dimension3","dimension4","di","dimension","push","viewDimenstion3","groupBy","viewDimenstion4","FilterSection","collapse","setCollapse","direction","paddingTop","Collapse","in","timeout","unmountOnExit","lg","md","main","display","titleContainer","mainContainer","nextButton","tagWord","tagButton","detailContainer","paddingBottom","selectDisableStyle","nonActiveButton","activeButton","Badge","AudienceDetailPages","history","useHistory","match","specificAudience","audienceForm","useEffect","separator","href","paddingRight","src","activeIcon","draftIcon","publishTime","lastUpdateBy","lastEdited","period","fromDay","moment","fromTime","format","creatorData"],"mappings":"6FAAA,0WAGaA,EAAiB,SAACC,GAE3B,YAAcC,IAAVD,EAEOA,EAAME,WAAWC,QAAQ,wBAAyB,KAEtD,IAGEC,EACb,CACI,cAAe,cACf,eAAgB,eAChB,eAAgB,eAChB,gBAAiB,gBACjB,OAAU,qBAGDC,EACb,CACI,IAAO,MACP,KAAQ,YACR,MAAS,OAGAC,EACb,CACI,UAAa,aACb,IAAO,MACP,UAAa,YACb,cAAiB,mBACjB,cAAiB,mBAGRC,EACb,CACI,IAAO,MACP,IAAO,MACP,QAAW,YACX,SAAY,YACZ,aAAgB,WAChB,aAAgB,WAChB,iBAAoB,iBAGXC,EACb,CACI,UAAa,UACb,IAAO,UACP,UAAa,UACb,cAAiB,UACjB,cAAiB,WAGRC,EACb,CACI,IAAQ,UACR,OAAW,UACX,SAAY,UACZ,eAAgB,UAChB,aAAc,UACd,cAAe,UACf,cAAe,UACf,IAAO,UACP,OAAU,UACV,iBAAkB,UAClB,QAAW,UACX,OAAU,UACV,KAAQ,UACR,IAAO,UACP,UAAc,SAGLC,EACb,CACI,IAAO,UACP,IAAO,UACP,QAAW,UACX,SAAY,UACZ,aAAgB,UAChB,aAAgB,UAChB,iBAAoB,WAGXC,EACb,CACI,IAAO,UACP,IAAO,UACP,YAAa,UACb,YAAa,UACb,WAAY,UACZ,WAAY,UACZ,gBAAiB,WAGRC,EAAe,SAACC,EAAUC,GAEnC,IAAMC,EAAeC,KAAKC,UAAUJ,GACpCK,IAAaH,EAAcD,K,o4CC7ElBK,EAA0B,SAACC,GAAD,8CAAkB,WAAOC,GAAP,iBAAAC,EAAA,6DAE/CT,EAAO,CACTU,KAAMH,EAAIG,KACVC,MAAOJ,EAAII,MACXC,WAAYL,EAAIK,YALiC,SAQ/BC,IAAIC,KAAJ,qBAA+Bd,GARA,cAQ/Ce,EAR+C,yBAS9CA,GAT8C,2CAAlB,uDAY1BC,EAA0B,SAACT,GAAD,8CAAkB,WAAOC,GAAP,iBAAAC,EAAA,6DAE/CT,EAAO,CACTU,KAAMH,EAAIG,KACVC,MAAOJ,EAAII,MACXC,WAAYL,EAAIK,YALiC,SAO/BC,IAAII,IAAJ,6BAA8BV,EAAIW,IAAMlB,GAPT,cAO/Ce,EAP+C,yBAQ9CA,GAR8C,2CAAlB,uDAW1BI,EAA0B,SAACZ,GAAD,8CAAkB,WAAOC,GAAP,eAAAC,EAAA,sEAE/BI,IAAIO,OAAJ,6BAAiCb,EAAIW,KAFN,cAE/CH,EAF+C,yBAG9CA,GAH8C,2CAAlB,uDAM1BM,EAAmB,yDAAM,WAAOb,GAAP,eAAAC,EAAA,sEAEZI,IAAIS,IAAJ,sBAFY,OAE5BP,EAF4B,OAIlCP,EAAS,CACLe,KAAKC,IACLT,QAASA,EAAQf,OANa,2CAAN,uDAUnByB,EAAuB,SAACP,GAAD,8CAAgB,WAAOV,GAAP,eAAAC,EAAA,sEAE1BI,IAAIC,KAAJ,wBAA0BI,EAA1B,cAF0B,cAE1CH,EAF0C,yBAGzCA,GAHyC,2CAAhB,uDAMvBW,EAA8B,SAACC,GAAD,8CAAsB,WAAOnB,GAAP,SAAAC,EAAA,+EAEtDmB,QAAQC,IAAIF,EAAOG,KAAI,SAAAZ,GAAE,OAAIL,IAAIC,KAAJ,wBAA0BI,EAA1B,mBAFyB,2CAAtB,uDAK9Ba,EAAwB,SAACb,GAAD,8CAAgB,WAAOV,GAAP,iBAAAC,EAAA,6DAEjDD,EAAS,CAAEe,KAAMS,IAAkBjB,SAAS,IAFK,SAI3BF,IAAIS,IAAJ,wBAAuCJ,IAJZ,OAM1B,OAFjBH,EAJ2C,QAMrCkB,QAERzB,EAAS,CACLe,KAAMW,IACNnB,QAASA,EAAQf,OAInBmC,EAAO,CACTzB,KAAMK,EAAQf,KAAKU,KACnB0B,OAAQrB,EAAQf,KAAKqC,QAAQD,OAC7BE,UAAWvB,EAAQf,KAAKqC,QAAQC,UAChCC,KAAMxB,EAAQf,KAAKuC,KACnBC,SAAUzB,EAAQf,KAAKqC,QAAQG,SAC/BC,kBAAmB1B,EAAQf,KAAKqC,QAAQI,mBAG5CjC,EAAS,CAAEe,KAAMmB,IAAoB3B,QAASoB,IAC9C3B,EAAS,CAAEe,KAAMS,IAAkBjB,SAAS,IAxBK,2CAAhB,uDA2BxB4B,EAAiC,SAACC,GAAD,8CAA4B,WAAOpC,GAAP,iBAAAC,EAAA,sEAEhDI,IAAIS,IAAJ,wBAAuCsB,EAAS1B,KAFA,OAI/C,OAFjBH,EAFgE,QAI1DkB,QAERzB,EAAS,CACLe,KAAMW,IACNnB,QAASA,EAAQf,OAGnBmC,EAAO,CACTzB,KAAMkC,EAASlC,KACf0B,OAAQQ,EAASP,QAAQD,OACzBE,UAAWM,EAASP,QAAQC,UAC5BC,KAAMK,EAASL,KACfC,SAAUI,EAASP,QAAQG,SAC3BC,kBAAmBG,EAASP,QAAQI,mBAGxCjC,EAAS,CAAEe,KAAMmB,IAAoB3B,QAASoB,IApBwB,2CAA5B,uDAuBjCU,EAA2B,yDAAM,WAAOrC,GAAP,SAAAC,EAAA,6DAE1CD,EAAS,CAAEe,KAAMuB,IAAuB/B,QAAS,KAFP,mBAGnC,GAHmC,2CAAN,uDAO3BgC,EAAgB,yDAAM,WAAOvC,GAAP,eAAAC,EAAA,6DAE/BD,EAAS,CAAEe,KAAMS,IAAkBjB,SAAS,IAFb,SAITF,IAAIS,IAAJ,iBAJS,cAMR,OAFjBP,EAJyB,QAMnBkB,QAERzB,EAAS,CACLe,KAAMyB,IACNjC,QAASA,EAAQf,OAIzBQ,EAAS,CAAEe,KAAMS,IAAkBjB,SAAS,IAdb,kBAexBA,GAfwB,2CAAN,uDAkBhBkC,EAAqB,SAACL,GAAD,8CAA4B,WAAOpC,GAAP,mBAAAC,EAAA,6DAEpDyC,EAAaC,KAAKC,SAAS/D,SAAS,IAAIgE,MAAM,EAAG,GACjDrD,EAAO,CACTU,KAAK,GAAD,OAAKkC,EAASlC,KAAd,YAAsBwC,GAC1BI,SAAS,EACTjB,QAASO,EAASP,QAClBkB,cAAeX,EAASW,cACxBhB,KAAMK,EAASL,KAAKT,KAAI,SAAA0B,GAAC,OAAGA,EAAEtC,OARwB,SAWpCL,IAAIC,KAAJ,gBAA0Bd,GAXU,cAWpDe,EAXoD,yBAYnDA,GAZmD,2CAA5B,uDAerB0C,EAAiB,SAACb,GAAD,8CAA4B,WAAOpC,GAAP,iBAAAC,EAAA,6DAEhDiD,EAAO,CACThD,KAAMkC,EAASlC,KACf6C,cAAe,cACfhB,KAAMK,EAASL,KAAKT,KAAI,SAAA0B,GAAC,OAAIA,EAAEtC,MAC/BmB,QAAS,CACLC,UAAWM,EAASN,UAAUR,KAAI,SAAC6B,EAAkBC,GAEjD,OAAIA,IAAUhB,EAASN,UAAUuB,OAAS,EAE/B,2BAAKF,GAAS,CAACG,UAAW,KAI1BH,KAGfvB,OAAQQ,EAASR,OACjBI,SAAUI,EAASJ,SACnBC,kBAAmBG,EAASH,oBApBkB,SAwBhC5B,IAAIC,KAAJ,gBAAuC4C,GAxBP,cAwBhD3C,EAxBgD,yBAyB/CA,GAzB+C,2CAA5B,uDA4BjBgD,EAAiB,SAACnB,EAAwBoB,GAAzB,8CAAuD,WAAOxD,GAAP,iBAAAC,EAAA,6DAE3EiD,EAAO,CACTJ,QAASU,EAAaV,QACtB5C,KAAMkC,EAASlC,KACf6C,cAAe,cACfhB,KAAMK,EAASL,KAAKT,KAAI,SAAA0B,GAAC,OAAIA,EAAEtC,MAC/BmB,QAAS,CACLC,UAAWM,EAASN,UAAUR,KAAI,SAAC6B,EAAkBC,GAEjD,OAAIA,IAAUhB,EAASN,UAAUuB,OAAS,EAE/B,2BAAKF,GAAS,CAACG,UAAW,KAI1BH,KAGfvB,OAAQQ,EAASR,OACjBI,SAAUI,EAASJ,SACnBC,kBAAmBG,EAASH,oBArB6C,SAyB3D5B,IAAII,IAAJ,wBAAyB+C,EAAa9C,IAAKwC,GAzBgB,cAyB3E3C,EAzB2E,yBA0B1EA,GA1B0E,2CAAvD,uDA6BjBkD,EAAiB,SAAC/C,GAAD,8CAAgB,WAAOV,GAAP,eAAAC,EAAA,sEAEpBI,IAAIO,OAAJ,wBAA4BF,IAFR,cAEpCH,EAFoC,yBAGnCA,GAHmC,2CAAhB,uDAMjBmD,EAAsB,SAACvC,GAAD,8CAAsB,WAAOnB,GAAP,SAAAC,EAAA,+EAE9CmB,QAAQC,IAAIF,EAAOG,KAAI,SAAAZ,GAAE,OAAIL,IAAIO,OAAJ,wBAA4BF,SAFX,2CAAtB,uDAKpBiD,EAAuB,SAACpD,GAAD,8CAAqB,WAAOP,GAAP,SAAAC,EAAA,sDACvDD,EAAS,CACLe,KAAK6C,IACLrD,QAAQA,IAH2C,2CAArB,uDAQzBsD,EAA4B,SAAC3D,GAAD,8CAAkB,WAAOF,GAAP,SAAAC,EAAA,sDAEvDD,EAAS,CACLe,KAAK+C,IACLvD,QAAQL,IAJ2C,2CAAlB,uDAQ5B6D,EAA8B,SAAC7D,GAAD,8CAAkB,WAAOF,GAAP,SAAAC,EAAA,sDAEzDD,EAAS,CACLe,KAAKiD,IACLzD,QAAQL,IAJ6C,2CAAlB,uDAS9B+D,EAA4B,SAAClE,GAAD,8CAAkB,WAAOC,GAAP,SAAAC,EAAA,sDAEvDD,EAAS,CACLe,KAAKmD,IACL3D,QAAQR,IAJ2C,2CAAlB,uDAQ5BoE,EAAwC,SAACpE,GAAD,8CAAkB,WAAOC,GAAP,SAAAC,EAAA,sDAEnED,EAAS,CACLe,KAAKqD,IACL7D,QAAQR,IAJuD,2CAAlB,uDAQxCsE,EAAgC,SAACC,GAAD,8CAAuB,WAAOtE,GAAP,SAAAC,EAAA,sDAEhED,EAAS,CACLe,KAAKwD,IACLhE,QAAQ+D,IAJoD,2CAAvB,uDAQhCE,EAA8B,SAACvC,GAAD,8CAA4B,WAAOjC,GAAP,SAAAC,EAAA,sDAEnED,EAAS,CACLe,KAAK0D,IACLlE,QAAQ0B,IAJuD,2CAA5B,uDAQ9ByC,EAA0B,SAACC,EAAsBC,GAAvB,8CAAiD,WAAO5E,GAAP,eAAAC,EAAA,sDAE9EM,EAF8E,2BAE/DoE,GAAY,CAAEjE,GAAIkE,IAEvC5E,EAAS,CACLe,KAAK8D,IACLtE,QAASA,IANuE,2CAAjD,uDAU1BuE,EAA6B,SAACC,GAAD,8CAAsB,WAAO/E,GAAP,SAAAC,EAAA,sDAE5DD,EAAS,CACLe,KAAKiE,IACLzE,QAASwE,IAJ+C,2CAAtB,uDAQ7BE,EAAsC,SAACN,GAAD,8CAA0B,WAAO3E,GAAP,eAAAC,EAAA,sDAEnEM,EAFmE,2BAEpDoE,GAAY,CAAErB,WAAYqB,EAAQrB,YACvDtD,EAAS,CACLe,KAAKmE,IACL3E,QAASA,IAL4D,2CAA1B,uDAStC4E,EAAgC,SAACR,EAAsBS,GAAvB,8CAAuC,WAAOpF,GAAP,eAAAC,EAAA,sDAE1EM,EAF0E,2BAE3DoE,GAAY,CAAEU,UAAWD,IAC9CpF,EAAS,CACLe,KAAKmE,IACL3E,QAASA,IALmE,2CAAvC,uDAShC+E,EAA8B,SAACX,EAAsBS,GAAvB,8CAAuC,WAAOpF,GAAP,eAAAC,EAAA,sDAExEM,EAFwE,2BAEzDoE,GAAY,CAAEY,QAASH,IAC5CpF,EAAS,CACLe,KAAKmE,IACL3E,QAASA,IALiE,2CAAvC,uDAS9BiF,EAAsC,SAACb,GAAD,8CAA0B,WAAO3E,GAAP,uBAAAC,EAAA,sDAEnEwF,EAAcd,EAAQe,aAAapE,KAAI,SAAA0B,GAAC,OAAIA,EAAErE,UAC9CgH,EAAOC,IAAwBjB,EAAQhG,OAAOkH,QAAO,SAACC,GAExD,OAAgD,IAAzCC,IAAEC,SAASP,EAAYK,EAAOnH,UACtC,MAIOsH,OAA2DrH,IAAnDmH,IAAEG,IAAIvB,EAAQe,aAAapE,KAAI,SAAA0B,GAAC,OAAEA,EAAEmD,aAA2B,EAAIJ,IAAEG,IAAIvB,EAAQe,aAAapE,KAAI,SAAA0B,GAAC,OAAEA,EAAEmD,aAAuB,EACtIC,EAAgB,CAClBD,SAAUF,EACVI,WAAYV,EAAKzF,KACjBvB,MAAOgH,EAAKhH,MACZ2H,cAAe,GACfC,SAAU,GACVC,aAAc,GACdzF,KAAM4E,EAAK5E,KACX0F,SAAS,IAEPlG,EAZV,2BAYyBoE,GAAY,CAAEe,aAAa,GAAD,mBAAMf,EAAQe,cAAd,CAA4BU,MAC3EpG,EAAS,CACLe,KAAKmE,IACL3E,QAASA,KAxBwD,2CAA1B,uDA8BtCmG,EAAuC,SAAC/B,EAAsBgC,GAAvB,8CAA8C,WAAO3G,GAAP,qBAAAC,EAAA,sDAExFgG,OAA2DrH,IAAnDmH,IAAEG,IAAIvB,EAAQe,aAAapE,KAAI,SAAA0B,GAAC,OAAEA,EAAEmD,aAA2B,EAAIJ,IAAEG,IAAIvB,EAAQe,aAAapE,KAAI,SAAA0B,GAAC,OAAEA,EAAEmD,aAAuB,GACtIS,EAAiBjC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaQ,KAAY,MAIzEnH,EADV,2BACsBoH,GAAmB,CAAET,SAAUF,IAC3C1F,EAFV,2BAEyBoE,GAAY,CAAEe,aAAa,GAAD,mBAAMf,EAAQe,cAAd,CAA4BlG,MAC3EQ,EAAS,CACLe,KAAKmE,IACL3E,QAASA,KAX6E,2CAA9C,uDAiBvCsG,EAAyC,SAAClC,EAAsBgC,GAAvB,8CAA8C,WAAO3G,GAAP,qBAAAC,EAAA,sDAE1FgG,OAA2DrH,IAAnDmH,IAAEG,IAAIvB,EAAQe,aAAapE,KAAI,SAAA0B,GAAC,OAAEA,EAAEmD,aAA2B,EAAIJ,IAAEG,IAAIvB,EAAQe,aAAapE,KAAI,SAAA0B,GAAC,OAAEA,EAAEmD,aAAuB,GACtIS,EAAiBjC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaQ,KAAY,MAIzEnH,EADV,2BACsBoH,GAAmB,CAAET,SAAUF,EAAOK,cAAe,GAAIC,SAAU,GAAIC,aAAc,KACjGjG,EAFV,2BAEyBoE,GAAY,CAAEe,aAAa,GAAD,mBAAMf,EAAQe,cAAd,CAA4BlG,MAC3EQ,EAAS,CACLe,KAAKmE,IACL3E,QAASA,KAX+E,2CAA9C,uDAiBzCuG,EAAyC,SAACnC,EAAsBgC,GAAvB,8CAA8C,WAAO3G,GAAP,eAAAC,EAAA,sDAG1FM,EAH0F,2BAG3EoE,GAAY,CAAEe,aAAcf,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAEA,EAAEmD,WAAaQ,OAC/F3G,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IANmF,2CAA9C,uDAWzCwG,EAA8B,SAACpC,EAAsBkB,EAAsBmB,GAA7C,8CAAgE,WAAOhH,GAAP,iBAAAC,EAAA,sDAEjGgH,EAAe,CACjBd,SAAUN,EAAOM,SACjBpF,KAAMiG,EAAUjG,KAChBsF,WAAYW,EAAU9G,KACtBvB,MAAOqI,EAAUrI,MACjB8H,SAAUV,IAAEmB,KAAKF,EAAUP,UAAU,GACrCD,aAAc,GACdF,cAAe,GACfC,SAAU,IAERhG,EAZiG,2BAYlFoE,GAZkF,IAYzEe,aAAcK,IAAEoB,OAAF,sBAAaxC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaN,EAAOM,aAApE,CAA+Ec,IAAc,cAEzIjH,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IAhB0F,2CAAhE,uDAqB9B6G,EAAkC,SAACzC,EAAsBkB,EAAsBY,GAA7C,8CAAkE,WAAOzG,GAAP,qBAAAC,EAAA,sDAEvGoH,EAFuG,UAEpFzB,IAAwBjB,EAAQhG,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAFA,aAEpF,EAAwF8H,SAASA,GACpHQ,EAHuG,2BAGnFpB,GAHmF,IAG3EY,SAAUA,EAAU1F,KAAI,OAAEsG,QAAF,IAAEA,OAAF,EAAEA,EAAkBtG,OACxER,EAJuG,2BAIxFoE,GAJwF,IAI/Ee,aAAcK,IAAEoB,OAAF,sBAAaxC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaN,EAAOM,aAApE,CAA+Ec,IAAc,cAEzIjH,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IARgG,2CAAlE,uDAalC+G,EAAgC,SAAC3C,EAAsBkB,EAAsBlH,EAAY4I,GAAzD,8CAA+F,WAAOvH,GAAP,qBAAAC,EAAA,sDAEpIuG,EAAiC,CAAEgB,OAAQ,GAAIC,OAAQ,SACtC7I,IAAjB2I,GAEMG,EAAW7B,EAAOW,aACH,IAAjBe,EAEAG,EAASF,OAAS7I,EAIlB+I,EAASD,OAAS9I,EAEtB6H,EAAekB,GAIflB,EAAagB,OAAS7I,EAGpBsI,EArBkI,2BAqB9GpB,GArB8G,IAqBtGW,aAAcA,IAE1CjG,EAvBkI,2BAuBnHoE,GAvBmH,IAuB1Ge,aAAcK,IAAEoB,OAAF,sBAAaxC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaN,EAAOM,aAApE,CAA+Ec,IAAe,cAE1IjH,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IA3B2H,2CAA/F,uDAiChCoH,EAA4C,SAAChD,EAAsBkB,EAAsBmB,GAA7C,8CAAgE,WAAOhH,GAAP,uBAAAC,EAAA,sDAE/GgH,EAAe,CACjBd,SAAUN,EAAOM,SACjBpF,KAAMiG,EAAUjG,KAChBsF,WAAYW,EAAU9G,KACtBvB,MAAOqI,EAAUrI,MACjB8H,cAAiC7H,IAAtBoI,EAAUY,QAAuB,GAAK7B,IAAEmB,KAAF,UAAOF,EAAUY,QAAQ7B,IAAEmB,KAAKF,EAAUY,SAAS,WAAnD,aAAO,EAAiDnB,UAAU,GACnHD,aAAc,GACdF,mBAAqC1H,IAAtBoI,EAAUY,QAAuB,GAAjC,UAAqCZ,EAAUY,QAAQ7B,IAAEmB,KAAKF,EAAUY,SAAS,WAAjF,aAAqC,EAAiD1H,KACrGqG,cAAiC3H,IAAtBoI,EAAUY,QAAuB,GAAjC,UAAqCZ,EAAUY,QAAQ7B,IAAEmB,KAAKF,EAAUY,SAAS,WAAjF,aAAqC,EAAiDjJ,OAE/F4B,EAZ+G,2BAYhGoE,GAZgG,IAYvFe,aAAcK,IAAEoB,OAAF,sBAAaxC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaN,EAAOM,aAApE,CAA+Ec,IAAc,cAEzIjH,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IAhBwG,2CAAhE,uDAoB5CsH,EAA+C,SAAClD,EAAsBkB,EAAsB+B,GAA7C,8CAAiE,WAAO5H,GAAP,qBAAAC,EAAA,sDAEnH6H,EAFmH,UAExGlC,IAAwBjB,EAAQhG,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAFoB,aAExG,EAAwFiJ,QAAQA,GAC3GX,EAHmH,2BAIlHpB,GAJkH,IAKrHS,cAAewB,EAAS5H,KACxBqG,SAAUuB,EAASnJ,MACnB8H,SAAUV,IAAEmB,KAAKY,EAASrB,UAAU,GACpC1F,KAAM+G,EAASrB,SAASV,IAAEmB,KAAKY,EAASrB,UAAU,IAAI1F,KACtDyF,aAAc,KAGZjG,EAZmH,2BAYpGoE,GAZoG,IAY3Fe,aAAcK,IAAEoB,OAAF,sBAAaxC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaN,EAAOM,aAApE,CAA+Ec,IAAc,cAEzIjH,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IAhB4G,2CAAjE,uDAoB/CwH,EAAgD,SAACpD,EAAsBkB,EAAsBY,GAA7C,8CAAkE,WAAOzG,GAAP,qBAAAC,EAAA,sDAErH6H,EAFqH,UAE1GlC,IAAwBjB,EAAQhG,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAFsB,aAE1G,EAAwFiJ,QAAQ/B,EAAOU,UAAUE,SAASA,GAErIQ,EAJqH,2BAKpHpB,GALoH,IAMvHY,SAAUqB,EAASnJ,MACnBoC,KAAM+G,EAAS/G,KACfyF,aAAc,KAEZjG,EAVqH,2BAUtGoE,GAVsG,IAU7Fe,aAAcK,IAAEoB,OAAF,sBAAaxC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaN,EAAOM,aAApE,CAA+Ec,IAAc,cAEzIjH,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IAd8G,2CAAlE,uDAmBhDyH,EAA6C,SAACrD,EAAsBkB,EAAsBlH,EAAY4I,GAAzD,8CAA+F,WAAOvH,GAAP,qBAAAC,EAAA,sDAGjJuG,EAAiC,CAACgB,OAAO,GAAIC,OAAO,SACnC7I,IAAjB2I,GAEMG,EAAW7B,EAAOW,aACH,IAAjBe,EAEAG,EAASF,OAAS7I,EAIlB+I,EAASD,OAAS9I,EAEtB6H,EAAekB,GAIflB,EAAagB,OAAS7I,EAGpBsI,EAtB+I,2BAsB3HpB,GAtB2H,IAsBnHW,aAAcA,IAE1CjG,EAxB+I,2BAwBhIoE,GAxBgI,IAwBvHe,aAAcK,IAAEoB,OAAF,sBAAaxC,EAAQe,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAEmD,WAAaN,EAAOM,aAApE,CAA+Ec,IAAe,cAE1IjH,EAAS,CACLe,KAAMmE,IACN3E,QAASA,IA5BwI,2CAA/F,wD,iCCvhB1D,sBAEM0H,EAAcC,mIAAYC,sBAAwBD,mIAAYC,sBAAuB,8CAC3FC,QAAQC,IAAIH,oIACZE,QAAQC,IAAIJ,GACGK,QAAMC,OAAO,CACxBC,QAASP,EACTQ,QAAS,CACP,eAAgB,mBAChB,cAAiB,U,gcC2CjBC,EAAqB,SAACC,GAExB,IAAM3I,EAAW4I,cACjB,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAAEC,MAAO,CAAEC,YAAY,OAAOC,QAAS,UAAWC,OAAO,MAAQC,aAAc,MAAQC,gBAAiBT,EAAMxI,MAAOkJ,OAAO,qBAAtI,SACI,eAACR,EAAA,EAAD,CAAMS,WAAS,EAACC,eAAe,gBAAgBC,WAAW,SAAST,MAAO,CAACU,MAAO,OAAQC,OAAQ,QAAlG,UACI,cAACC,EAAA,EAAD,CAAYZ,MAAO,CAAEa,WAAY,YAAazJ,MAAO,OAAQ0J,SAAU,QAAvE,SAAkFlB,EAAMmB,QACxF,cAACC,EAAA,EAAD,CAAYC,QAAS,SAACC,GAAYA,EAAMC,kBAAmBlK,EAASsH,YAA8BqB,EAAMnJ,KAAMmJ,EAAM9C,OAAS8C,EAAMwB,gBAAiBpB,MAAO,CAAEE,QAAS,GAAtK,SAA2K,cAAC,IAAD,CAAWF,MAAO,CAACqB,KAAK,OAAOX,MAAM,OAAOC,OAAO,OAAOW,WAAW,iBA6TjPC,EAvTS,SAAC9K,EAAmBqG,EAAsB0E,EAAsBC,EAAcxK,EAAeyK,GACpH,IAAD,QACI,OAAQ5E,EAAO9E,MAEX,IAAK,SACD,OAAO,cAAC8H,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAO,QAAST,YAAa,QAAjD,SACH,cAAC0B,EAAA,EAAD,CACI3J,KAAK,QACL4J,QAAQ,WACRC,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRC,eAAgB,cAAC,IAAD,CAAgBjC,MAAO,CAAEU,MAAO,OAAQC,OAAQ,UAChEuB,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUH,QAAQ,WAAWE,aAAa,GAClE+B,YAAY,cACZvM,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,aAGpG,IAAK,SACD,OAAM,cAACkK,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAO,QAAST,YAAa,QAAjD,SACF,cAAC0B,EAAA,EAAD,CACIQ,YAAY,cACZnK,KAAK,SACLoK,UAAWV,EACXE,QAAQ,WACRhM,MAAOkH,EAAOW,aAAagB,OAC3B4D,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,SACxFiM,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRE,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUH,QAAQ,UAAUE,aAAa,OAK7E,IAAK,gBACD,OAAS,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,SACL,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAGC,YAAa,QAAlC,SACI,cAAC0B,EAAA,EAAD,CACIQ,YAAY,cACZnK,KAAK,SACLpC,MAAOkH,EAAOW,aAAagB,OAC3B4D,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAO,KAC/FwM,UAAWV,EACXE,QAAQ,WACRC,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRE,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUkC,YAAY,MAAMnC,aAAa,OAIzE,cAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAGC,YAAa,QAAlC,SACI,cAACW,EAAA,EAAD,UAAa,SAEjB,cAACd,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAO,QAAST,YAAa,QAAjD,SACI,cAAC0B,EAAA,EAAD,CACIQ,YAAY,cACZnK,KAAK,SACLoK,UAAWV,EACX9L,MAAOkH,EAAOW,aAAaiB,OAC3B2D,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAM,KAC9FgM,QAAQ,WACRC,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRE,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUkC,YAAY,MAAMnC,aAAa,YAOrF,IAAK,UAKD,OACI,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACC,YAAY,QAA/B,SACI,cAACW,EAAA,EAAD,UAAa,SAEjB,cAACd,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACyC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIR,kBAAgB,EAChBN,QAAQ,WACR5B,MAAO,CAACE,QAAQ,WAAYE,aAAa,EAAGE,OAAO,qBACnDqC,QAAQ,2BACRhL,GAAG,qBACHkK,WAAY,CACRlK,GAAI,uBAER/B,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,SAX5F,SAZK,CACrB,CAAE+B,GAAI,EAAGR,KAAM,OAAQvB,MAAO,QAC9B,CAAE+B,GAAI,EAAGR,KAAM,QAASvB,MAAO,UAwBM2C,KAAI,SAACqK,GAEd,OAAO,eAACC,EAAA,EAAD,CAA0BjN,MAAOgN,EAAOhN,MAAxC,cAAgD,cAACgL,EAAA,EAAD,CAAYZ,MAAO,CAACc,SAAS,QAA7B,SAAuC8B,EAAOzL,SAA/EyL,EAAOjL,kBAUjE,IAAK,WACD,OAAO,cAACmI,EAAA,EAAD,CAAMC,MAAI,EAAV,SACC,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL8K,KAAK,QACLC,gBAAiB,CACjBC,QAAQ,GAERpN,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,SACxFiM,WAAY,CAAC7B,MAAM,CAACU,MAAM,QAAQC,OAAO,OAAOT,QAAQ,mBAAmBI,OAAQ,oBAAoBF,aAAa,QAGpI,IAAK,kBACD,OAAO,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,SACH,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL+K,gBAAiB,CACjBC,QAAQ,GAERpN,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAM,KAC9FiM,WAAY,CAAC7B,MAAM,CAACU,MAAM,QAAQC,OAAO,OAAOT,QAAQ,mBAAmBI,OAAQ,oBAAoBF,aAAa,QAG5H,cAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACG,OAAO,YAA1B,SACI,cAACS,EAAA,EAAD,UAAa,SAEjB,cAACd,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL8K,KAAK,QACLC,gBAAiB,CACjBC,QAAQ,GAERpN,MAAOkH,EAAOW,aAAaiB,OAC3B0D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASsH,YAA8B9H,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAM,KAC9FiM,WAAY,CAAC7B,MAAM,CAACU,MAAM,QAAQC,OAAO,OAAOT,QAAQ,mBAAmBI,OAAQ,oBAAoBF,aAAa,aAKxI,IAAK,SACD,IAAM6C,EAAUjG,IAAEmB,KAAF,UAAOqD,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAAhF,iBAAO,EAA6E8H,SAASZ,EAAOY,iBAApG,aAAO,EAAwGuF,SAC/H,OAAO,cAACnD,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAM,QAAST,YAAa,QAAhD,SACH,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACS,EAAA,EAAD,CACIvL,GAAG,gBACHsL,QAASA,EACTE,eAAgB,SAACP,GAChB,IAAD,IACU7C,EAAI,UAAGyB,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA5E,iBAAG,EAA6E8H,SAASZ,EAAOY,iBAAhG,aAAG,EAAwGuF,QAAQL,GAC7H,YAAa/M,IAATkK,EAEO,GAEJA,EAAK5I,MAEhBiM,aAAc,CAACH,EAAQ,IACvBI,sBAAoB,EACpBzN,MAAOkH,EAAOW,aAAagB,OAC3B6E,aAAc,CAAEtD,MAAO,CAAEuD,UAAW,UACpCnB,UAAWV,EACXW,SAAU,SAACnB,EAAMsC,GAAP,OAAkBvM,EAASsH,YAA8B9H,EAAMqG,EAAS0G,KAClFxD,MAAO,CAAEE,QAAS,WAAYE,aAAc,EAAGE,OAAQ,qBACvDmD,YAAa,SAACC,GAAD,OACb,cAAC/B,EAAA,EAAD,2BACQ+B,GADR,IAEI9B,QAAQ,WACRI,WAAU,2BAAO0B,EAAO1B,YAAd,IAA0BE,kBAAkB,cAO1E,IAAK,gBACD,IAAMyB,EAAiB3G,IAAEmB,KAAF,UAAOqD,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAAhF,iBAAO,EAA6E8H,SAASZ,EAAOY,iBAApG,aAAO,EAAwGuF,SACtI,OAAS,cAACnD,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEC,YAAa,QAAjC,SACL,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACS,EAAA,EAAD,CACIU,UAAQ,EACRjM,GAAG,gBACHsL,QAASU,EACTR,eAAgB,SAACP,GAChB,IAAD,IACU7C,EAAI,UAAGyB,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA5E,iBAAG,EAA6E8H,SAASZ,EAAOY,iBAAhG,aAAG,EAAwGuF,QAAQL,GAC7H,YAAa/M,IAATkK,EAEO,GAEJA,EAAK5I,MAEhBiM,aAAc,CAACO,EAAe,IAC9BN,sBAAoB,EACpBzN,MAA8C,kBAAhCkH,EAAOW,aAAagB,OAAwB3B,EAAOW,aAAagB,OAAS,GACvF2D,UAAWV,EACX4B,aAAc,CAAEtD,MAAO,CAAEuD,UAAW,UACpClB,SAAU,SAACnB,EAAMsC,GAAP,OAAkBvM,EAASsH,YAA8B9H,EAAMqG,EAAS0G,KAClFxD,MAAO,CAACuC,YAAa,OAAQ7B,MAAO,QAAStJ,MAAO,UAAW0J,SAAU,OAAQT,gBAAiB,UAAWQ,WAAY,YAAaT,aAAc,GACpJyD,WAAY,SAACL,GAET,IAAMM,EAAQN,EAAOjL,KAAI,SAAC0B,GAAD,yBAAYuH,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAArF,iBAAY,EAA6E8H,SAASZ,EAAOY,iBAAzG,aAAY,EAAwGuF,QAAQhJ,MACrJ,cACI6J,QADJ,IACIA,OADJ,EACIA,EAAOvL,KAAI,SAACwH,GAER,YAAalK,IAATkK,EAEO,GAEJ,cAAC,EAAD,CAAoBgB,MAAOhB,EAAK5I,KAAMC,MAAO,UAAWX,KAAMA,EAAMqG,OAAQA,EAAQsE,aAActE,EAAOW,aAAagB,OAAO3B,QAAO,SAAC7C,GAAD,OAASA,IAAK8F,EAAKnK,eAI1K6N,YAAa,SAACC,GAAD,aACb,cAAC/B,EAAA,EAAD,2BACQ+B,GADR,IAEI9B,QAAQ,WACRO,aAAa,UAAArF,EAAOW,aAAagB,cAApB,eAA4BnE,QAAS,EAAI,GAAK,WAC3D0H,WAAU,2BAAO0B,EAAO1B,YAAd,IAA0BE,kBAAkB,EAAKD,eACvD,qCACA,cAAC8B,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,CAAWlD,SAAU,QAASd,MAAO,CAAC5I,MAAM,YAE/CsM,EAAO1B,WAAWC,8BAQ3C,IAAK,QACD,OAAO,cAACnC,EAAA,EAAD,MC9TbmE,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,iBAAkB,CACd3D,MAAM,OACNJ,OAAQ,oBACRgE,WAAY,qBACZlE,aAAc,QAElBmE,aAAc,CACVnE,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,QACNC,OAAO,OACPT,QAAQ,iBAEZsE,aAAa,CACT9D,MAAM,MACN+D,WAAY,UACZrE,aAAc,OACdsE,aAAa,OACbxE,QAAQ,aAEZyE,eAAe,CACXjE,MAAM,OACNC,OAAO,OACPN,gBAAiB,UACjBC,OAAQ,oBACRsE,SAAU,SACVC,WAAY,SACZC,aAAc,YAElBC,kBAAkB,CACdrE,MAAM,OACNC,OAAO,OACPL,OAAQ,qBAEZ0E,YAAY,4BACQ,CACZ5E,aAAc,IAGtB6E,GAAI,CACAnE,SAAS,OACT1J,MAAM,OACN8N,WAAY,IACZrE,WAAW,aAEfsE,GAAI,CACArE,SAAS,OACT1J,MAAM,UACN8N,WAAY,IACZrE,WAAW,aAEfuE,aAAc,CACVC,YAAa,0BAEjBC,eAAgB,CACZlF,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,OACNC,OAAO,OACPT,QAAQ,YAEZqF,QAAS,CACL,gCAAgC,CAC5BrF,QAAQ,IAGhBsF,aAAc,CACVpF,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,QACNC,OAAO,OACPT,QAAS,gBACTuF,UAAW,OACX3E,SAAU,OACVD,WAAY,aAEhBiB,UAAW,CACP,aAAc,CACdC,aAAc,QAEd,WAAY,CACZA,aAAc,cA6GX2D,EA9FQ,SAAC9F,GAAsD,IAAD,EACnE6B,EAAUwC,IACVhN,EAAW4I,cACXsE,EAAQwB,cAERC,EAAqBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,2BAC7DC,EAAaC,YAAc9B,EAAM+B,YAAYC,KAAK,OACxD,EAAgCC,IAAMC,UAAS,GAA/C,mBAEM5P,GAFN,UAEamJ,EAAMnJ,MACbqG,EAAS8C,EAAM9C,OACfJ,EAAckD,EAAMlD,YAE1B,OACI,eAACoD,EAAA,EAAD,CAA4BS,WAAS,EAACC,eAAgB,gBAAiBC,WAAY,SAAU6F,UAAW7E,EAAQ+C,aAAhH,UACI,cAAC1E,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,aAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAOsF,EAAa,QAAU,QAAS/F,YAAa,QAAxE,SACI,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIR,kBAAgB,EAChBS,QAAQ,2BACRhL,GAAG,qBACHiK,QAAQ,WACR0E,UAAW7E,EAAQkD,eACnB9C,WAAY,CACRlK,GAAI,uBAER/B,MAAOkH,EAAOlH,MACdwM,UAAWxC,EAAM8B,SACjB1B,MAAO,CAACE,QAAQ,WAAYE,aAAa,EAAGE,OAAO,qBACnDiG,YAAa,SAAC3Q,GACb,IAAD,EAEI,OADkB,UAAGgQ,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAUA,EAAErE,QAAUA,KAAO,UAAlE,aAAG,EAAmEuB,MAG5FkL,SAAU,SAACnB,GAAD,OAAUjK,EAAS+G,YAA4BvH,EAAMqG,EAAQ8I,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAUA,EAAErE,QAAUsL,EAAMoB,OAAO1M,SAAO,MAjBvJ,SAmBKgQ,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAA8C,IAApC+C,IAAEC,SAASP,EAAYzC,EAAErE,UAAkB2C,KAAI,SAACqK,GAEzF,OAAQ,eAACC,EAAA,EAAD,CAA0BjN,MAAOgN,EAAOhN,MAAxC,cAAiD,cAACgL,EAAA,EAAD,CAAYZ,MAAO,CAACc,SAASkF,EAAY,OAAO,QAAhD,SAA0DpD,EAAOzL,SAAnGyL,EAAOjL,aAM9C,cAACmI,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACU,MAAMsF,EAAW,QAAQ,QAAQ/F,YAAY,QAAhE,SACI,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIR,kBAAgB,EAChBS,QAAQ,2BACRhL,GAAG,qBACHiK,QAAQ,WACR0E,UAAW7E,EAAQsD,kBACnBlD,WAAY,CACRlK,GAAI,uBAER/B,MAAOkH,EAAOY,SACdsC,MAAO,CAACE,QAAQ,WAAYE,aAAa,EAAGE,OAAO,qBACnD8B,UAAWxC,EAAM8B,SACjBW,SAAU,SAACnB,GAAD,OAAUjK,EAASoH,YAAgC5H,EAAMqG,EAASoE,EAAMoB,OAAO1M,SAZ7F,SAeQoH,IAAEmB,KAAF,UAAOyH,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAUA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA7E,aAAO,EAA0E8H,UAAUnF,KAAK,SAACmF,GAChG,IAAD,EACUqC,EAAI,UAAG6F,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA3E,aAAG,EAA4E8H,SAASA,GAClG,OACI,eAACmF,EAAA,EAAD,CAA0BjN,MAAOmK,EAAKnK,MAAtC,cAA+C,cAACgL,EAAA,EAAD,CAAYZ,MAAO,CAACc,SAASkF,EAAY,OAAO,QAAhD,SAA0DjG,EAAK5I,SAA/F4I,EAAK5I,eAQxCqP,EAAoB/P,EAAMqG,EAAQ8I,EAAenE,EAASxK,EAAU2I,EAAM8B,eAKtF,cAAC5B,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACO,EAAA,EAAD,CAAYoB,UAAWxC,EAAM8B,SAAW1B,MAAO,CAACE,QAAQ,GAAIe,QAAS,kBAAKhK,EAAS0G,YAAqClH,EAAKqG,EAAOM,YAApI,SACI,cAAC,IAAD,CAAgB4C,MAAO,CAAC5I,MAAM,UAAUsJ,MAAM,OAAOC,OAAO,YAEhE,cAACK,EAAA,EAAD,CAAYoB,UAAWxC,EAAM8B,SAAW1B,MAAO,CAACE,QAAQ,GAAIe,QAAS,kBAAKhK,EAAS8G,YAAuCtH,EAAKqG,EAAOM,YAAtI,SACI,cAAC,IAAD,CAAY4C,MAAO,CAAC5I,MAAM,UAAUsJ,MAAM,OAAOC,OAAO,mBAxE7D7D,EAAOM,WC9GpBuC,GAAqB,SAACC,GAExB,IAAM3I,EAAW4I,cACjB,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAAEC,MAAO,CAAEC,YAAY,OAAOC,QAAS,UAAWC,OAAO,MAAQC,aAAc,MAAQC,gBAAiBT,EAAMxI,MAAOkJ,OAAO,qBAAtI,SACI,eAACR,EAAA,EAAD,CAAMS,WAAS,EAACC,eAAe,gBAAgBC,WAAW,SAAST,MAAO,CAACU,MAAO,OAAQC,OAAQ,QAAlG,UACI,cAACC,EAAA,EAAD,CAAYZ,MAAO,CAAEa,WAAY,YAAazJ,MAAO,OAAQ0J,SAAU,QAAvE,SAAkFlB,EAAMmB,QACxF,cAACC,EAAA,EAAD,CAAYC,QAAS,SAACC,GAAYA,EAAMC,kBAAmBlK,EAASgI,YAA2CW,EAAMnJ,KAAMmJ,EAAM9C,OAAS8C,EAAMwB,gBAAiBpB,MAAO,CAAEE,QAAS,GAAnL,SAAwL,cAAC,IAAD,CAAWF,MAAO,CAACqB,KAAK,OAAOX,MAAM,OAAOC,OAAO,OAAOW,WAAW,iBA8T9PC,GAvTS,SAAC9K,EAAmBqG,EAAsB0E,EAAsBC,EAAcxK,EAAcyK,GACnH,IAAD,YACI,OAAQ5E,EAAO9E,MAEX,IAAK,SACD,OAAO,cAAC8H,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAO,QAAST,YAAa,QAAjD,SACH,cAAC0B,EAAA,EAAD,CACI3J,KAAK,QACL4J,QAAQ,WACRO,YAAY,cACZN,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRC,eAAgB,cAAC,IAAD,CAAgBjC,MAAO,CAAEU,MAAO,OAAQC,OAAQ,UAChEuB,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUkC,YAAY,MAAMnC,aAAc,GAClExK,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,aAGjH,IAAK,SACD,OAAO,cAACkK,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAO,QAAST,YAAa,QAAjD,SACH,cAAC0B,EAAA,EAAD,CACIQ,YAAY,cACZnK,KAAK,SACLoK,UAAWV,EACX9L,MAAOkH,EAAOW,aAAagB,OAC3B4D,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,SACrGgM,QAAQ,WACRC,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRE,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUkC,YAAY,MAAMnC,aAAa,OAI7E,IAAK,gBACD,OAAS,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,SACL,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAGC,YAAa,QAAlC,SACI,cAAC0B,EAAA,EAAD,CACIQ,YAAY,cACZnK,KAAK,SACLoK,UAAWV,EACXE,QAAQ,WACRhM,MAAOkH,EAAOW,aAAagB,OAC3B4D,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAM,KAC3GiM,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRE,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUkC,YAAY,MAAMnC,aAAa,OAIzE,cAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAGC,YAAa,QAAlC,SACI,cAACW,EAAA,EAAD,UAAa,SAEjB,cAACd,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAO,QAAST,YAAa,QAAjD,SACI,cAAC0B,EAAA,EAAD,CACIQ,YAAY,cACZnK,KAAK,SACLoK,UAAWV,EACX9L,MAAOkH,EAAOW,aAAaiB,OAC3B2D,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAM,KAC3GgM,QAAQ,WACRC,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAmBI,OAAQ,OAAOD,gBAAgB,WACpGyB,UAAW,CACP,aAAc,CACVC,aAAc,QAElB,WAAY,CACRA,aAAc,UAI9BC,WAAY,CACRE,kBAAkB,GAEtBlC,MAAO,CAACK,gBAAgB,UAAUkC,YAAY,MAAMnC,aAAa,YAOrF,IAAK,UAKD,OACI,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACC,YAAY,QAA/B,SACI,cAACW,EAAA,EAAD,UAAa,SAEjB,cAACd,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACyC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIR,kBAAgB,EAChBN,QAAQ,WACR5B,MAAO,CAACE,QAAQ,WAAYE,aAAa,EAAGE,OAAO,qBACnDqC,QAAQ,2BACRhL,GAAG,qBACH2O,UAAW7E,EAAQsD,kBACnBlD,WAAY,CACRlK,GAAI,uBAER/B,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,SAZzG,SAZK,CACrB,CAAE+B,GAAI,EAAGR,KAAM,OAAQvB,MAAO,QAC9B,CAAE+B,GAAI,EAAGR,KAAM,QAASvB,MAAO,UAyBM2C,KAAI,SAACqK,GAEd,OAAO,eAACC,EAAA,EAAD,CAA0BjN,MAAOgN,EAAOhN,MAAxC,cAAgD,cAACgL,EAAA,EAAD,CAAYZ,MAAO,CAACc,SAAS,QAA7B,SAAuC8B,EAAOzL,SAA/EyL,EAAOjL,kBAUjE,IAAK,WACD,OAAO,cAACmI,EAAA,EAAD,CAAMC,MAAI,EAAV,SACC,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL8K,KAAK,QACLC,gBAAiB,CACjBC,QAAQ,GAERpN,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,SACrGiM,WAAY,CAAC7B,MAAM,CAACU,MAAM,QAAQC,OAAO,OAAOT,QAAQ,mBAAmBI,OAAQ,oBAAoBF,aAAa,QAGpI,IAAK,kBACD,OAAO,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,SACH,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL+K,gBAAiB,CACjBC,QAAQ,GAERpN,MAAOkH,EAAOW,aAAagB,OAC3B2D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAM,KAC3GiM,WAAY,CAAC7B,MAAM,CAACU,MAAM,QAAQC,OAAO,OAAOT,QAAQ,mBAAmBI,OAAQ,oBAAoBF,aAAa,QAG5H,cAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACG,OAAO,YAA1B,SACI,cAACS,EAAA,EAAD,UAAa,SAEjB,cAACd,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL8K,KAAK,QACLC,gBAAiB,CACjBC,QAAQ,GAERpN,MAAOkH,EAAOW,aAAaiB,OAC3B0D,UAAWV,EACXW,SAAU,SAACnB,GAAD,OAAWjK,EAASgI,YAA2CxI,EAAMqG,EAASoE,EAAMoB,OAAO1M,MAAM,KAC3GiM,WAAY,CAAC7B,MAAM,CAACU,MAAM,QAAQC,OAAO,OAAOT,QAAQ,mBAAmBI,OAAQ,oBAAoBF,aAAa,aAKxI,IAAK,SACD,IAAM6C,EAAUjG,IAAEmB,KAAF,UAAOqD,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAAhF,iBAAO,EAA6EiJ,QAAQ/B,EAAOU,iBAAnG,iBAAO,EAAuGE,SAASZ,EAAOY,iBAA9H,aAAO,EAAkIuF,SACzJ,OAAO,cAACnD,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAM,QAAST,YAAa,QAAhD,SACH,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACS,EAAA,EAAD,CACIvL,GAAG,gBACHsL,QAASA,EACTE,eAAgB,SAACP,GAChB,IAAD,MACU7C,EAAI,UAAGyB,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA5E,iBAAG,EAA6EiJ,QAAQ/B,EAAOU,iBAA/F,iBAAG,EAAuGE,SAASZ,EAAOY,iBAA1H,aAAG,EAAkIuF,QAAQL,GACvJ,YAAa/M,IAATkK,EAEO,GAEJA,EAAK5I,MAEhBiM,aAAc,CAACH,EAAQ,IACvBI,sBAAoB,EACpBzN,MAAOkH,EAAOW,aAAagB,OAC3B6E,aAAc,CAAEtD,MAAO,CAAEuD,UAAW,UACpCnB,UAAWV,EACXW,SAAU,SAACnB,EAAMsC,GAAP,OAAkBvM,EAASgI,YAA2CxI,EAAMqG,EAAS0G,KAC/FxD,MAAO,CAAEE,QAAS,WAAYE,aAAc,EAAGE,OAAQ,qBACvDmD,YAAa,SAACC,GAAD,OACb,cAAC/B,EAAA,EAAD,2BACQ+B,GADR,IAEI9B,QAAQ,WACRI,WAAU,2BAAO0B,EAAO1B,YAAd,IAA0BE,kBAAkB,cAM1E,IAAK,gBACD,IAAMyB,EAAiB3G,IAAEmB,KAAF,UAAOqD,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAAhF,iBAAO,EAA6EiJ,QAAQ/B,EAAOU,iBAAnG,iBAAO,EAAuGE,SAASZ,EAAOY,iBAA9H,aAAO,EAAkIuF,SAChK,OAAS,cAACnD,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEC,YAAa,QAAjC,SACL,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACS,EAAA,EAAD,CACIU,UAAQ,EACRjM,GAAG,gBACHsL,QAASU,EACTR,eAAgB,SAACP,GAChB,IAAD,MACU7C,EAAI,UAAGyB,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA5E,iBAAG,EAA6EiJ,QAAQ/B,EAAOU,iBAA/F,iBAAG,EAAuGE,SAASZ,EAAOY,iBAA1H,aAAG,EAAkIuF,QAAQL,GACvJ,YAAa/M,IAATkK,EAEO,GAEJA,EAAK5I,MAEhBiM,aAAc,CAACO,EAAe,IAC9BL,aAAc,CAAEtD,MAAO,CAAEuD,UAAW,UACpCF,sBAAoB,EACpBzN,MAA8C,kBAAhCkH,EAAOW,aAAagB,OAAwB3B,EAAOW,aAAagB,OAAS,GACvF2D,UAAWV,EACXW,SAAU,SAACnB,EAAMsC,GAAP,OAAkBvM,EAASgI,YAA2CxI,EAAMqG,EAAS0G,KAC/FxD,MAAO,CAAEuC,YAAa,OAAQ7B,MAAO,QAAStJ,MAAO,UAAW0J,SAAU,OAAQT,gBAAiB,UAAWQ,WAAY,YAAaT,aAAc,GACrJyD,WAAY,SAACL,GAET,IAAMM,EAAQN,EAAOjL,KAAI,SAAC0B,GAAD,2BAAYuH,EAAgB/K,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAArF,iBAAY,EAA6EiJ,QAAQ/B,EAAOU,iBAAxG,iBAAY,EAAuGE,SAASZ,EAAOY,iBAAnI,aAAY,EAAkIuF,QAAQhJ,MAC/K,cACI6J,QADJ,IACIA,OADJ,EACIA,EAAOvL,KAAI,SAACwH,GAER,YAAalK,IAATkK,EAEO,GAEJ,cAAC,GAAD,CAAoBgB,MAAOhB,EAAK5I,KAAMC,MAAO,UAAWX,KAAMA,EAAMqG,OAAQA,EAAQsE,aAActE,EAAOW,aAAagB,OAAO3B,QAAO,SAAC7C,GAAD,OAASA,IAAK8F,EAAKnK,eAI1K6N,YAAa,SAACC,GAAD,aACb,cAAC/B,EAAA,EAAD,2BACQ+B,GADR,IAEI9B,QAAQ,WACRO,aAAa,UAAArF,EAAOW,aAAagB,cAApB,eAA4BnE,QAAS,EAAI,GAAK,WAC3D0H,WAAU,2BAAO0B,EAAO1B,YAAd,IAA0BE,kBAAkB,EAAKD,eACvD,qCACA,cAAC8B,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,CAAWlD,SAAU,QAASd,MAAO,CAAC5I,MAAM,YAE/CsM,EAAO1B,WAAWC,8BAQ3C,IAAK,QACD,OAAO,cAACnC,EAAA,EAAD,MCpUbmE,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,iBAAkB,CACd3D,MAAM,OACNJ,OAAQ,oBACRgE,WAAY,qBACZlE,aAAc,QAElBmE,aAAc,CACVnE,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,QACNC,OAAO,OACPT,QAAQ,iBAEZsE,aAAa,CACT9D,MAAM,MACN+D,WAAY,UACZrE,aAAc,OACdsE,aAAa,OACbxE,QAAQ,aAEZyE,eAAe,CACXjE,MAAM,OACNC,OAAO,OACPN,gBAAiB,UACjBC,OAAQ,oBACRsE,SAAU,SACVC,WAAY,SACZC,aAAc,YAElBC,kBAAkB,CACdrE,MAAM,OACNC,OAAO,OACPL,OAAQ,qBAEZ0E,YAAY,4BACQ,CACZ5E,aAAc,IAGtB6E,GAAI,CACAnE,SAAS,OACT1J,MAAM,OACN8N,WAAY,IACZrE,WAAW,aAEfsE,GAAI,CACArE,SAAS,OACT1J,MAAM,UACN8N,WAAY,IACZrE,WAAW,aAEfuE,aAAc,CACVC,YAAa,0BAEjBC,eAAgB,CACZlF,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,OACNC,OAAO,OACPT,QAAQ,YAEZqF,QAAS,CACL,gCAAgC,CAC5BrF,QAAQ,IAGhBsF,aAAc,CACVpF,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,QACNC,OAAO,OACPT,QAAS,gBACTuF,UAAW,OACX3E,SAAU,OACVD,WAAY,aAEhB4F,aAAc,CACVrG,aAAa,EACbhJ,MAAM,UACNiJ,gBAAgB,cAChBK,MAAM,QACNC,OAAO,OACPT,QAAS,gBACTuF,UAAW,OACX3E,SAAU,OACVD,WAAY,kBAwNT6F,IAhLcC,YAAOC,IAAPD,EAAuB,oBAAGxC,MAAH,UAChDxD,OAAQ,EACRP,aAAc,GAFkC,0BAG1CyG,IAAsBC,cAAiB,CAC3CzG,gBAAiB,YAJ6B,2BAMzCwG,IAAsBE,KAAQ,CACnC3G,aAAc,EACdC,gBAAiB,YAR6B,KAa7B,SAACT,GACpB,IAAM6B,EAAUwC,KACVhN,EAAW4I,cACXsE,EAAQwB,cAERC,EAAqBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,2BAC7DC,EAAaC,YAAc9B,EAAM+B,YAAYC,KAAK,OACxD,EAAgCC,IAAMC,UAAS,GAA/C,mBAEM5P,GAFN,UAEamJ,EAAMnJ,MACbuQ,EAAQpH,EAAMoH,MACdtK,EAAckD,EAAMlD,YACpBuK,EAAiBrH,EAAMqH,eACvBC,EAAYtH,EAAMsH,UAExB,OACI,cAACpH,EAAA,EAAD,CAAyCS,WAAS,EAACE,WAAY,SAAU6F,UAAW7E,EAAQ+C,aAA5F,SACI,cAAC1E,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACU,MAAM,QAAzB,SAEQsG,EAAME,GAAW3O,KAAI,SAACuE,EAAsBzC,GAC3C,IAAD,MACI,OACI,qCACI,eAACyF,EAAA,EAAD,CAAMS,WAAS,EAACC,eAAgB,gBAAiBC,WAAY,SAAUT,MAAO,CAAC0E,aAAa,QAA5F,UACI,cAAC5E,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,aAA5B,UACe,IAAVpG,EACG,cAACyF,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAOsF,EAAa,QAAU,QAAS/F,YAAa,QAAxE,SACI,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIR,kBAAgB,EAChBN,QAAQ,WACR5B,MAAO,CAACE,QAAQ,WAAYE,aAAa,EAAGE,OAAO,qBACnDqC,QAAQ,2BACRhL,GAAG,qBACH2O,UAAW7E,EAAQkD,eACnB9C,WAAY,CACRlK,GAAI,uBAER/B,MAAOkH,EAAOlH,MACdwM,UAAWxC,EAAM8B,SACjB6E,YAAa,SAAC3Q,GACb,IAAD,EAEI,OADkB,UAAGgQ,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAUA,EAAErE,QAAUA,KAAO,UAAlE,aAAG,EAAmEuB,MAG5FkL,SAAU,SAACnB,GAAD,OAAUjK,EAAS2H,YAAyCnI,EAAMqG,EAAQ8I,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAUA,EAAErE,QAAUsL,EAAMoB,OAAO1M,SAAO,MAjBpK,SAmBKgQ,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAA8C,IAApC+C,IAAEC,SAASP,EAAYzC,EAAErE,UAAkB2C,KAAI,SAACqK,GAEzF,OAAQ,eAACC,EAAA,EAAD,CAA0BjN,MAAOgN,EAAOhN,MAAxC,cAAiD,cAACgL,EAAA,EAAD,CAAYZ,MAAO,CAACc,SAASkF,EAAY,OAAO,QAAhD,SAA0DpD,EAAOzL,SAAnGyL,EAAOjL,aAM5C,cAACmI,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAOsF,EAAa,QAAU,QAAS/F,YAAa,UAE9E,cAACH,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEU,MAAOsF,EAAa,QAAU,QAAS/F,YAAa,QAAxE,SACI,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIR,kBAAgB,EAChBN,QAAQ,WACR5B,MAAO,CAACE,QAAQ,WAAYE,aAAa,EAAGE,OAAO,qBACnDqC,QAAQ,2BACRhL,GAAG,qBACH2O,UAAW7E,EAAQkD,eACnB9C,WAAY,CACRlK,GAAI,uBAER/B,MAAOkH,EAAOU,SACd4E,UAAWxC,EAAM8B,SACjB6E,YAAa,SAAC3Q,GACb,IAAD,IAEI,OADkB,UAAGgQ,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA3E,iBAAG,EAA4EiJ,QAAQjJ,UAAvF,aAAG,EAA4FuB,MAGrHkL,SAAU,SAACnB,GAAD,OAAUjK,EAAS6H,YAA4CrI,EAAMqG,EAAQoE,EAAMoB,OAAO1M,SAjBxG,SAmBKoH,IAAEmB,KAAF,UAAOyH,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAUA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA7E,aAAO,EAA0EiJ,SAAStG,KAAK,SAACsG,GAE7F,IAAMkB,EAAO6F,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,GAAGiJ,QAAQA,GAChG,IAA+C,IAA3C7B,IAAEC,SAASgK,EAAgBlH,EAAKnK,OAEhC,OAAQ,eAACiN,EAAA,EAAD,CAAwBjN,MAAOmK,EAAKnK,MAApC,cAA6C,cAACgL,EAAA,EAAD,CAAYZ,MAAO,CAACc,SAASkF,EAAY,OAAO,QAAhD,SAA0DjG,EAAK5I,SAA7F4I,EAAKpI,aAS5B,YAAhBmF,EAAO9E,KAAqB,GAC5B,cAAC8H,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACU,MAAMsF,EAAW,QAAQ,QAAQ/F,YAAY,QAAhE,SACI,cAACuC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIR,kBAAgB,EAChBN,QAAQ,WACR5B,MAAO,CAACE,QAAQ,WAAYE,aAAa,EAAGE,OAAO,qBACnDqC,QAAQ,2BACRhL,GAAG,qBACH2O,UAAW7E,EAAQsD,kBACnBlD,WAAY,CACRlK,GAAI,uBAER/B,MAAOkH,EAAOY,SACd0E,UAAWxC,EAAM8B,SACjBW,SAAU,SAACnB,GAAD,OAAUjK,EAAS+H,YAA6CvI,EAAMqG,EAASoE,EAAMoB,OAAO1M,SAZ1G,SAeQoH,IAAEmB,KAAF,UAAOyH,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAUA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA7E,iBAAO,EAA0EiJ,QAAQ/B,EAAOU,iBAAhG,aAAO,EAAoGE,UAAUnF,KAAK,SAACmF,GAC1H,IAAD,IACUqC,EAAI,UAAG6F,EAAenP,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAA3E,iBAAG,EAA4EiJ,QAAQ/B,EAAOU,iBAA9F,aAAG,EAAsGE,SAASA,GAC5H,OACI,eAACmF,EAAA,EAAD,CAA0BjN,MAAOmK,EAAKnK,MAAtC,cAA+C,cAACgL,EAAA,EAAD,CAAYZ,MAAO,CAACc,SAASkF,EAAY,OAAO,QAAhD,SAA0DjG,EAAK5I,SAA/F4I,EAAK5I,eAS5CgQ,GAAsB1Q,EAAMqG,EAAQ8I,EAAenE,EAASxK,EAAU2I,EAAM8B,eAIxF,cAAC5B,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACO,EAAA,EAAD,CAAYoB,UAAWxC,EAAM8B,SAAU1B,MAAO,CAACE,QAAQ,GAAIe,QAAS,kBAAKhK,EAAS0G,YAAqClH,EAAKqG,EAAOM,YAAnI,SACI,cAAC,IAAD,CAAgB4C,MAAO,CAAC5I,MAAM,UAAUsJ,MAAM,OAAOC,OAAO,YAEhE,cAACK,EAAA,EAAD,CAAYoB,UAAWxC,EAAM8B,SAAU1B,MAAO,CAACE,QAAQ,GAAIe,QAAS,kBAAKhK,EAAS8G,YAAuCtH,EAAKqG,EAAOM,YAArI,SACI,cAAC,IAAD,CAAY4C,MAAO,CAAC5I,MAAM,UAAUsJ,MAAM,OAAOC,OAAO,oBAMpEtG,IAAU2M,EAAME,GAAW5M,OAAS,EAChC,eAACwF,EAAA,EAAD,CAAMC,MAAI,EAACQ,WAAS,EAACE,WAAY,SAAUT,MAAO,CAACoH,UAAU,SAA7D,UACI,cAACtH,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACU,MAAMsF,EAAY,QAAU,WAE/C,cAAClG,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACsH,EAAA,EAAD,CAAQjF,UAAWxC,EAAM8B,SAAUT,QAAS,kBAAIhK,EAAS6G,YAAuCrH,EAAKqG,EAAOM,YAAYkK,UAAW,cAAC,IAAD,IAAYC,eAAa,EAAEjB,UAAW7E,EAAQgF,aAAczG,MAAO,CAACK,gBAAgB,cAAcmH,cAAc,OAAOpQ,MAAM,UAAU0J,SAAS,OAAOsG,UAAU,QAApS,SACK,qBAIf,YAtInBJ,EAAME,GAAW,GAAG9J,YC/JjC6G,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,iBAAkB,CACd3D,MAAM,OACNJ,OAAQ,oBACRgE,WAAY,qBACZlE,aAAc,QAElBmE,aAAc,CACVnE,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,QACNC,OAAO,OACPT,QAAQ,iBAEZsE,aAAa,CACT9D,MAAM,MACNC,OAAQ,OACR8D,WAAY,UACZrE,aAAc,OACdsE,aAAa,OACbxE,QAAQ,aAEZyE,eAAe,CACXjE,MAAM,OACNC,OAAO,OACPN,gBAAiB,UACjBC,OAAQ,oBACRsE,SAAU,SACVC,WAAY,SACZC,aAAc,YAElBC,kBAAkB,CACdrE,MAAM,OACNC,OAAO,OACPL,OAAQ,qBAEZ0E,YAAY,4BACQ,CACZ5E,aAAc,IAGtB6E,GAAI,CACAnE,SAAS,OACT1J,MAAM,OACN8N,WAAY,IACZrE,WAAW,aAEfsE,GAAI,CACArE,SAAS,OACT1J,MAAM,UACN8N,WAAY,IACZrE,WAAW,aAEfuE,aAAc,CACVC,YAAa,0BAEjBC,eAAgB,CACZlF,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,OACNC,OAAO,OACPT,QAAQ,YAEZqF,QAAS,CACL,gCAAgC,CAC5BrF,QAAQ,IAGhBsF,aAAc,CACVpF,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,QACNC,OAAO,OACPT,QAAS,gBACTuF,UAAW,OACX3E,SAAU,OACVD,WAAY,kBA8KlB4G,IAzJuBd,YAAOC,IAAPD,EAAuB,oBAAGxC,MAAH,UAChDxD,OAAQ,EACRP,aAAc,GAFkC,0BAG1CyG,IAAsBC,cAAiB,CAC3CzG,gBAAiB,YAJ6B,2BAMzCwG,IAAsBE,KAAQ,CACnC3G,aAAc,EACdC,gBAAiB,YAR6B,KAyJzB,SAAC5J,EAAmBmJ,GAC9C,IAAD,EACU8H,EAA4B,GAC5BC,EAA4B,GAClC,UAAAlR,EAAKkG,oBAAL,SAAmBpE,KAAI,SAACuE,EAAqBzC,GAC5C,IAAD,EACUuN,EAAE,UAAG/K,IAAwBpG,EAAKb,OAAOkH,QAAO,SAAC7C,GAAD,OAAYA,EAAErE,QAAUkH,EAAOlH,SAAO,UAApF,aAAG,EAAqFiS,UAE9E,KADAD,GAAU,GAGxBF,EAAWI,KAAKhL,GAIhB6K,EAAWG,KAAKhL,MAIxB,IAAMiL,EAAkBL,EAAWnP,KAAI,SAACuE,EAAqBzC,GAErD,IAAMqC,EAAcgL,EAAWnP,KAAI,SAAA0B,GAAC,OAAIA,EAAErE,SAC1C,OACI,cAAC,EAAD,CAA4Ba,KAAMA,EAAMiG,YAAaA,EAAaI,OAAQA,EAAQ4E,SAAU9B,EAAM8B,UAA7ErH,MAI3B2M,EAAQhK,IAAEgL,QAAQL,EAAY,SAC9BM,EAAkBjL,IAAEmB,KAAK6I,GAAOzO,KAAI,SAAC2O,EAAkB7M,GAEzD,IAAMqC,EAAcjG,EAAKkG,aAAapE,KAAI,SAAA0B,GAAC,OAAIA,EAAErE,SAC3CqR,EAAiBxQ,EAAKkG,aAAaG,QAAO,SAAA7C,GAAC,OAAIA,EAAErE,QAAUsR,KAAW3O,KAAI,SAAA0B,GAAC,OAAIA,EAAEuD,YACvF,OACI,cAAC,GAAD,CAA4B/G,KAAMA,EAAMiG,YAAaA,EAAauK,eAAgBA,EAAgBD,MAAOA,EAAOE,UAAWA,EAAWxF,SAAU9B,EAAM8B,UAAjIrH,MAI7B,OACI,qCACK0N,EACAE,OAqHEC,IAhHO,SAACtI,GACnB,IAAM6B,EAAUwC,KACVhN,EAAW4I,cACXsE,EAAQwB,cAId,GAF2BE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,2BAChDE,YAAc9B,EAAM+B,YAAYC,KAAK,OACxBC,IAAMC,UAAS,IAA/C,mBAAO8B,EAAP,KAAiBC,EAAjB,KAEM3R,EAAOmJ,EAAMnJ,KAGnB,OACI,cAACqJ,EAAA,EAAD,CAAMC,MAAI,EAACQ,WAAS,EAAEE,YAAyB,IAAb0H,EAAoB,aAAe,SAAU7B,UAAW7E,EAAQ4C,iBAAkBrE,OAAoB,IAAbmI,EAAoB,GAAI,CAACxH,OAAO,QAA3J,SACI,eAACb,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACU,MAAM,OAAzB,UACI,cAACZ,EAAA,EAAD,CAAMS,WAAS,EAAC8H,UAAU,SAASrI,MAAO,CAACU,MAAM,QAAjD,SACI,eAACZ,EAAA,EAAD,CAAMC,MAAI,EAACQ,WAAS,EAACC,eAAe,gBAAgBC,WAAW,SAAST,MAAO,CAACU,MAAM,OAAOR,QAAQ,oBAAoBoI,YAAwB,IAAbH,EAAoB,OAAQ,OAAhK,UACI,cAACrI,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAW,SAA3B,UACI,cAACO,EAAA,EAAD,CAAYoB,UAAWxC,EAAM8B,SAAW1B,MAAO,CAACE,QAAQ,GAAIe,QAAS,kBAAKhK,EAAS8E,YAA2BtF,EAAKkB,MAAnH,SACI,cAAC,IAAD,CAAyBqI,MAAO,CAAC5I,MAAM,UAAUsJ,MAAM,OAAOC,OAAO,YAGzE,cAACb,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACC,YAAY,OAAOqB,WAAW,QAAjD,SACI,cAACV,EAAA,EAAD,CAAY0F,UAAW7E,EAAQwD,GAAIjF,MAAO,CAAC5I,MAAM,WAAjD,SAdf,6BAcsFX,EAAKkB,QAEhF,cAACmI,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACa,EAAA,EAAD,CAAY0F,UAAW7E,EAAQwD,GAAIjF,MAAO,CAACc,SAAS,QAApD,SAA8DrK,EAAKU,cAI/E,cAAC2I,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,eAACD,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACC,YAAY,QAA/B,SACI,eAACH,EAAA,EAAD,CAAMS,WAAS,EAACE,WAAY,SAA5B,UACI,cAACX,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL+K,gBAAiB,CACbC,QAAQ,GAEZpN,MAAOgK,EAAMnJ,KAAK6F,UAClB+F,SAAU,SAACnB,GAAD,OAAUjK,EAASmF,YAA8BwD,EAAMnJ,KAAMyK,EAAMoB,OAAO1M,SACpFwM,UAAWxC,EAAM8B,SACjBG,WACI,CACI7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAoBI,OAAQ,oBAAoBD,gBAAgB,UAAWD,aAAc,QAK3J,cAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACG,OAAO,YAA1B,SACI,cAACS,EAAA,EAAD,UAAa,SAEjB,cAACd,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRjK,GAAG,OACHK,KAAK,OACL+K,gBAAiB,CACjBC,QAAQ,GAERpN,MAAOgK,EAAMnJ,KAAK+F,QAClB6F,SAAU,SAACnB,GAAD,OAAUjK,EAASsF,YAA4BqD,EAAMnJ,KAAMyK,EAAMoB,OAAO1M,SAClFwM,UAAWxC,EAAM8B,SACjBG,WAAY,CAAE7B,MAAO,CAAEU,MAAO,QAASC,OAAQ,OAAQT,QAAS,mBAAoBI,OAAQ,oBAAoBD,gBAAgB,UAAWD,aAAc,aAMzK,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,UAEqB,IAAboI,EACI,cAACnH,EAAA,EAAD,CAAahB,MAAO,CAACU,MAAM,OAAOC,OAAO,OAAON,gBAAgB,WAAYkH,eAAa,EAAzF,SACI,cAAC,IAAD,CAAyBvH,MAAO,CAAC5I,MAAM,QAAS6J,QAAS,WAAKmH,GAAaD,QAG/E,cAACnH,EAAA,EAAD,CAAahB,MAAO,CAACU,MAAM,OAAOC,OAAO,OAAON,gBAAgB,OAAOC,OAAO,qBAA9E,SACI,cAAC,IAAD,CAAuBN,MAAO,CAAC5I,MAAM,WAAY6J,QAAS,WAAKmH,GAAaD,oBAQ5G,cAACrI,EAAA,EAAD,CAAMC,MAAI,EAAEC,MAAO,CAACU,MAAM,QAA1B,SACI,cAAC6H,EAAA,EAAD,CAAUC,GAAIL,EAAUM,QAAS,EAAGC,eAAa,EAAjD,SACI,cAAC5I,EAAA,EAAD,CAAMS,WAAS,EAAC8H,UAAU,SAASrI,MAAO,CAACE,QAAQ,QAAnD,SACI,eAACJ,EAAA,EAAD,CAAMC,MAAI,EAACQ,WAAS,EAAC8H,UAAW,SAAhC,UACI,cAACvI,EAAA,EAAD,CAAMC,MAAI,EAAC4I,GAAI,GAAIC,GAAI,GAAvB,SACKnB,GAAmBhR,EAAKmJ,KAE7B,cAACE,EAAA,EAAD,CAAMC,MAAI,EAAC4I,GAAI,GAAIC,GAAI,GAAvB,SACI,cAAC9I,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACsH,EAAA,EAAD,CAAQjF,UAAWxC,EAAM8B,SAAWT,QAAS,kBAAKhK,EAASwF,YAAoChG,KAAQmL,QAAQ,YAAY0F,UAAW,cAAC,IAAD,IAAYC,eAAa,EAACvH,MAAO,CAACK,gBAAgB,UAAUmH,cAAc,OAAOpQ,MAAOwI,EAAM8B,SAAW,GAAG,QAAS4E,UAAW7E,EAAQ+D,aAA9Q,SACK,mC,iCCpc9B,QAA0B,+C,iCCA1B,QAA0B,gD,kTCyDnCvB,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTyE,KAAM,CACFC,QAAS,OACTpI,MAAO,QAEXqI,eAAgB,CACZrI,MAAM,OACNL,gBAAgB,UAChBH,QAAS,qBACTS,OAAO,SAEXqI,cAAe,CACXtI,MAAO,OACPL,gBAAiB,WAErB2E,YAAY,4BACQ,CACZ5E,aAAc,IAGtBgF,aAAc,CACVC,YAAa,0BAEjB4D,WAAY,CACR7I,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,QACNC,OAAO,OACPT,QAAQ,gBACRuF,UAAU,OACV,UAAW,CACPpF,gBAAgB,UAChBoF,UAAU,SAGlBR,GAAI,CACAnE,SAAS,OACT1J,MAAM,OACN8N,WAAY,IACZrE,WAAW,aAEfsE,GAAI,CACArE,SAAS,OACT1J,MAAM,UACN8N,WAAY,IACZrE,WAAW,aAEfqI,QAAS,CACL9R,MAAO,UACP0J,SAAU,OACVoE,WAAY,IACZrE,WAAW,aAEfsI,UAAW,CACP/I,aAAa,EACbhJ,MAAM,OACNiJ,gBAAgB,UAChBK,MAAM,OACNC,OAAO,OACPT,QAAQ,iBAEZkJ,gBAAiB,CACb1I,MAAO,OACP+D,WAAY,UACZrE,aAAc,OACdiJ,cAAc,QAElBC,mBAAoB,CACf,iBAAkB,CACflS,MAAO,SAGfmS,gBAAiB,CACblJ,gBAAiB,OACjBC,OAAQ,oBACRQ,SAAU,OACV1J,MAAO,UACPyJ,WAAY,YACZ,UAAW,CACPR,gBAAgB,SAGxBmJ,aAAc,CACVnJ,gBAAiB,UACjBC,OAAQ,oBACRQ,SAAU,OACV1J,MAAO,UACPyJ,WAAY,YACZ,UAAW,CACPR,gBAAgB,iBAoB1BoJ,EAAQ,SAAC7J,GAEX,OACI,cAAC,IAAD,CAAMG,MAAI,EAACC,MAAO,CAAEC,YAAY,OAAOU,OAAQ,OAAQT,QAAS,UAAWE,aAAc,MAAOC,gBAAiBT,EAAMxI,OAAvH,SACI,cAAC,IAAD,CAAMmJ,WAAS,EAACC,eAAe,SAASC,WAAW,SAAST,MAAO,CAACU,MAAO,OAAQC,OAAQ,QAA3F,SACI,cAAC,IAAD,CAAYX,MAAO,CAACa,WAAW,YAAYzJ,MAAM,OAAO0J,SAAS,QAAjE,SAA2ElB,EAAMmB,aAkPlF2I,UA5Oa,SAAC9J,GAA4C,IAAD,IAE9D6B,EAAUwC,IACV0F,EAAUC,cACVzF,EAAQwB,cAER1O,GADagP,YAAc9B,EAAM+B,YAAYC,KAAK,OACvCtG,eAEXjC,EAAagC,EAAMiK,MAAMnG,OAAO/L,GAAKiI,EAAMiK,MAAMnG,OAAO/L,GAAK,IAC7DmS,EAAmBjE,aAAY,SAACC,GAAD,OAAsBA,EAAMzM,SAASyD,QAAO,SAAC7C,GAAD,OAAYA,EAAEtC,GAAG7B,aAAe8H,QAAa,GAExHmM,EAAelE,aAAY,SAACC,GAAD,OAAsBA,EAAMiE,gBAU7D,OARAC,qBAAU,WAEN/S,EAASuC,eACTvC,EAASuB,YAAsBoF,IAC/B3G,EAASa,iBAEV,IAGA,cAAC,IAAD,CAAMyI,WAAS,EAAC8H,UAAU,SAAS5H,WAAW,SAAS6F,UAAW7E,EAAQoH,KAA1E,SAEOiB,EACM,qCACA,cAAC,IAAD,CAAM/J,MAAI,EAACQ,WAAS,EAACE,WAAW,SAAS6F,UAAW7E,EAAQsH,eAAgBV,UAAU,SAAtF,SACI,eAAC,IAAD,CAAMtI,MAAI,EAACQ,WAAS,EAAC8H,UAAU,SAA/B,UACI,cAAC,IAAD,CAAMtI,MAAI,EAACQ,WAAS,EAApB,SACI,eAAC,IAAD,CACI0J,UAAW,cAAC,IAAD,CAAkBnJ,SAAS,UACtC,aAAW,aAFf,UAIQ,cAAC,IAAD,CAAMgB,UAAU,QAAQ1K,MAAM,UAAU8S,KAAK,IAA7C,SACA,cAAC,IAAD,CAAY5D,UAAW7E,EAAQ0D,GAA/B,SAAoC,eAExC,cAAC,IAAD,CACIrD,UAAU,QADd,SAGI,cAAC,IAAD,CAAYwE,UAAW7E,EAAQ0D,GAAInF,MAAO,CAAC5I,MAAM,WAAjD,SAA8D,2BAI1E,eAAC,IAAD,CAAM2I,MAAI,EAACQ,WAAS,EAACE,WAAW,SAAST,MAAO,CAAEoH,UAAW,QAA7D,UACI,cAAC,IAAD,CAAMrH,MAAI,EAAV,SACI,cAAC,IAAD,CAAYwH,eAAa,EAACvH,MAAO,CAAEK,gBAAiB,cAAeH,QAAQ,EAAGD,YAAY,QAASgB,QAAS,WAAQ0I,EAAQ7B,KAAK,cAAjI,SACI,cAAC,IAAD,CAAkB9H,MAAO,CAAC5I,MAAM,cAGxC,cAAC,IAAD,CAAM2I,MAAI,EAAV,SACI,cAAC,IAAD,CAAMQ,WAAS,EAACC,eAAe,SAASC,WAAW,SAAnD,mBAEQqJ,EAAiB9Q,YAFzB,aAEQ,EAAuBT,KAAI,SAACvB,GAExB,OACI,cAACyS,EAAD,CAAsBrS,MAAOJ,EAAII,MAAO2J,MAAK,WAAO/J,EAAIG,OAA5CH,EAAIG,aAMpC,cAAC,IAAD,CAAM4I,MAAI,EAAV,SACI,cAAC,IAAD,CAAYuG,UAAW7E,EAAQwD,GAA/B,SAAoC6E,EAAiB3S,iBAMrE,cAAC,IAAD,CAAM4I,MAAI,EAACQ,WAAS,EAACE,WAAW,SAAS6F,UAAW7E,EAAQuH,cAAeX,UAAU,SAArF,SACI,eAAC,IAAD,CAAM9H,WAAS,EAACP,MAAO,CAAC0E,aAAa,OAAO0C,UAAU,QAAtD,UACI,cAAC,IAAD,CAAOrH,MAAI,EAACQ,WAAS,EAACC,eAAe,SAASR,MAAO,CAACuC,YAAY,OAAO4H,aAAa,OAAQzJ,MAAM,OAApG,SACI,eAAC,IAAD,CAAMX,MAAI,EAACQ,WAAS,EAAC8H,UAAU,SAAS/B,UAAW7E,EAAQ2H,gBAA3D,UACI,cAAC,IAAD,CAAMrJ,MAAI,EAACC,MAAO,CAACuC,YAAY,OAAO+F,WAAW,QAAjD,SACI,cAAC,IAAD,CAAYhC,UAAW7E,EAAQwD,GAAIjF,MAAO,CAACc,SAAS,QAApD,SAA8D,sBAElE,cAAC,IAAD,CAAMf,MAAI,EAACC,MAAO,CAACU,MAAM,OAAOC,OAAO,MAAMyG,UAAU,OAAO1C,aAAa,OAAOrE,gBAAgB,aAGlG,eAAC,IAAD,CAAMN,MAAI,EAACQ,WAAS,EAAC8H,UAAU,SAASrI,MAAO,CAACuC,YAAY,OAAO4H,aAAa,QAAhF,UACI,eAAC,IAAD,CAAMpK,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,aAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,eAAC,IAAD,CAAMrI,WAAS,EAACP,MAAO,CAAEU,MAAO,QAAUF,eAAe,aAAaC,WAAW,SAAjF,WACkC,IAA7BqJ,EAAiB/P,QAAmB,qBAAKqQ,IAAKC,IAAYrK,MAAO,CAAEU,MAAO,OAAQC,OAAQ,OAAQV,YAAa,SAAc,qBAAKmK,IAAKE,IAAWtK,MAAO,CAAEU,MAAO,OAAQC,OAAQ,OAAQV,YAAa,SACxM,cAAC,IAAD,CAAMF,MAAI,EAAV,SACI,cAAC,IAAD,WAA2C,IAA7B+J,EAAiB/P,QAAmB,SAAW,sBAK7E,eAAC,IAAD,CAAMgG,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,WAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAAyG,KAA1BiJ,EAAiB3S,KAAc,OAAS2S,EAAiB3S,YAGhJ,eAAC,IAAD,CAAM4I,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,kBAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACA,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA+EiJ,EAAiBS,mBAGpG,eAAC,IAAD,CAAMxK,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,cAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA+EiJ,EAAiBU,oBAGxG,eAAC,IAAD,CAAMzK,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,mBAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA+EiJ,EAAiBW,kBAGxG,eAAC,IAAD,CAAM1K,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,WAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACsC,IAAjCkB,EAAiB9Q,KAAKsB,OAAe,OAClC,cAAC,IAAD,CAAMiG,WAAS,EAACC,eAAe,aAAaC,WAAW,SAAvD,mBAEQqJ,EAAiB9Q,YAFzB,aAEQ,EAAuBT,KAAI,SAACvB,GAExB,OACI,cAACyS,EAAD,CAAsBrS,MAAOJ,EAAII,MAAO2J,MAAK,WAAO/J,EAAIG,OAA5CH,EAAIG,gBAS5C,eAAC,IAAD,CAAM4I,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,gBAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA+EkJ,EAAa9Q,SAASyR,cAG7G,eAAC,IAAD,CAAM3K,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,mBAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,eAAC,IAAD,CAAMrI,WAAS,EAAC8H,UAAU,SAA1B,UACI,eAAC,IAAD,CAAMtI,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,OAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,oBAEJ,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,mBAAiFkJ,EAAa9Q,SAAS0R,QAAvG,YAAkHC,IAAOb,EAAa9Q,SAAS4R,UAAUC,OAAO,oBAGxK,eAAC,IAAD,CAAM/K,MAAI,EAACQ,WAAS,EAApB,UACI,cAAC,IAAD,CAAMR,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,kBAEJ,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,mBAAiFkJ,EAAa9Q,SAAS0R,QAAvG,YAAkHC,IAAOb,EAAa9Q,SAAS4R,UAAUC,OAAO,4BAMpL,eAAC,IAAD,CAAM/K,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,wBAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,mBAAiFkJ,EAAa9Q,SAAS0R,QAAvG,YAAkHC,IAAOb,EAAa9Q,SAAS4R,UAAUC,OAAO,oBAGxK,eAAC,IAAD,CAAM/K,MAAI,EAACQ,WAAS,EAACP,MAAO,CAAE0E,aAAc,QAA5C,UACI,cAAC,IAAD,CAAM3E,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAY5I,MAAO,CAACc,SAAS,OAAO1J,MAAM,UAAUyJ,WAAW,aAA/D,SAA8E,oBAElF,cAAC,IAAD,CAAMd,MAAI,EAAC4I,GAAI,EAAGC,GAAI,EAAtB,qBAKR,eAAC,IAAD,CAAM7I,MAAI,EAACQ,WAAS,EAACP,MAAO,CAACuC,YAAY,QAAzC,UACI,cAAC,IAAD,CAAMxC,MAAI,EAACC,MAAO,CAACC,YAAY,QAA/B,SACI,cAAC,IAAD,CAAQqH,UAAW,cAAC,IAAD,CAAUtH,MAAO,CAAE5I,MAAO,UAAWsJ,MAAO,OAAQC,OAAQ,UAAciB,QAAQ,YAAY2F,eAAa,EAACvH,MAAO,CAACyF,UAAU,OAAOnF,OAAQ,oBAAoBD,gBAAgB,OAAOjJ,MAAM,UAAUsJ,MAAM,SAAU4F,UAAW7E,EAAQwH,WAAYhI,QAAS,kBAAK0I,EAAQ7B,KAAR,oBAA0BlK,EAA1B,WAAxR,SAAwU,WAE5U,cAAC,IAAD,CAAMmC,MAAI,EAAV,SACI,cAAC,IAAD,CAAQkB,QAAS,WAEbzK,YAAasT,EAAD,mBAAgCA,EAAiB3S,KAAjD,WACbmQ,UAAW,cAAC,IAAD,CAAatH,MAAO,CAAE5I,MAAO,UAAWsJ,MAAO,OAAQC,OAAQ,UAAciB,QAAQ,YAAY2F,eAAa,EAACvH,MAAO,CAACyF,UAAU,OAAOnF,OAAQ,oBAAoBD,gBAAgB,OAAOjJ,MAAM,UAAUsJ,MAAM,SAAU4F,UAAW7E,EAAQwH,WAH5P,SAG0Q,uBAK1R,cAAC,IAAD,CAAOlJ,MAAI,EAACQ,WAAS,EAAC8H,UAAU,SAASrI,MAAO,CAACU,MAAM,MAAMyJ,aAAa,QAA1E,SAEQL,EAAiBhR,QAAQC,UAAUR,KAAI,SAACwS,EAAiB1Q,GAErD,OACI,qCACI,cAAC,IAAD,CAAoC5D,KAAMsU,EAAarJ,UAAU,GAA7CqJ,EAAYpT,IAE5B0C,IAAUyP,EAAiBhR,QAAQC,UAAUuB,OAAS,EAAI,GAC1D,eAAC,IAAD,CAAMyF,MAAI,EAACQ,WAAS,EAACC,eAAe,SAASR,MAAO,CAACG,OAAO,YAA5D,UACI,cAAC,IAAD,CAAQiC,UAAU,EAAMpC,MAAO,CAACI,aAAa,mBAAoBkG,WAAqC,IAA1ByE,EAAYxQ,UAAqBkH,EAAQ+H,aAAe/H,EAAQ8H,gBAA5I,SAA8J,QAC9J,cAAC,IAAD,CAAQnH,UAAU,EAAMpC,MAAO,CAACI,aAAa,mBAAoBkG,WAAqC,IAA1ByE,EAAYxQ,UAAsBkH,EAAQ+H,aAAe/H,EAAQ8H,gBAA7I,SAA+J,0BAWrM","file":"static/js/30.1a9831ac.chunk.js","sourcesContent":["import fileDownload from 'js-file-download'\n\n\nexport const currencyFormat = (value: string | number) =>\n{\n    if (value !== undefined)\n    {\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n    return ''\n}\n\nexport const dateOptionMappings: any = \n{\n    'Last 7 days': 'Last 7 days',\n    'Last 30 days': 'Last 30 days',\n    'Last 90 days': 'Last 90 days',\n    'Last 365 days': 'Last 365 days',\n    'custom': 'Custom date range'\n}\n\nexport const bannerMappings: any = \n{\n    'KFC': 'KFC',\n    'PHHK': 'Pizza Hut',\n    'PHDHK': 'PHD'\n}\n\nexport const memberTypeMappings: any =\n{\n    'jrgMember': 'JRG Member',\n    'yuu': 'Yuu',\n    'anonymous': 'Anonymous',\n    'yuu_jrgMember': 'Yuu & JRG Member',\n    'yuu_anonymous': 'Yuu & Anonymous'\n}\n\nexport const bannerTypeMappings: any =\n{\n    'kfc': 'KFC',\n    'phd': 'PHD',\n    'kfc_phd': 'KFC & PHD',\n    'pizzahut': 'Pizza Hut',\n    'kfc_pizzahut': 'KFC & PH',\n    'phd_pizzahut': 'PH & PHD',\n    'kfc_phd_pizzahut': 'KFC, PH & PHD',\n}\n\nexport const memberTypeColorMappings: any =\n{\n    'jrgMember': '#4A78DF',\n    'yuu': '#AC6700',\n    'anonymous': '#65CBFF',\n    'yuu_jrgMember': '#FEC558',\n    'yuu_anonymous': '#8C7CEE'\n}\n\nexport const trafficTypeColorMappings: any =\n{\n    'Yuu' : '#4A78DF',\n    'Social' : '#AC6700',\n    'Referral': '#6553D8',\n    'Paid Display': '#65CBFF',\n    'Paid Video': '#CCA645',\n    'Paid Social': '#AA9CFF',\n    'Paid Search': '#1AADC1',\n    'Own': '#FF9649',\n    'Others': '#56D6E8',\n    'Organic Search': '#FEC558',\n    'Offline': '#318408',\n    'Direct': '#FE2D53',\n    'BYOD': '#52C41A',\n    'APP': '#FC75FF',\n    'Affiliate' : 'green'\n}\n\nexport const bannerTypeColorMappings: any =\n{\n    'kfc': '#AC6700',\n    'phd': '#65CBFF',\n    'kfc_phd': '#FEC558',\n    'pizzahut': '#52C41A',\n    'kfc_pizzahut': '#8C7CEE',\n    'phd_pizzahut': '#FC75FF',\n    'kfc_phd_pizzahut': '#4A78DF',\n}\n\nexport const bannerTypeColorMappingsForDetails: any =\n{\n    'KFC': '#AC6700',\n    'PHD': '#65CBFF',\n    'KFC & PHD': '#FEC558',\n    'Pizza Hut': '#52C41A',\n    'KFC & PH': '#8C7CEE',\n    'PH & PHD': '#FC75FF',\n    'KFC, PH & PHD': '#4A78DF',\n}\n\nexport const downloadFile = (data:any, filename:string) =>\n{\n    const downloadData = JSON.stringify(data)\n    fileDownload(downloadData, filename)\n}\n\n\n\n\n","import { audienceForm, AudienceType, creatorType, filterColumn, optionValuesType, tagItem } from '../reducers/audienceReducer'\nimport\n{\n    HANDLE_AUDIENCE_FILTER,\n    FETCH_SPECIFIC_AUDIENCE,\n    HANDLE_AUDIENCE_FORM_FILTERING_ADD,\n    HANDLE_AUDIENCE_FORM_FILTERING_REMOVE,\n    HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n    AUDIENCE_LOADING,\n    FETCH_AUDIENCE,\n    FETCH_AUDIENCE_TAG,\n    HANDLE_AUDIENCE_FORM_NAME,\n    HANDLE_AUDIENCE_FORM_BANNER,\n    HANDLE_AUDIENCE_FORM_TAGS,\n    HANDLE_AUDIENCE_FORM_SCHEDULE,\n    HANDLE_AUDIENCE_FORM_ACTION,\n    INIT_AUDIENCE_FORM,\n    UNMOUNT_AUDIENCE_FORM,\n    HANDLE_AUDIENCE_FORM_TAGS_AFTER_EDIT,\n} from './type'\nimport _ from 'lodash'\nimport web from '../apis/httpRequest'\nimport audienceSelectorMapping from '../utils/filteringMapping'\n\nexport const handleCreateAudienceTag = (tag: tagItem) => async (dispatch: any) =>\n{\n    const data = {\n        name: tag.name,\n        color: tag.color,\n        createUser: tag.createUser\n    }\n\n    const payload = await web.post(`/v1/audiences/tags`, data)\n    return payload\n}\n\nexport const handleModifyAudienceTag = (tag: tagItem) => async (dispatch: any) =>\n{\n    const data = {\n        name: tag.name,\n        color: tag.color,\n        createUser: tag.createUser\n    }\n    const payload = await web.put(`/v1/audiences/tags/${tag.id}`, data)\n    return payload\n}\n\nexport const handleDeleteAudienceTag = (tag: tagItem) => async (dispatch: any) =>\n{\n    const payload = await web.delete(`/v1/audiences/tags/${tag.id}`)\n    return payload\n}\n\nexport const fetchAudienceTag = () => async (dispatch: any) =>\n{\n    const payload = await web.get(`/v1/audiences/tags`)\n\n    dispatch({\n        type:FETCH_AUDIENCE_TAG,\n        payload: payload.data\n    })\n}\n\nexport const handleConfirmChecked = (id: string) => async (dispatch: any) =>\n{\n    const payload = await web.post(`/v1/audiences/${id}/confirms`)\n    return payload\n}\n\nexport const handleMutipleConfirmChecked = (idList: string[]) => async (dispatch: any) =>\n{\n    return Promise.all(idList.map(id => web.post(`/v1/audiences/${id}/confirms`)))\n}\n\nexport const fetchSpecificAudience = (id: string) => async (dispatch: any) =>\n{\n    dispatch({ type: AUDIENCE_LOADING, payload: true })\n \n    const payload = await web.get<AudienceType>(`/v1/audiences/${id}`)\n\n    if (payload.status === 200)\n    {\n        dispatch({\n            type: FETCH_SPECIFIC_AUDIENCE,\n            payload: payload.data\n        })\n    }\n\n    const form = {\n        name: payload.data.name,\n        banner: payload.data.details.banner,\n        filtering: payload.data.details.filtering,\n        tags: payload.data.tags,\n        schedule: payload.data.details.schedule,\n        actionDestination: payload.data.details.actionDestination\n    }\n        \n    dispatch({ type: INIT_AUDIENCE_FORM, payload: form })\n    dispatch({ type: AUDIENCE_LOADING, payload: false })\n}\n\nexport const handleSpecificAudienceIntoForm = (audience: AudienceType) => async (dispatch: any) =>\n{\n    const payload = await web.get<AudienceType>(`/v1/audiences/${audience.id}`)\n\n    if (payload.status === 200)\n    {\n        dispatch({\n            type: FETCH_SPECIFIC_AUDIENCE,\n            payload: payload.data\n        })\n    }\n    const form = {\n        name: audience.name,\n        banner: audience.details.banner,\n        filtering: audience.details.filtering,\n        tags: audience.tags,\n        schedule: audience.details.schedule,\n        actionDestination: audience.details.actionDestination\n    }\n        \n    dispatch({ type: INIT_AUDIENCE_FORM, payload: form })\n}\n\nexport const unmount_audience_details = () => async (dispatch: any) =>\n{\n    dispatch({ type: UNMOUNT_AUDIENCE_FORM, payload: {} })\n    return true\n}\n\n\nexport const fetchAudience = () => async (dispatch:any) => {\n\n    dispatch({ type: AUDIENCE_LOADING, payload: true })\n    \n    const payload = await web.get<AudienceType[]>(`/v1/audiences`)\n\n    if (payload.status === 200)\n    {\n        dispatch({\n            type: FETCH_AUDIENCE,\n            payload: payload.data\n        })\n    }\n\n    dispatch({ type: AUDIENCE_LOADING, payload: false })\n    return payload\n}\n\nexport const duplicatedAudience = (audience: AudienceType) => async (dispatch: any) =>\n{\n    const randomChar = Math.random().toString(36).slice(2, 7)\n    const data = {\n        name: `${audience.name}_${randomChar}`,\n        confirm: false,\n        details: audience.details,\n        lastUpdatedBy: audience.lastUpdatedBy,\n        tags: audience.tags.map(x=> x.id)\n    }\n\n    const payload = await web.post(`/v1/audiences`, data)\n    return payload\n}\n\nexport const createAudience = (audience: audienceForm) => async (dispatch:any) => {\n\n    const body = {\n        name: audience.name,\n        lastUpdatedBy: 'testAccount',\n        tags: audience.tags.map(x => x.id),\n        details: {\n            filtering: audience.filtering.map((audi:creatorType, index:number) =>\n            {\n                if (index === audience.filtering.length - 1)\n                {\n                    return  {...audi, ...{connector: ''}}\n                }\n                else\n                {\n                    return audi    \n                }\n            }),\n            banner: audience.banner,\n            schedule: audience.schedule,\n            actionDestination: audience.actionDestination\n        }\n    }\n\n    const payload = await web.post<audienceForm>(`/v1/audiences`,body)\n    return payload\n}\n\nexport const modifyAudience = (audience: audienceForm, originalData:AudienceType) => async (dispatch:any) => {\n\n    const body = {\n        confirm: originalData.confirm,\n        name: audience.name,\n        lastUpdatedBy: 'testAccount',\n        tags: audience.tags.map(x => x.id),\n        details: {\n            filtering: audience.filtering.map((audi:creatorType, index:number) =>\n            {\n                if (index === audience.filtering.length - 1)\n                {\n                    return  {...audi, ...{connector: ''}}\n                }\n                else\n                {\n                    return audi    \n                }\n            }),\n            banner: audience.banner,\n            schedule: audience.schedule,\n            actionDestination: audience.actionDestination\n        }\n    }\n    \n    const payload = await web.put(`/v1/audiences/${originalData.id}`,body)\n    return payload\n}\n\nexport const deleteAudience = (id: string) => async (dispatch:any) => {\n\n    const payload = await web.delete(`/v1/audiences/${id}`)\n    return payload\n}\n\nexport const handleMutipleDelete = (idList: string[]) => async (dispatch: any) =>\n{\n    return Promise.all(idList.map(id => web.delete(`/v1/audiences/${id}`)))\n}\n\nexport  const  handleAudienceFilter = (payload: object) => async (dispatch:any) => {\n    dispatch({\n        type:HANDLE_AUDIENCE_FILTER,\n        payload:payload\n    })\n}\n\n// audience form action\nexport const handleAudienceFormForName = (name: string) => async (dispatch: any) =>\n{\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_NAME,\n        payload:name\n    })\n}\n\nexport const handleAudienceFormForBanner = (name: string) => async (dispatch: any) =>\n{\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_BANNER,\n        payload:name\n    })\n}\n\n\nexport const handleAudienceFormForTags = (tag: tagItem) => async (dispatch: any) =>\n{\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_TAGS,\n        payload:tag\n    })\n}\n\nexport const handleAudienceFormForTagsAfterEditTag = (tag: tagItem) => async (dispatch: any) =>\n{\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_TAGS_AFTER_EDIT,\n        payload:tag\n    })\n}\n\nexport const handleAudienceFormForSchedule = (scheduleForm: any) => async (dispatch: any) =>\n{\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_SCHEDULE,\n        payload:scheduleForm\n    })\n}\n\nexport const handleAudienceFormForAction = (actionDestination: any) => async (dispatch: any) =>\n{\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_ACTION,\n        payload:actionDestination\n    })\n}\n\nexport const handleAudienceAddFilter = (creator: creatorType, currentLength: number) => async (dispatch: any) =>\n{\n    const payload = { ...creator, ...{ id: currentLength } }\n    \n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_FILTERING_ADD,\n        payload: payload\n    })\n}\n\nexport const handleAudienceRemoveFilter = (filterID: number) => async (dispatch: any) =>\n{\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_FILTERING_REMOVE,\n        payload: filterID\n    })\n}\n\nexport const handleAudienceChangeConnectorFilter = (creator: creatorType) => async (dispatch: any) =>\n{\n    const payload = { ...creator, ...{ connector: !creator.connector } }\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\nexport const handleAudienceFilterStartTime = (creator: creatorType, time:string) => async (dispatch: any) =>\n{\n    const payload = { ...creator, ...{ startTime: time } }\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\nexport const handleAudienceFilterEndTime = (creator: creatorType, time:string) => async (dispatch: any) =>\n{\n    const payload = { ...creator, ...{ endTime: time } }\n    dispatch({\n        type:HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\nexport const handleAudienceChangeAddFilterButton = (creator: creatorType) => async (dispatch: any) =>\n{\n    const chooseValue = creator.filterColumn.map(x => x.value)\n    const temp = audienceSelectorMapping[creator.value].filter((column: any) =>\n    {\n        return _.includes(chooseValue,column.value) === false\n    })[0]\n    \n    if (temp)\n    {\n        const maxId = _.max(creator.filterColumn.map(x=>x.filterId)) === undefined ? 0 : _.max(creator.filterColumn.map(x=>x.filterId)) as number + 1\n        const defaultFilter = {\n            filterId: maxId,\n            filterName: temp.name,\n            value: temp.value,\n            subFilterName: '',\n            subValue: '',\n            optionValues: {},\n            type: temp.type,\n            operator:''\n        }\n        const payload = { ...creator, ...{ filterColumn: [...creator.filterColumn, defaultFilter] } }\n        dispatch({\n            type:HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n            payload: payload\n        })\n    }\n    \n}\n\nexport const handleAudienceChangeCopyFilterButton = (creator: creatorType, specificId: number) => async (dispatch: any) =>\n{\n    const maxId = _.max(creator.filterColumn.map(x=>x.filterId)) === undefined ? 0 : _.max(creator.filterColumn.map(x=>x.filterId)) as number + 1\n    const specificFilter = creator.filterColumn.filter(x => x.filterId === specificId)[0]\n    \n    if (specificFilter)\n    {\n        const data = { ...specificFilter, ...{ filterId: maxId } }\n        const payload = { ...creator, ...{ filterColumn: [...creator.filterColumn, data] } }\n        dispatch({\n            type:HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n            payload: payload\n        })\n    }\n\n}\n\nexport const handleAudienceChangeRefineFilterButton = (creator: creatorType, specificId: number) => async (dispatch: any) =>\n{\n    const maxId = _.max(creator.filterColumn.map(x=>x.filterId)) === undefined ? 0 : _.max(creator.filterColumn.map(x=>x.filterId)) as number + 1\n    const specificFilter = creator.filterColumn.filter(x => x.filterId === specificId)[0]\n    \n    if (specificFilter)\n    {\n        const data = { ...specificFilter, ...{ filterId: maxId, subFilterName: '', subValue: '', optionValues: {} } }\n        const payload = { ...creator, ...{ filterColumn: [...creator.filterColumn, data] } }\n        dispatch({\n            type:HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n            payload: payload\n        })\n    }\n\n}\n\nexport const handleAudienceChangeRemoveFilterButton = (creator: creatorType, specificId: number) => async (dispatch: any) =>\n{\n\n    const payload = { ...creator, ...{ filterColumn: creator.filterColumn.filter(x=>x.filterId !== specificId) } }\n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\n\nexport const handleAudienceChangeForName = (creator: creatorType, filter: filterColumn, newFilter: any) => async (dispatch: any) =>\n{\n    const modifyFilter = {\n        filterId: filter.filterId,\n        type: newFilter.type,\n        filterName: newFilter.name,\n        value: newFilter.value,\n        operator: _.keys(newFilter.operator)[0],\n        optionValues: {},\n        subFilterName: '',\n        subValue: ''\n    }\n    const payload = { ...creator, filterColumn: _.sortBy([...creator.filterColumn.filter(x => x.filterId !== filter.filterId), modifyFilter],'filterId')}\n    \n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\n\nexport const handleAudienceChangeForOperator = (creator: creatorType, filter: filterColumn, operator: string) => async (dispatch: any) =>\n{\n    const selectedOperator = audienceSelectorMapping[creator.value].filter((x: any) => x.value === filter.value)[0]?.operator[operator]\n    const modifyFilter = { ...filter, operator: operator, type: selectedOperator?.type}\n    const payload = { ...creator, filterColumn: _.sortBy([...creator.filterColumn.filter(x => x.filterId !== filter.filterId), modifyFilter],'filterId')}\n\n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\n\nexport const handleAudienceChangeForValues = (creator: creatorType, filter: filterColumn, value: any, mutipleValue?: number | undefined) => async (dispatch: any) =>\n{\n    let optionValues: optionValuesType = { value1: '', value2: '' }\n    if (mutipleValue !== undefined)\n    {\n        const tempList = filter.optionValues\n        if (mutipleValue === 0)\n        {\n            tempList.value1 = value\n        }\n        else\n        {\n            tempList.value2 = value\n        }\n        optionValues = tempList\n    }\n    else\n    {\n        optionValues.value1 = value\n    }\n\n    const modifyFilter = { ...filter, optionValues: optionValues }\n\n    const payload = { ...creator, filterColumn: _.sortBy([...creator.filterColumn.filter(x => x.filterId !== filter.filterId), modifyFilter], 'filterId') }\n\n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\n\n\nexport const handleAudienceChangeForNameMutidimension  = (creator: creatorType, filter: filterColumn, newFilter: any) => async (dispatch: any) =>\n{\n    const modifyFilter = {\n        filterId: filter.filterId,\n        type: newFilter.type,\n        filterName: newFilter.name,\n        value: newFilter.value,\n        operator:  newFilter.subname === undefined? '' : _.keys(newFilter.subname[_.keys(newFilter.subname)[0]]?.operator)[0],\n        optionValues: {},\n        subFilterName: newFilter.subname === undefined? '' :newFilter.subname[_.keys(newFilter.subname)[0]]?.name,\n        subValue:  newFilter.subname === undefined? '' :newFilter.subname[_.keys(newFilter.subname)[0]]?.value\n    }\n    const payload = { ...creator, filterColumn: _.sortBy([...creator.filterColumn.filter(x => x.filterId !== filter.filterId), modifyFilter],'filterId')}\n    \n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\nexport const handleAudienceChangeForSubNameMutidimension  = (creator: creatorType, filter: filterColumn, subname: string) => async (dispatch: any) =>\n{\n    const mappings = audienceSelectorMapping[creator.value].filter((x: any) => x.value === filter.value)[0]?.subname[subname]\n    const modifyFilter = {\n        ...filter,\n        subFilterName: mappings.name,\n        subValue: mappings.value,\n        operator: _.keys(mappings.operator)[0],\n        type: mappings.operator[_.keys(mappings.operator)[0]].type,\n        optionValues: {},\n    }\n\n    const payload = { ...creator, filterColumn: _.sortBy([...creator.filterColumn.filter(x => x.filterId !== filter.filterId), modifyFilter],'filterId')}\n    \n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\nexport const handleAudienceChangeForOperatorMutidimension  = (creator: creatorType, filter: filterColumn, operator: string) => async (dispatch: any) =>\n{\n    const mappings = audienceSelectorMapping[creator.value].filter((x: any) => x.value === filter.value)[0]?.subname[filter.subValue].operator[operator]\n\n    const modifyFilter = { \n        ...filter,\n        operator: mappings.value,\n        type: mappings.type,\n        optionValues: {},\n    }\n    const payload = { ...creator, filterColumn: _.sortBy([...creator.filterColumn.filter(x => x.filterId !== filter.filterId), modifyFilter],'filterId')}\n\n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\n\nexport const handleAudienceChangeForValuesMutidimension = (creator: creatorType, filter: filterColumn, value: any, mutipleValue?: number | undefined) => async (dispatch: any) =>\n{\n\n    let optionValues: optionValuesType = {value1:'', value2:''}\n    if (mutipleValue !== undefined)\n    {\n        const tempList = filter.optionValues\n        if (mutipleValue === 0)\n        {\n            tempList.value1 = value\n        }\n        else\n        {\n            tempList.value2 = value\n        }\n        optionValues = tempList\n    }\n    else\n    {\n        optionValues.value1 = value\n    }\n\n    const modifyFilter = { ...filter, optionValues: optionValues }\n    \n    const payload = { ...creator, filterColumn: _.sortBy([...creator.filterColumn.filter(x => x.filterId !== filter.filterId), modifyFilter], 'filterId') }\n\n    dispatch({\n        type: HANDLE_AUDIENCE_FORM_FILTERING_CHANGE,\n        payload: payload\n    })\n}\n\n","import axios from 'axios'\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL ? process.env.REACT_APP_BACKEND_URL: 'https://jrg-backend-tcgfqg2xbq-df.a.run.app'\nconsole.log(process.env)\nconsole.log(BACKEND_URL)\nexport default axios.create({\n    baseURL: BACKEND_URL,\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"authorization\": \"key\"\n    }\n});\n","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { RootState } from '../../reducers/index'\nimport {\n    InputAdornment,\n    Typography,\n} from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport Collapse from '@mui/material/Collapse';\nimport ArrowDropDownCircleIcon from '@mui/icons-material/ArrowDropDownCircle';\nimport ArrowDropUpCircleIcon from '@mui/icons-material/ArrowDropUp';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FilterNoneIcon from '@mui/icons-material/FilterNone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@mui/material';\nimport LabelIcon from '@mui/icons-material/Label';\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\nimport { PieChart, Pie, Label, Cell, ResponsiveContainer } from 'recharts';\nimport { handleAudienceRemoveFilter } from '../../actions/audienceAction'\nimport  Autocomplete  from '@mui/material/Autocomplete';\nimport { creatorType, filterColumn } from '../../reducers/audienceReducer'\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport moment from 'moment';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport\n{\n    handleAudienceChangeForValues,\n} from '../../actions/audienceAction'\nimport Paper from \"@material-ui/core/Paper\";\n\n\ninterface BadgeProps {\n    label: string\n    color: string\n    data: creatorType\n    filter: filterColumn\n    exceptValues: string[]\n}\n\nconst MutipleSelectBadge = (props: BadgeProps) =>\n{\n    const dispatch = useDispatch()\n    return (\n        <Grid item  style={{ marginRight:'10px',padding: '2px 8px', margin:'4px',  borderRadius: '5px',  backgroundColor: props.color, border:'1px solid #5A91FF' }}>\n            <Grid container justifyContent='space-between' alignItems='center' style={{width: '100%', height: '18px'}}>\n                <Typography style={{ fontFamily: 'Noto sans', color: '#000', fontSize: '12px' }}>{props.label}</Typography>\n                <IconButton onClick={(event) => { event.stopPropagation(); dispatch(handleAudienceChangeForValues(props.data, props.filter,  props.exceptValues))}} style={{ padding: 0 }}><ClearIcon style={{fill:'#000',width:'12px',height:'12px',marginLeft:'4px'}}/></IconButton>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst RenderValueItem = (data: creatorType, filter: filterColumn, optionsSelector: any, classes: any, dispatch: any, editable: boolean) =>\n{\n    switch (filter.type)\n    {\n        case 'string': \n            return <Grid item style={{ width: '220px', marginRight: '10px' }}>\n                <TextField\n                    type='input'\n                    variant='standard'\n                    inputProps={\n                        {\n                            style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3'},\n                            underline: {\n                                \"&&&:before\": {\n                                    borderBottom: \"none\"\n                                },\n                                \"&&:after\": {\n                                    borderBottom: \"none\"\n                                }\n                            }\n                        }}\n                    InputProps={{\n                        startAdornment: <TextFieldsIcon style={{ width: '18px', height: '18px' }} />,\n                        disableUnderline: true\n                    }}\n                    style={{backgroundColor:'#F3F3F3',padding:'0px 10px',borderRadius:5}}\n                    placeholder='Enter value'\n                    value={filter.optionValues.value1}\n                    disabled={!editable} \n                    onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                />\n            </Grid>\n        case 'number':\n            return<Grid item style={{ width: '220px', marginRight: '10px' }}>\n                <TextField\n                    placeholder='Enter value'\n                    type='number'\n                    disabled={!editable}\n                    variant='standard'\n                    value={filter.optionValues.value1}\n                    onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                    inputProps={\n                        {\n                            style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3' },\n                            underline: {\n                                \"&&&:before\": {\n                                    borderBottom: \"none\"\n                                },\n                                \"&&:after\": {\n                                    borderBottom: \"none\"\n                                }\n                            }\n                        }}\n                    InputProps={{\n                        disableUnderline: true\n                    }}\n                    style={{backgroundColor:'#F3F3F3',padding:'0px 5px',borderRadius:5}}\n                    >\n                    </TextField>\n            </Grid>\n        \n        case 'mutipleNumber':\n            return ( <Grid item>\n                <Grid container alignItems={'center'}>\n                    <Grid item style={{  marginRight: '10px' }}>\n                        <TextField\n                            placeholder='Enter value'\n                            type='number'\n                            value={filter.optionValues.value1}\n                            onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value, 0))}\n                            disabled={!editable}\n                            variant='standard'\n                            inputProps={\n                                {\n                                    style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3' },\n                                    underline: {\n                                        \"&&&:before\": {\n                                            borderBottom: \"none\"\n                                        },\n                                        \"&&:after\": {\n                                            borderBottom: \"none\"\n                                        }\n                                    }\n                                }}\n                            InputProps={{\n                                disableUnderline: true\n                            }}\n                            style={{backgroundColor:'#F3F3F3',paddingLeft:'5px',borderRadius:5}}\n                            >\n                        </TextField>\n                    </Grid>\n                    <Grid item style={{  marginRight: '10px' }}>\n                        <Typography>{'to'}</Typography>\n                    </Grid>\n                    <Grid item style={{ width: '220px', marginRight: '10px' }}>\n                        <TextField\n                            placeholder='Enter value'\n                            type='number'\n                            disabled={!editable}\n                            value={filter.optionValues.value2}\n                            onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value,1))}\n                            variant='standard'\n                            inputProps={\n                                {\n                                    style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3' },\n                                    underline: {\n                                        \"&&&:before\": {\n                                            borderBottom: \"none\"\n                                        },\n                                        \"&&:after\": {\n                                            borderBottom: \"none\"\n                                        }\n                                    }\n                                }}\n                            InputProps={{\n                                disableUnderline: true\n                            }}\n                            style={{backgroundColor:'#F3F3F3',paddingLeft:'5px',borderRadius:5}}\n                            >\n                        </TextField>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n        case 'boolean':\n            const options_bool:any = [\n                { id: 0, name: 'True', value: 'true' },\n                { id: 1, name: 'False', value: 'false' }\n            ]\n            return (\n                <Grid item>\n                    <Grid container alignItems={'center'}>\n                        <Grid item style={{marginRight:'10px'}}>\n                            <Typography>{'is'}</Typography>\n                        </Grid>\n                        <Grid item>\n                            <FormControl fullWidth>\n                                <Select\n                                    disableUnderline\n                                    variant='standard'\n                                    style={{padding:'0px 10px', borderRadius:5, border:'1px solid #626262'}}\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    inputProps={{\n                                        id: 'uncontrolled-native',\n                                    }}\n                                    value={filter.optionValues.value1}\n                                    disabled={!editable}\n                                    onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                                >\n                                    {\n                                        options_bool.map((option:any)=>\n                                        {\n                                            return <MenuItem key={option.id} value={option.value}> <Typography style={{fontSize:'16px'}}>{option.name}</Typography></MenuItem>\n                                        })\n                                    }\n                                \n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )\n        case 'datetime':\n            return <Grid item >\n                    <TextField\n                        variant=\"outlined\"\n                        id=\"date\"\n                        type=\"date\"\n                        lang=\"en-US\"\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        value={filter.optionValues.value1}\n                        disabled={!editable} \n                        onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                        inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                    />\n            </Grid>\n        case 'mutipleDatetime':\n            return <Grid item >\n                <Grid container alignItems={'center'}>\n                    <Grid item>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            value={filter.optionValues.value1}\n                            disabled={!editable} \n                            onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value,0))}\n                            inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                        />\n                    </Grid>\n                    <Grid item style={{margin:'0px 10px'}}>\n                        <Typography>{'to'}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"date\"\n                            type=\"date\"\n                            lang=\"en-US\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            value={filter.optionValues.value2}\n                            disabled={!editable} \n                            onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value,1))}\n                            inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        case 'select':\n            const options = _.keys(optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options)\n            return <Grid item style={{ width:'200px', marginRight: '10px' }}>\n                <FormControl fullWidth>\n                    <Autocomplete\n                        id=\"tags-standard\"\n                        options={options}\n                        getOptionLabel={(option) =>\n                        {\n                            const item = optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options[option]\n                            if (item === undefined)\n                            {\n                                return ''    \n                            }\n                            return item.name\n                        }}\n                        defaultValue={[options[0]]}\n                        disableCloseOnSelect\n                        value={filter.optionValues.value1}\n                        ListboxProps={{ style: { maxHeight: '12rem' } }}\n                        disabled={!editable} \n                        onChange={(event,values) => dispatch(handleAudienceChangeForValues(data, filter,  values))}\n                        style={{ padding: '0px 10px', borderRadius: 5, border: '1px solid #626262' }}\n                        renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant='standard'\n                            InputProps={{ ...params.InputProps, disableUnderline: true }}\n                        />\n                        )}\n                    />\n                    \n                </FormControl>\n            </Grid>\n        case 'mutipleSelect':\n            const mutipleOptions = _.keys(optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options)\n            return ( <Grid item style={{ marginRight: '20px' }}>\n                <FormControl fullWidth>\n                    <Autocomplete\n                        multiple\n                        id=\"tags-standard\"\n                        options={mutipleOptions}\n                        getOptionLabel={(option) =>\n                        {\n                            const item = optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options[option]\n                            if (item === undefined)\n                            {\n                                return '' \n                            }\n                            return item.name\n                        }}\n                        defaultValue={[mutipleOptions[0]]}\n                        disableCloseOnSelect\n                        value={typeof(filter.optionValues.value1) === 'object' ?  filter.optionValues.value1 : []}\n                        disabled={!editable} \n                        ListboxProps={{ style: { maxHeight: '12rem' } }}\n                        onChange={(event,values) => dispatch(handleAudienceChangeForValues(data, filter,  values))}\n                        style={{paddingLeft: '10px', width: '280px', color: '#0E0F0F', fontSize: '14px', backgroundColor: '#EDEDED', fontFamily: 'Noto Sans', borderRadius: 5 }}\n                        renderTags={(values) =>\n                        {\n                            const items = values.map((x: any) => optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options[x])\n                            return (\n                                items?.map((item:any) =>\n                                {\n                                    if (item === undefined)\n                                    {\n                                        return '' \n                                    }\n                                    return <MutipleSelectBadge label={item.name} color={'#E1EFFF'} data={data} filter={filter} exceptValues={filter.optionValues.value1.filter((x:any)=>x!== item.value)}/>\n                                })\n                            )\n                        }}\n                        renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"standard\"\n                            placeholder={filter.optionValues.value1?.length > 0 ? '' : \"Add tags\"}\n                            InputProps={{ ...params.InputProps, disableUnderline: true,startAdornment: (\n                                <>\n                                <InputAdornment position=\"start\">\n                                    <LabelIcon fontSize={'small'} style={{color:'#000'}}/>\n                                </InputAdornment>\n                                {params.InputProps.startAdornment}\n                                </>\n                            ) }}\n                        />\n                        )}\n                    />\n                </FormControl>\n            </Grid>)\n        case 'empty':\n            return <Grid></Grid>\n    }\n}\n\nexport default RenderValueItem","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { RootState } from '../../reducers/index'\nimport {\n    InputAdornment,\n    Typography,\n} from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport Collapse from '@mui/material/Collapse';\nimport ArrowDropDownCircleIcon from '@mui/icons-material/ArrowDropDownCircle';\nimport ArrowDropUpCircleIcon from '@mui/icons-material/ArrowDropUp';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FilterNoneIcon from '@mui/icons-material/FilterNone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@mui/material';\nimport LabelIcon from '@mui/icons-material/Label';\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\nimport { PieChart, Pie, Label, Cell, ResponsiveContainer } from 'recharts';\nimport { handleAudienceRemoveFilter } from '../../actions/audienceAction'\nimport { creatorType, filterColumn } from '../../reducers/audienceReducer'\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport moment from 'moment';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport\n{\n    handleAudienceChangeAddFilterButton,\n    handleAudienceChangeCopyFilterButton,\n    handleAudienceChangeRemoveFilterButton,\n    handleAudienceChangeForName,\n    handleAudienceChangeForOperator,\n    handleAudienceChangeForValues,\n    handleAudienceFilterStartTime,\n    handleAudienceFilterEndTime\n} from '../../actions/audienceAction'\nimport ColumnTypeGenerator from './ColumnTypeGenerator_3'\n\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        profileContainer: {\n            width:'100%',\n            border: '2px solid #5A91FF',\n            borderLeft: '12px solid #5A91FF',\n            borderRadius: '10px'\n        },\n        createButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'170px',\n            height:'32px',\n            padding:'0 10px 0 10px'\n        },\n        filterPannel:{\n            width:'30%',\n            background: '#FFFFFF',\n            borderRadius: '10px',\n            marginBottom:'15px',\n            padding:'15px 20px'\n        },\n        columnSelected:{\n            width:'100%',\n            height:'32px',\n            backgroundColor: '#F3F7FD',\n            border: '1px solid #5A91FF',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n        },\n        operactorSelected:{\n            width:'100%',\n            height:'32px',\n            border: '1px solid #626262'\n        },\n        serachInput: {\n            [`& fieldset`]: {\n                borderRadius: 5,\n            },\n        },\n        h1: {\n            fontSize:'28px',\n            color:'#000',\n            fontWeight: 600,\n            fontFamily:'Noto Sans'\n        },\n        h2: {\n            fontSize:'14px',\n            color:'#989898',\n            fontWeight: 400,\n            fontFamily:'Noto Sans'   \n        },\n        selectBorder: {\n            borderColor: \"transparent !important\"\n        },\n        createorButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'60px',\n            height:'32px',\n            padding:'6px 10px'\n        },\n        divider: {\n            '& .MuiDivider-wrapperVertical':{\n                padding:0,\n            }\n        },\n        filterButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'140px',\n            height:'34px',\n            padding: '0 10px 0 10px',\n            boxShadow: 'none',\n            fontSize: '16px',\n            fontFamily: 'Noto sans'\n        },\n        underline: {\n            \"&&&:before\": {\n            borderBottom: \"none\"\n            },\n            \"&&:after\": {\n            borderBottom: \"none\"\n            }\n        }\n    })\n);\n\ntype audienceProp = {\n    key: number;\n    data: creatorType,\n    chooseValue: string[],\n    filter: filterColumn,\n    editable: boolean\n}\n\n\nconst FilterColumn_3 = (props: audienceProp) :React.ReactElement<Props>  =>  {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const theme = useTheme()\n\n    const optionSelector:any = useSelector((state: RootState) => state.audienceFilterSelecetor)\n    const matchesMac = useMediaQuery(theme.breakpoints.down('xl'));\n    const [collapse, setCollapse] = React.useState(true)\n\n    const data = props.data\n    const filter = props.filter\n    const chooseValue = props.chooseValue\n\n    return(\n        <Grid key={filter.filterId} container justifyContent={'space-between'} alignItems={'center'} className={classes.filterPannel}>\n            <Grid item>\n                <Grid container alignItems={'flex-start'} >\n                    <Grid item style={{ width: matchesMac ? '130px' : '200px', marginRight: '10px' }}>\n                        <FormControl fullWidth>\n                            <Select\n                                disableUnderline\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                variant='standard'\n                                className={classes.columnSelected}\n                                inputProps={{\n                                    id: 'uncontrolled-native'\n                                }}\n                                value={filter.value}\n                                disabled={!props.editable} \n                                style={{padding:'0px 10px', borderRadius:5, border:'1px solid #5A91FF'}}\n                                renderValue={(value) =>\n                                {\n                                    const mappingsName = optionSelector[data.value].filter((x:any)=> x.value === value)[0]?.name\n                                    return mappingsName\n                                }}\n                                onChange={(event)=> dispatch(handleAudienceChangeForName(data, filter, optionSelector[data.value].filter((x:any)=> x.value === event.target.value)[0]))}\n                            >\n                                {optionSelector[data.value].filter((x:any)=> _.includes(chooseValue,x.value) === false).map((option:any) =>\n                                {\n                                    return  <MenuItem key={option.id} value={option.value} > <Typography style={{fontSize:matchesMac? '14px':'16px'}}>{option.name}</Typography></MenuItem>\n                                })}\n                            \n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item style={{width:matchesMac?'110px':'200px',marginRight:'10px'}}>\n                        <FormControl fullWidth>\n                            <Select\n                                disableUnderline\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                variant='standard'\n                                className={classes.operactorSelected}\n                                inputProps={{\n                                    id: 'uncontrolled-native',\n                                }}\n                                value={filter.operator}\n                                style={{padding:'0px 10px', borderRadius:5, border:'1px solid #626262'}}\n                                disabled={!props.editable} \n                                onChange={(event)=> dispatch(handleAudienceChangeForOperator(data, filter,  event.target.value))}\n                            >\n                                {\n                                    _.keys(optionSelector[data.value].filter((x:any)=> x.value === filter.value)[0]?.operator).map( (operator:any) =>\n                                    {\n                                        const item = optionSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[operator]\n                                        return (\n                                            <MenuItem key={item.name} value={item.value} > <Typography style={{fontSize:matchesMac? '14px':'16px'}}>{item.name}</Typography></MenuItem>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    {\n                        ColumnTypeGenerator(data, filter, optionSelector,classes, dispatch, props.editable)\n                    }\n                    \n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid container alignItems={'center'}>\n                    <IconButton disabled={!props.editable}  style={{padding:6}} onClick={()=> dispatch(handleAudienceChangeCopyFilterButton(data,filter.filterId))}>\n                        <FilterNoneIcon style={{color:'#626262',width:'28px',height:'28px'}}/>\n                    </IconButton>\n                    <IconButton disabled={!props.editable}  style={{padding:6}} onClick={()=> dispatch(handleAudienceChangeRemoveFilterButton(data,filter.filterId))}>\n                        <DeleteIcon style={{color:'#626262',width:'28px',height:'28px'}}/>\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default FilterColumn_3","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { RootState } from '../../reducers/index'\nimport {\n    InputAdornment,\n    Typography,\n} from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport Collapse from '@mui/material/Collapse';\nimport ArrowDropDownCircleIcon from '@mui/icons-material/ArrowDropDownCircle';\nimport ArrowDropUpCircleIcon from '@mui/icons-material/ArrowDropUp';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FilterNoneIcon from '@mui/icons-material/FilterNone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@mui/material';\nimport LabelIcon from '@mui/icons-material/Label';\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\nimport { PieChart, Pie, Label, Cell, ResponsiveContainer } from 'recharts';\nimport { handleAudienceRemoveFilter } from '../../actions/audienceAction'\nimport { creatorType, filterColumn } from '../../reducers/audienceReducer'\nimport moment from 'moment';\nimport  Autocomplete  from '@mui/material/Autocomplete';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport\n{\n    handleAudienceChangeForValuesMutidimension\n} from '../../actions/audienceAction'\nimport ClearIcon from '@mui/icons-material/Clear';\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n        width: 200,\n        maxHeight: 200\n    },\n  },\n};\n\ninterface BadgeProps {\n    label: string\n    color: string\n    data: creatorType\n    filter: filterColumn\n    exceptValues: string[]\n}\n\nconst MutipleSelectBadge = (props: BadgeProps) =>\n{\n    const dispatch = useDispatch()\n    return (\n        <Grid item  style={{ marginRight:'10px',padding: '2px 8px', margin:'4px',  borderRadius: '5px',  backgroundColor: props.color, border:'1px solid #5A91FF' }}>\n            <Grid container justifyContent='space-between' alignItems='center' style={{width: '100%', height: '18px'}}>\n                <Typography style={{ fontFamily: 'Noto sans', color: '#000', fontSize: '12px' }}>{props.label}</Typography>\n                <IconButton onClick={(event) => { event.stopPropagation(); dispatch(handleAudienceChangeForValuesMutidimension(props.data, props.filter,  props.exceptValues))}} style={{ padding: 0 }}><ClearIcon style={{fill:'#000',width:'12px',height:'12px',marginLeft:'4px'}}/></IconButton>\n            </Grid>\n        </Grid>\n    )\n}\n\n\nconst RenderValueItem = (data: creatorType, filter: filterColumn, optionsSelector: any, classes: any, dispatch:any, editable:boolean) =>\n{\n    switch (filter.type)\n    {\n        case 'string': \n            return <Grid item style={{ width: '220px', marginRight: '10px' }}>\n                <TextField\n                    type='input'\n                    variant='standard'\n                    placeholder='Enter value'\n                    inputProps={\n                        {\n                            style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3'},\n                            underline: {\n                                \"&&&:before\": {\n                                    borderBottom: \"none\"\n                                },\n                                \"&&:after\": {\n                                    borderBottom: \"none\"\n                                }\n                            }\n                        }}\n                    InputProps={{\n                        startAdornment: <TextFieldsIcon style={{ width: '18px', height: '18px' }} />,\n                        disableUnderline: true\n                    }}\n                    style={{backgroundColor:'#F3F3F3',paddingLeft:'5px',borderRadius: 5 }}\n                    value={filter.optionValues.value1}\n                    disabled={!editable} \n                    onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value))}\n                />\n            </Grid>\n        case 'number':\n            return <Grid item style={{ width: '220px', marginRight: '10px' }}>\n                <TextField\n                    placeholder='Enter value'\n                    type='number'\n                    disabled={!editable}\n                    value={filter.optionValues.value1}\n                    onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value))}\n                    variant='standard'\n                    inputProps={\n                        {\n                            style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3' },\n                            underline: {\n                                \"&&&:before\": {\n                                    borderBottom: \"none\"\n                                },\n                                \"&&:after\": {\n                                    borderBottom: \"none\"\n                                }\n                            }\n                        }}\n                    InputProps={{\n                        disableUnderline: true\n                    }}\n                    style={{backgroundColor:'#F3F3F3',paddingLeft:'5px',borderRadius:5}}\n                    >\n                    </TextField>\n            </Grid>\n        case 'mutipleNumber':\n            return ( <Grid item>\n                <Grid container alignItems={'center'}>\n                    <Grid item style={{  marginRight: '10px' }}>\n                        <TextField\n                            placeholder='Enter value'\n                            type='number'\n                            disabled={!editable}\n                            variant='standard'\n                            value={filter.optionValues.value1}\n                            onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value,0))}\n                            inputProps={\n                                {\n                                    style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3' },\n                                    underline: {\n                                        \"&&&:before\": {\n                                            borderBottom: \"none\"\n                                        },\n                                        \"&&:after\": {\n                                            borderBottom: \"none\"\n                                        }\n                                    }\n                                }}\n                            InputProps={{\n                                disableUnderline: true\n                            }}\n                            style={{backgroundColor:'#F3F3F3',paddingLeft:'5px',borderRadius:5}}\n                            >\n                        </TextField>\n                    </Grid>\n                    <Grid item style={{  marginRight: '10px' }}>\n                        <Typography>{'to'}</Typography>\n                    </Grid>\n                    <Grid item style={{ width: '220px', marginRight: '10px' }}>\n                        <TextField\n                            placeholder='Enter value'\n                            type='number'\n                            disabled={!editable}\n                            value={filter.optionValues.value2}\n                            onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value,1))}\n                            variant='standard'\n                            inputProps={\n                                {\n                                    style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px',border: 'none',backgroundColor:'#F3F3F3' },\n                                    underline: {\n                                        \"&&&:before\": {\n                                            borderBottom: \"none\"\n                                        },\n                                        \"&&:after\": {\n                                            borderBottom: \"none\"\n                                        }\n                                    }\n                                }}\n                            InputProps={{\n                                disableUnderline: true\n                            }}\n                            style={{backgroundColor:'#F3F3F3',paddingLeft:'5px',borderRadius:5}}\n                            >\n                        </TextField>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n        case 'boolean':\n            const options_bool:any = [\n                { id: 0, name: 'True', value: 'true' },\n                { id: 1, name: 'False', value: 'false' }\n            ]\n            return (\n                <Grid item>\n                    <Grid container alignItems={'center'}>\n                        <Grid item style={{marginRight:'10px'}}>\n                            <Typography>{'is'}</Typography>\n                        </Grid>\n                        <Grid item>\n                            <FormControl fullWidth>\n                                <Select\n                                    disableUnderline\n                                    variant='standard'\n                                    style={{padding:'0px 10px', borderRadius:5, border:'1px solid #626262'}}\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    className={classes.operactorSelected}\n                                    inputProps={{\n                                        id: 'uncontrolled-native',\n                                    }}\n                                    value={filter.optionValues.value1}\n                                    disabled={!editable}\n                                    onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value))}\n                                >\n                                    {\n                                        options_bool.map((option:any)=>\n                                        {\n                                            return <MenuItem key={option.id} value={option.value}> <Typography style={{fontSize:'16px'}}>{option.name}</Typography></MenuItem>\n                                        })\n                                    }\n                                \n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )\n        case 'datetime':\n            return <Grid item >\n                    <TextField\n                        variant=\"outlined\"\n                        id=\"date\"\n                        type=\"date\"\n                        lang=\"en-US\"\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        value={filter.optionValues.value1}\n                        disabled={!editable}\n                        onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value))}\n                        inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                    />\n            </Grid>\n        case 'mutipleDatetime':\n            return <Grid item >\n                <Grid container alignItems={'center'}>\n                    <Grid item>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            value={filter.optionValues.value1}\n                            disabled={!editable}\n                            onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value,0))}\n                            inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                        />\n                    </Grid>\n                    <Grid item style={{margin:'0px 10px'}}>\n                        <Typography>{'to'}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"date\"\n                            type=\"date\"\n                            lang=\"en-US\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            value={filter.optionValues.value2}\n                            disabled={!editable}\n                            onChange={(event) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  event.target.value,1))}\n                            inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        case 'select':\n            const options = _.keys(optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.subname[filter.subValue]?.operator[filter.operator]?.options)\n            return <Grid item style={{ width:'200px', marginRight: '10px' }}>\n                <FormControl fullWidth>\n                    <Autocomplete\n                        id=\"tags-standard\"\n                        options={options}\n                        getOptionLabel={(option) =>\n                        {\n                            const item = optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.subname[filter.subValue]?.operator[filter.operator]?.options[option]\n                            if (item === undefined)\n                            {\n                                return ''    \n                            }\n                            return item.name\n                        }}\n                        defaultValue={[options[0]]}\n                        disableCloseOnSelect\n                        value={filter.optionValues.value1}\n                        ListboxProps={{ style: { maxHeight: '12rem' } }}\n                        disabled={!editable} \n                        onChange={(event,values) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  values))}\n                        style={{ padding: '0px 10px', borderRadius: 5, border: '1px solid #626262' }}\n                        renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant='standard'\n                            InputProps={{ ...params.InputProps, disableUnderline: true }}\n                        />\n                        )}\n                    />\n                </FormControl>\n            </Grid>\n        case 'mutipleSelect':\n            const mutipleOptions = _.keys(optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.subname[filter.subValue]?.operator[filter.operator]?.options)\n            return ( <Grid item style={{ marginRight: '20px' }}>\n                <FormControl fullWidth>\n                    <Autocomplete\n                        multiple\n                        id=\"tags-standard\"\n                        options={mutipleOptions}\n                        getOptionLabel={(option) =>\n                        {\n                            const item = optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.subname[filter.subValue]?.operator[filter.operator]?.options[option]\n                            if (item === undefined)\n                            {\n                                return '' \n                            }\n                            return item.name\n                        }}\n                        defaultValue={[mutipleOptions[0]]}\n                        ListboxProps={{ style: { maxHeight: '12rem' } }}\n                        disableCloseOnSelect\n                        value={typeof(filter.optionValues.value1) === 'object' ?  filter.optionValues.value1 : []}\n                        disabled={!editable} \n                        onChange={(event,values) => dispatch(handleAudienceChangeForValuesMutidimension(data, filter,  values))}\n                        style={{ paddingLeft: '10px', width: '280px', color: '#0E0F0F', fontSize: '14px', backgroundColor: '#EDEDED', fontFamily: 'Noto Sans', borderRadius: 5 }}\n                        renderTags={(values) =>\n                        {\n                            const items = values.map((x: any) => optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.subname[filter.subValue]?.operator[filter.operator]?.options[x])\n                            return (\n                                items?.map((item:any) =>\n                                {\n                                    if (item === undefined)\n                                    {\n                                        return '' \n                                    }\n                                    return <MutipleSelectBadge label={item.name} color={'#E1EFFF'} data={data} filter={filter} exceptValues={filter.optionValues.value1.filter((x:any)=>x!== item.value)}/>\n                                })\n                            )\n                        }}\n                        renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"standard\"\n                            placeholder={filter.optionValues.value1?.length > 0 ? '' : \"Add tags\"}\n                            InputProps={{ ...params.InputProps, disableUnderline: true,startAdornment: (\n                                <>\n                                <InputAdornment position=\"start\">\n                                    <LabelIcon fontSize={'small'} style={{color:'#000'}}/>\n                                </InputAdornment>\n                                {params.InputProps.startAdornment}\n                                </>\n                            ) }}\n                        />\n                        )}\n                    />\n                </FormControl>\n            </Grid>)\n        case 'empty':\n            return <Grid></Grid>\n    }\n}\n\n\nexport default RenderValueItem","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { RootState } from '../../reducers/index'\nimport {\n    InputAdornment,\n    Typography,\n} from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport Collapse from '@mui/material/Collapse';\nimport ArrowDropDownCircleIcon from '@mui/icons-material/ArrowDropDownCircle';\nimport ArrowDropUpCircleIcon from '@mui/icons-material/ArrowDropUp';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FilterNoneIcon from '@mui/icons-material/FilterNone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@mui/material';\nimport LabelIcon from '@mui/icons-material/Label';\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\nimport { PieChart, Pie, Label, Cell, ResponsiveContainer } from 'recharts';\nimport { handleAudienceRemoveFilter } from '../../actions/audienceAction'\nimport { creatorType, filterColumn } from '../../reducers/audienceReducer'\nimport moment from 'moment';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport\n{\n    handleAudienceChangeAddFilterButton,\n    handleAudienceChangeCopyFilterButton,\n    handleAudienceChangeRefineFilterButton,\n    handleAudienceChangeRemoveFilterButton,\n    handleAudienceChangeForNameMutidimension,\n    handleAudienceChangeForSubNameMutidimension,\n    handleAudienceChangeForOperatorMutidimension,\n    handleAudienceChangeForValuesMutidimension,\n    handleAudienceFilterStartTime,\n    handleAudienceFilterEndTime\n} from '../../actions/audienceAction'\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ColumnTypeGenerator_4 from './ColumnTypeGenerator_4'\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        profileContainer: {\n            width:'100%',\n            border: '2px solid #5A91FF',\n            borderLeft: '12px solid #5A91FF',\n            borderRadius: '10px'\n        },\n        createButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'170px',\n            height:'32px',\n            padding:'0 10px 0 10px'\n        },\n        filterPannel:{\n            width:'30%',\n            background: '#FFFFFF',\n            borderRadius: '10px',\n            marginBottom:'15px',\n            padding:'15px 20px'\n        },\n        columnSelected:{\n            width:'100%',\n            height:'32px',\n            backgroundColor: '#F3F7FD',\n            border: '1px solid #5A91FF',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n        },\n        operactorSelected:{\n            width:'100%',\n            height:'32px',\n            border: '1px solid #626262'\n        },\n        serachInput: {\n            [`& fieldset`]: {\n                borderRadius: 5,\n            },\n        },\n        h1: {\n            fontSize:'28px',\n            color:'#000',\n            fontWeight: 600,\n            fontFamily:'Noto Sans'\n        },\n        h2: {\n            fontSize:'14px',\n            color:'#989898',\n            fontWeight: 400,\n            fontFamily:'Noto Sans'   \n        },\n        selectBorder: {\n            borderColor: \"transparent !important\"\n        },\n        createorButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'60px',\n            height:'32px',\n            padding:'6px 10px'\n        },\n        divider: {\n            '& .MuiDivider-wrapperVertical':{\n                padding:0,\n            }\n        },\n        filterButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'140px',\n            height:'34px',\n            padding: '0 10px 0 10px',\n            boxShadow: 'none',\n            fontSize: '16px',\n            fontFamily: 'Noto sans'\n        },\n        refineButton: {\n            borderRadius:5,\n            color:'#5A91FF',\n            backgroundColor:'transparent',\n            width:'140px',\n            height:'34px',\n            padding: '0 10px 0 10px',\n            boxShadow: 'none',\n            fontSize: '16px',\n            fontFamily: 'Noto sans'\n        }\n    })\n);\n\ntype audienceProp = {\n    key: number;\n    data: creatorType,\n    chooseValue: string[],\n    chooseSubValue: string[],\n    group: any,\n    filterKey: string,\n    editable: boolean\n}\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n        width: 200\n    },\n  },\n};\n\ninterface BadgeProps {\n    label: string\n    color: string\n}\n\nconst MutipleSelectBadge = (props: BadgeProps) => {\n\n    return (\n        <Grid item style={{ marginRight:'10px',padding: '2px 8px', margin:'4px', borderRadius: '5px', backgroundColor: props.color, border:'1px solid #5A91FF' }}>\n            <Grid container justifyContent='space-between' alignItems='center' style={{width: '100%', height: '18px'}}>\n                <Typography style={{ fontFamily: 'Noto sans', color: '#000', fontSize: '12px' }}>{props.label}</Typography>\n                {/*<IconButton style={{ padding: 0 }}><ClearIcon style={{fill:'#000',width:'14px',height:'14px'}}/></IconButton>*/}\n            </Grid>\n        </Grid>\n    )\n}\n\nconst CustomLinearProgress = styled(LinearProgress)(({ theme }) => ({\n    height: 8,\n    borderRadius: 2,\n    [`&.${linearProgressClasses.colorPrimary}`]: {\n      backgroundColor: '#E0E0E0',\n    },\n    [`& .${linearProgressClasses.bar}`]: {\n      borderRadius: 2,\n      backgroundColor: '#5A91FF',\n    },\n}));\n\n\nconst FilterColumn_4 = (props: audienceProp) :React.ReactElement<Props>  =>  {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const theme = useTheme()\n\n    const optionSelector:any = useSelector((state: RootState) => state.audienceFilterSelecetor)\n    const matchesMac = useMediaQuery(theme.breakpoints.down('xl'));\n    const [collapse, setCollapse] = React.useState(true)\n\n    const data = props.data\n    const group = props.group\n    const chooseValue = props.chooseValue\n    const chooseSubValue = props.chooseSubValue\n    const filterKey = props.filterKey\n\n    return(\n        <Grid key={group[filterKey][0].filterId} container alignItems={'center'} className={classes.filterPannel}>\n            <Grid item style={{width:'100%'}}>\n                {\n                    group[filterKey].map((filter: filterColumn, index:number) =>\n                    {\n                        return (\n                            <>\n                                <Grid container justifyContent={'space-between'} alignItems={'center'} style={{marginBottom:'10px'}}>\n                                    <Grid item>\n                                        <Grid container alignItems={'flex-start'}>\n                                            {index === 0 ?\n                                                <Grid item style={{ width: matchesMac ? '130px' : '200px', marginRight: '10px' }}>\n                                                    <FormControl fullWidth>\n                                                        <Select\n                                                            disableUnderline\n                                                            variant='standard'\n                                                            style={{padding:'0px 10px', borderRadius:5, border:'1px solid #5A91FF'}}\n                                                            labelId=\"demo-simple-select-label\"\n                                                            id=\"demo-simple-select\"\n                                                            className={classes.columnSelected}\n                                                            inputProps={{\n                                                                id: 'uncontrolled-native'\n                                                            }}\n                                                            value={filter.value}\n                                                            disabled={!props.editable}\n                                                            renderValue={(value) =>\n                                                            {\n                                                                const mappingsName = optionSelector[data.value].filter((x:any)=> x.value === value)[0]?.name\n                                                                return mappingsName\n                                                            }}\n                                                            onChange={(event)=> dispatch(handleAudienceChangeForNameMutidimension(data, filter, optionSelector[data.value].filter((x:any)=> x.value === event.target.value)[0]))}\n                                                        >\n                                                            {optionSelector[data.value].filter((x:any)=> _.includes(chooseValue,x.value) === false).map((option:any) =>\n                                                            {\n                                                                return  <MenuItem key={option.id} value={option.value} > <Typography style={{fontSize:matchesMac? '14px':'16px'}}>{option.name}</Typography></MenuItem>\n                                                            })}\n                                                        \n                                                        </Select>\n                                                    </FormControl>\n                                                </Grid>\n                                                : <Grid item style={{ width: matchesMac ? '130px' : '200px', marginRight: '10px' }}></Grid>\n                                            }\n                                            <Grid item style={{ width: matchesMac ? '130px' : '200px', marginRight: '10px' }}>\n                                                <FormControl fullWidth>\n                                                    <Select\n                                                        disableUnderline\n                                                        variant='standard'\n                                                        style={{padding:'0px 10px', borderRadius:5, border:'1px solid #626262'}}\n                                                        labelId=\"demo-simple-select-label\"\n                                                        id=\"demo-simple-select\"\n                                                        className={classes.columnSelected}\n                                                        inputProps={{\n                                                            id: 'uncontrolled-native'\n                                                        }}\n                                                        value={filter.subValue}\n                                                        disabled={!props.editable}\n                                                        renderValue={(value) =>\n                                                        {\n                                                            const mappingsName = optionSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.subname[value]?.name\n                                                            return mappingsName\n                                                        }}\n                                                        onChange={(event)=> dispatch(handleAudienceChangeForSubNameMutidimension(data, filter, event.target.value))}\n                                                    >\n                                                        {_.keys(optionSelector[data.value].filter((x:any)=> x.value === filter.value)[0]?.subname).map( (subname:any) =>\n                                                        {\n                                                            const item = optionSelector[data.value].filter((x: any) => x.value === filter.value)[0].subname[subname]\n                                                            if (_.includes(chooseSubValue, item.value) === false)\n                                                            {\n                                                                return  <MenuItem key={item.id} value={item.value} > <Typography style={{fontSize:matchesMac? '14px':'16px'}}>{item.name}</Typography></MenuItem>\n                                                            }\n                                                            \n                                                        })}\n                                                    \n                                                    </Select>\n                                                </FormControl>\n                                            </Grid>\n                                            {\n                                                filter.type === 'boolean' ? '' : \n                                                <Grid item style={{width:matchesMac?'110px':'200px',marginRight:'10px'}}>\n                                                    <FormControl fullWidth>\n                                                        <Select\n                                                            disableUnderline\n                                                            variant='standard'\n                                                            style={{padding:'0px 10px', borderRadius:5, border:'1px solid #626262'}}\n                                                            labelId=\"demo-simple-select-label\"\n                                                            id=\"demo-simple-select\"\n                                                            className={classes.operactorSelected}\n                                                            inputProps={{\n                                                                id: 'uncontrolled-native',\n                                                            }}\n                                                            value={filter.operator}\n                                                            disabled={!props.editable}\n                                                            onChange={(event)=> dispatch(handleAudienceChangeForOperatorMutidimension(data, filter,  event.target.value))}\n                                                        >\n                                                            {\n                                                                _.keys(optionSelector[data.value].filter((x:any)=> x.value === filter.value)[0]?.subname[filter.subValue]?.operator).map( (operator:any) =>\n                                                                {\n                                                                    const item = optionSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.subname[filter.subValue]?.operator[operator]\n                                                                    return (\n                                                                        <MenuItem key={item.name} value={item.value} > <Typography style={{fontSize:matchesMac? '14px':'16px'}}>{item.name}</Typography></MenuItem>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </Grid>\n                                            }\n                                            {\n                                                ColumnTypeGenerator_4(data, filter, optionSelector,classes, dispatch, props.editable)\n                                            }\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Grid container alignItems={'center'}>\n                                            <IconButton disabled={!props.editable} style={{padding:6}} onClick={()=> dispatch(handleAudienceChangeCopyFilterButton(data,filter.filterId))}>\n                                                <FilterNoneIcon style={{color:'#626262',width:'28px',height:'28px'}}/>\n                                            </IconButton>\n                                            <IconButton disabled={!props.editable} style={{padding:6}} onClick={()=> dispatch(handleAudienceChangeRemoveFilterButton(data,filter.filterId))}>\n                                                <DeleteIcon style={{color:'#626262',width:'28px',height:'28px'}}/>\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                {\n                                    index === group[filterKey].length - 1 ? \n                                        <Grid item container alignItems={'center'} style={{marginTop:'-10px'}}>\n                                            <Grid item style={{width:matchesMac? '130px' : '200px'}}>\n                                            </Grid>\n                                            <Grid item>\n                                                <Button disabled={!props.editable} onClick={()=>dispatch(handleAudienceChangeRefineFilterButton(data,filter.filterId))} startIcon={<AddIcon/>} disableRipple  className={classes.refineButton} style={{backgroundColor:'transparent',textTransform:'none',color:'#5A91FF',fontSize:'16px',marginTop:'10px'}} >\n                                                    {'Refine more'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    : ''\n                                }\n                            </>\n                            \n                        )\n                    })\n                }\n                \n            </Grid>\n        </Grid>\n    )\n}\n\nexport default FilterColumn_4","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { RootState } from '../../reducers/index'\nimport {\n    InputAdornment,\n    Typography,\n} from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport Collapse from '@mui/material/Collapse';\nimport ArrowDropDownCircleIcon from '@mui/icons-material/ArrowDropDownCircle';\nimport ArrowDropUpCircleIcon from '@mui/icons-material/ArrowDropUp';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport _ from 'lodash'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FilterNoneIcon from '@mui/icons-material/FilterNone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@mui/material';\nimport LabelIcon from '@mui/icons-material/Label';\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\nimport { PieChart, Pie, Label, Cell, ResponsiveContainer } from 'recharts';\nimport { handleAudienceRemoveFilter } from '../../actions/audienceAction'\nimport { creatorType, filterColumn } from '../../reducers/audienceReducer'\nimport moment from 'moment';\n\nimport\n{\n    handleAudienceChangeAddFilterButton,\n    handleAudienceChangeCopyFilterButton,\n    handleAudienceChangeRemoveFilterButton,\n    handleAudienceChangeForName,\n    handleAudienceChangeForOperator,\n    handleAudienceChangeForValues,\n    handleAudienceFilterStartTime,\n    handleAudienceFilterEndTime\n} from '../../actions/audienceAction'\nimport audienceSelectorMapping from '../../utils/filteringMapping';\nimport FilterColumn_3 from './FilterColumn_3';\nimport FilterColumn_4 from './FilterColumn_4';\n\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        profileContainer: {\n            width:'100%',\n            border: '2px solid #5A91FF',\n            borderLeft: '12px solid #5A91FF',\n            borderRadius: '10px'\n        },\n        createButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'170px',\n            height:'32px',\n            padding:'0 10px 0 10px'\n        },\n        filterPannel:{\n            width:'30%',\n            height: '70px',\n            background: '#FFFFFF',\n            borderRadius: '10px',\n            marginBottom:'15px',\n            padding:'15px 20px'\n        },\n        columnSelected:{\n            width:'100%',\n            height:'32px',\n            backgroundColor: '#F3F7FD',\n            border: '1px solid #5A91FF',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n        },\n        operactorSelected:{\n            width:'100%',\n            height:'32px',\n            border: '1px solid #626262'\n        },\n        serachInput: {\n            [`& fieldset`]: {\n                borderRadius: 5,\n            },\n        },\n        h1: {\n            fontSize:'28px',\n            color:'#000',\n            fontWeight: 600,\n            fontFamily:'Noto Sans'\n        },\n        h2: {\n            fontSize:'14px',\n            color:'#989898',\n            fontWeight: 400,\n            fontFamily:'Noto Sans'   \n        },\n        selectBorder: {\n            borderColor: \"transparent !important\"\n        },\n        createorButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'60px',\n            height:'32px',\n            padding:'6px 10px'\n        },\n        divider: {\n            '& .MuiDivider-wrapperVertical':{\n                padding:0,\n            }\n        },\n        filterButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'140px',\n            height:'34px',\n            padding: '0 10px 0 10px',\n            boxShadow: 'none',\n            fontSize: '16px',\n            fontFamily: 'Noto sans'\n        }\n    })\n);\n\ntype audienceProp = {\n    key: number;\n    data: creatorType,\n    editable: boolean\n}\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n        width: 200\n    },\n  },\n};\n\n\n\nconst CustomLinearProgress = styled(LinearProgress)(({ theme }) => ({\n    height: 8,\n    borderRadius: 2,\n    [`&.${linearProgressClasses.colorPrimary}`]: {\n      backgroundColor: '#E0E0E0',\n    },\n    [`& .${linearProgressClasses.bar}`]: {\n      borderRadius: 2,\n      backgroundColor: '#5A91FF',\n    },\n}));\n\nconst RenderValueItem = (data: creatorType, filter: filterColumn, optionsSelector: any, classes: any, dispatch: any, props: audienceProp) =>\n{\n    switch (filter.type)\n    {\n        case 'string': \n            return <Grid item style={{ width: '220px', marginRight: '10px' }}>\n                <TextField\n                    type='input'\n                    variant=\"outlined\"\n                    inputProps={{ style: { width: '130px', height: '30px', padding: '0px 0px 0px 15px', border: '1px solid #626262', borderRadius: 5 } }}\n                    value={filter.optionValues.value1}\n                    disabled={!props.editable} \n                    onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                />\n            </Grid>\n        case 'number':\n            return <Grid item style={{ width: '220px', marginRight: '10px' }}>\n                <TextField type='number' variant=\"outlined\"  inputProps={{style:{width:'130px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}} ></TextField>\n            </Grid>\n        case 'datetime':\n            return <Grid item >\n                    <TextField\n                        variant=\"outlined\"\n                        id=\"date\"\n                        type=\"date\"\n                        lang=\"en-US\"\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        value={filter.optionValues.value1}\n                        disabled={!props.editable} \n                        onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                        inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                    />\n            </Grid>\n        case 'mutipleDatetime':\n            return <Grid item >\n                <Grid container alignItems={'center'}>\n                    <Grid item>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            value={filter.optionValues.value1}\n                            disabled={!props.editable} \n                            onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value,0))}\n                            inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                        />\n                    </Grid>\n                    <Grid item style={{margin:'0px 10px'}}>\n                        <Typography>{'to'}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"date\"\n                            type=\"date\"\n                            lang=\"en-US\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            value={filter.optionValues.value2}\n                            disabled={!props.editable} \n                            onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value,1))}\n                            inputProps={{style:{width:'140px',height:'30px',padding:'0px 0px 0px 15px',border: '1px solid #626262',borderRadius:5}}}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        case 'select':\n            const options = _.keys(optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options)\n            return <Grid item style={{ width:'200px', marginRight: '10px' }}>\n                <FormControl fullWidth>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        className={classes.operactorSelected}\n                        inputProps={{\n                            id: 'uncontrolled-native',\n                        }}\n                        value={filter.optionValues.value1}\n                        disabled={!props.editable} \n                        onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                    >\n                        {\n                            options.map((option:any)=>\n                            {\n                                const item = optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options[option]\n                                return <MenuItem key={item.id} value={item.value}> <Typography style={{fontSize:'16px'}}>{item.name}</Typography></MenuItem>\n                            })\n                        }\n                    \n                    </Select>\n                </FormControl>\n            </Grid>\n        case 'mutipleSelect':\n             const mutipleOptions = _.keys(optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options)\n\n            return ( <Grid item style={{ marginRight: '20px' }}>\n                <FormControl fullWidth>\n                    <Select\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <LabelIcon fontSize={'small'} style={{color:'#000'}}/>\n                            </InputAdornment>\n                        }\n                        IconComponent={() => (\n                            <React.Fragment></React.Fragment>\n                        )}\n                        variant='standard'\n                        disableUnderline\n                        labelId=\"demo-multiple-name-label\"\n                        id=\"demo-multiple-name\"\n                        value={typeof(filter.optionValues.value1) === 'object' ?  filter.optionValues.value1 : []}\n                        disabled={!props.editable} \n                        onChange={(event) => dispatch(handleAudienceChangeForValues(data, filter,  event.target.value))}\n                        multiple\n                        style={{paddingLeft:'10px',width:'250px',height:'32px',color:'#0E0F0F',fontSize:'14px',backgroundColor:'#EDEDED', fontFamily:'Noto Sans',borderRadius:5}}\n                        MenuProps={MenuProps}\n                        renderValue={(values) =>\n                        {\n                            const names = values.map((x:any) => optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options[x]?.name)\n                            return _.join(names,',')\n                        }}\n                    >\n                        {\n                            mutipleOptions.map((option:any)=>\n                            {\n                                const item = optionsSelector[data.value].filter((x: any) => x.value === filter.value)[0]?.operator[filter.operator]?.options[option]\n                                return <MenuItem key={item.id} value={item.value}> <Typography style={{fontSize:'16px'}}>{item.name}</Typography></MenuItem>\n                            })\n                        }\n                    </Select>\n                </FormControl>\n            </Grid>)\n    }\n}\n\nconst RenderFilterColumn = (data: creatorType, props: audienceProp) =>\n{\n    const dimension3:filterColumn[] = []\n    const dimension4:filterColumn[] = []\n    data.filterColumn?.map((filter:filterColumn, index:number) =>\n    {\n        const di = audienceSelectorMapping[data.value].filter((x: any) => x.value === filter.value)[0]?.dimension\n        const dimension = di ? di : 3\n        if (dimension === 3)\n        {\n            dimension3.push(filter)\n        }\n        else \n        {\n            dimension4.push(filter)\n        }\n    })\n\n    const viewDimenstion3 = dimension3.map((filter:filterColumn, index:number) =>\n        {\n            const chooseValue = dimension3.map(x => x.value)\n            return (\n                <FilterColumn_3 key={index} data={data} chooseValue={chooseValue} filter={filter} editable={props.editable} />\n            )\n    })\n    \n    const group = _.groupBy(dimension4, 'value')\n    const viewDimenstion4 = _.keys(group).map((filterKey:string, index:number) =>\n    {\n        const chooseValue = data.filterColumn.map(x => x.value)\n        const chooseSubValue = data.filterColumn.filter(x => x.value === filterKey).map(x => x.subValue)\n        return (\n            <FilterColumn_4 key={index} data={data} chooseValue={chooseValue} chooseSubValue={chooseSubValue} group={group} filterKey={filterKey} editable={props.editable} />\n        )\n    })\n\n    return (\n        <>\n            {viewDimenstion3}\n            {viewDimenstion4}\n        </>\n    )\n}\n\nconst FilterSection = (props: audienceProp) :React.ReactElement<Props>  =>  {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const theme = useTheme()\n\n    const optionSelector:any = useSelector((state: RootState) => state.audienceFilterSelecetor)\n    const matchesMac = useMediaQuery(theme.breakpoints.down('xl'));\n    const [collapse, setCollapse] = React.useState(true)\n\n    const data = props.data\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n    return(\n        <Grid item container  alignItems={collapse === true ? 'flex-start' : 'center'} className={classes.profileContainer} style={collapse === true ? {}: {height:'70px'}}>\n            <Grid item style={{width:'98%'}}>\n                <Grid container direction='column' style={{width:'100%'}}>\n                    <Grid item container justifyContent='space-between' alignItems='center' style={{width:'100%',padding:'0px 20px 0px 20px',paddingTop:collapse === true ? '12px': '0px'}}>\n                        <Grid item >\n                            <Grid container alignItems='center'>\n                                <IconButton disabled={!props.editable}  style={{padding:0}} onClick={()=> dispatch(handleAudienceRemoveFilter(data.id))}>\n                                    <RemoveCircleOutlineIcon style={{color:'#FE2D53',width:'30px',height:'30px'}}/>\n                                </IconButton>\n\n                                <Grid item style={{marginRight:'10px',marginLeft:'10px'}}>\n                                    <Typography className={classes.h1} style={{color:'#5A91FF'}}>{alphabet[data.id]}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography className={classes.h1} style={{fontSize:'22px'}}>{data.name}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems={'center'}>\n                                <Grid item style={{marginRight:'10px'}}>\n                                    <Grid container alignItems={'center'}>\n                                        <Grid item>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                id=\"date\"\n                                                type=\"date\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                value={props.data.startTime}\n                                                onChange={(event)=> dispatch(handleAudienceFilterStartTime(props.data, event.target.value))}\n                                                disabled={!props.editable}\n                                                inputProps={\n                                                    {\n                                                        style: { width: '140px', height: '30px', padding: '0px 0px 0px 15px', border: '1px solid #5A91FF',backgroundColor:'#F1F7FF', borderRadius: 5 },\n                                                        \n                                                    }}\n                                            />\n                                        </Grid>\n                                        <Grid item style={{margin:'0px 10px'}}>\n                                            <Typography>{'To'}</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                id=\"date\"\n                                                type=\"date\"\n                                                InputLabelProps={{\n                                                shrink: true,\n                                                }}\n                                                value={props.data.endTime}\n                                                onChange={(event)=> dispatch(handleAudienceFilterEndTime(props.data, event.target.value))}\n                                                disabled={!props.editable} \n                                                inputProps={{ style: { width: '140px', height: '30px', padding: '0px 0px 0px 15px', border: '1px solid #5A91FF',backgroundColor:'#F1F7FF', borderRadius: 5 } }}\n                                                \n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    {\n                                        collapse === true ? \n                                            <IconButton  style={{width:'24px',height:'24px',backgroundColor:'#5A91FF'}} disableRipple>\n                                                <ArrowDropDownCircleIcon style={{color:'#FFF'}} onClick={()=>{setCollapse(!collapse)}}/>\n                                            </IconButton>\n                                            :\n                                            <IconButton  style={{width:'24px',height:'24px',backgroundColor:'#FFF',border:'1px solid #5A91FF'}}>\n                                                <ArrowDropUpCircleIcon style={{color:'#5A91FF'}} onClick={()=>{setCollapse(!collapse)}}/>\n                                            </IconButton>\n                                    }\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item  style={{width:'100%'}}>\n                    <Collapse in={collapse} timeout={0} unmountOnExit >\n                        <Grid container direction='column' style={{padding:'20px'}}>\n                            <Grid item container direction={'column'} >\n                                <Grid item lg={12} md={12}>\n                                    {RenderFilterColumn(data,props)}\n                                </Grid>\n                                <Grid item lg={12} md={12}>\n                                    <Grid item>\n                                        <Button disabled={!props.editable}  onClick={()=> dispatch(handleAudienceChangeAddFilterButton(data))} variant=\"contained\" startIcon={<AddIcon/>} disableRipple style={{backgroundColor:'#5A91FF',textTransform:'none',color: props.editable ? '':'#FFF'}} className={classes.filterButton} >\n                                            {'Add filter'}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Collapse>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default FilterSection","export default __webpack_public_path__ + \"static/media/icon_status_draft.7b1412d5.svg\";","export default __webpack_public_path__ + \"static/media/icon_status_active.1119c4a9.svg\";","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../reducers/index'\nimport {\n    Grid,\n    Button,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Typography,\n    Divider,\n} from '@material-ui/core';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport {\n    Search\n} from '@material-ui/icons';\nimport LabelIcon from '@mui/icons-material/Label';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport CheckIcon from '@mui/icons-material/Check';\nimport AddIcon from '@mui/icons-material/Add';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport _ from 'lodash'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport { StepIconProps } from '@mui/material/StepIcon';\nimport { useHistory } from 'react-router';\nimport EditIcon from '@mui/icons-material/Edit';\nimport\n{\n    fetchAudience,\n    fetchAudienceTag,\n    fetchSpecificAudience,\n    handleAudienceFormForName,\n    handleAudienceFormForTags\n} from '../../actions/audienceAction'\nimport activeIcon from '../../static/icon_status_active.svg'\nimport draftIcon from '../../static/icon_status_draft.svg'\nimport moment from 'moment';\nimport FilterSection from '../audience_new/FilterSection';\nimport audienceSelectorMapping from '../../utils/filteringMapping'\nimport { downloadFile } from '../../utils/tool';\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            display: 'flex',\n            width: '100%',\n        },\n        titleContainer: {\n            width:'100%',\n            backgroundColor:'#FFFFFF',\n            padding: '30px 60px 0px 60px',\n            height:'142px'\n        },\n        mainContainer: {\n            width: '100%',\n            backgroundColor: '#F1F4F6',\n        },\n        serachInput: {\n            [`& fieldset`]: {\n                borderRadius: 5,\n            },\n        },\n        selectBorder: {\n            borderColor: \"transparent !important\"\n        },\n        nextButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'120px',\n            height:'40px',\n            padding:'0 10px 0 10px',\n            boxShadow:'none',\n            '&:hover': {\n                backgroundColor:'#5A91FF',\n                boxShadow:'none'\n            },\n        },\n        h1: {\n            fontSize:'28px',\n            color:'#000',\n            fontWeight: 600,\n            fontFamily:'Noto Sans'\n        },\n        h2: {\n            fontSize:'14px',\n            color:'#989898',\n            fontWeight: 400,\n            fontFamily:'Noto Sans'   \n        },\n        tagWord: {\n            color: '#989898',\n            fontSize: '12px',\n            fontWeight: 400,\n            fontFamily:'Noto Sans'   \n        },\n        tagButton: {\n            borderRadius:5,\n            color:'#FFF',\n            backgroundColor:'#5A91FF',\n            width:'80px',\n            height:'32px',\n            padding:'0 10px 0 10px'\n        },\n        detailContainer: {\n            width: '100%',\n            background: '#FFFFFF',\n            borderRadius: '10px',\n            paddingBottom:'30px'\n        },\n        selectDisableStyle: {\n             \"&.Mui-disabled\": {\n                color: \"#FFF\"\n            }\n        },\n        nonActiveButton: {\n            backgroundColor: '#FFF',\n            border: '1px solid #E0E0E0',\n            fontSize: '14px',\n            color: '#0E0F0F',\n            fontFamily: 'Noto sans',\n            '&:hover': {\n                backgroundColor:'#FFF',\n            },\n        },\n        activeButton: {\n            backgroundColor: '#5A91FF',\n            border: '1px solid #5A91FF',\n            fontSize: '14px',\n            color: '#FFFFFF',\n            fontFamily: 'Noto sans',\n            '&:hover': {\n                backgroundColor:'#5A91FF',\n            },\n        }\n    })\n);\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      width: 250,\n    },\n  },\n};\n\n\ninterface BadgeProps {\n    label: string\n    color: string\n}\n\nconst Badge = (props: BadgeProps) => {\n\n    return (\n        <Grid item style={{ marginRight:'10px',height: '24px', padding: '2px 8px', borderRadius: '5px', backgroundColor: props.color }}>\n            <Grid container justifyContent='center' alignItems='center' style={{width: '100%', height: '24px'}}>\n                <Typography style={{fontFamily:'Noto sans',color:'#FFF',fontSize:'12px'}}>{props.label}</Typography>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst AudienceDetailPages = (props:any) :React.ReactElement<Props>  =>  {\n\n    const classes = useStyles()\n    const history = useHistory()\n    const theme = useTheme()\n    const matchesMac = useMediaQuery(theme.breakpoints.down('xl'));\n    const dispatch = useDispatch()\n\n    const specificId = props.match.params.id ? props.match.params.id : '0'\n    const specificAudience = useSelector((state: RootState) => state.audience.filter((x: any) => x.id.toString() === specificId))[0]\n \n    const audienceForm = useSelector((state: RootState) => state.audienceForm)\n\n    useEffect(() =>\n    {\n        dispatch(fetchAudience())\n        dispatch(fetchSpecificAudience(specificId))\n        dispatch(fetchAudienceTag())\n        //fetch api to get details infomation\n    }, [])\n    \n    return(\n       <Grid container direction='column' alignItems='center' className={classes.main}>\n            {/* title and breadcurumbs */}\n            { specificAudience ? \n                    <>\n                    <Grid item container alignItems='center' className={classes.titleContainer} direction='column'>\n                        <Grid item container direction='column' >\n                            <Grid item container>\n                                <Breadcrumbs\n                                    separator={<NavigateNextIcon fontSize=\"small\" />}\n                                    aria-label=\"breadcrumb\"\n                                >\n                                        <Link underline=\"hover\" color=\"inherit\" href=\"/\">\n                                        <Typography className={classes.h2}>{'Audience'}</Typography>\n                                    </Link>\n                                    <Link\n                                        underline=\"hover\"\n                                    >\n                                        <Typography className={classes.h2} style={{color:'#5A91FF'}}>{'Audience Detail'}</Typography>\n                                    </Link>\n                                </Breadcrumbs>\n                            </Grid>\n                            <Grid item container alignItems='center' style={{ marginTop: '10px' }} >\n                                <Grid item>\n                                    <IconButton disableRipple style={{ backgroundColor: 'transparent', padding:0, marginRight:'20px'}} onClick={() => { history.push('/audience') }} >\n                                        <ArrowBackIosIcon style={{color:'#000'}}/>\n                                    </IconButton>\n                                </Grid>\n                                <Grid item>\n                                    <Grid container justifyContent='center' alignItems='center'>\n                                        {\n                                            specificAudience.tags?.map((tag:any) =>\n                                            {\n                                                return (\n                                                    <Badge key={tag.name} color={tag.color} label={`#${ tag.name }`} />\n                                                )\n                                            })\n                                        }\n                                    </Grid>\n                                </Grid>\n                                <Grid item >\n                                    <Typography className={classes.h1}>{specificAudience.name}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item container alignItems='center' className={classes.mainContainer} direction='column'>\n                        <Grid container style={{marginBottom:'30px',marginTop:'45px'}}>\n                            <Grid  item container justifyContent='center' style={{paddingLeft:'60px',paddingRight:'40px', width:'28%'}} >\n                                <Grid item container direction='column' className={classes.detailContainer}>\n                                    <Grid item style={{paddingLeft:'29px',paddingTop:'20px'}}>\n                                        <Typography className={classes.h1} style={{fontSize:'22px'}}>{'Audience Detail'}</Typography>\n                                    </Grid>\n                                    <Grid item style={{width:'100%',height:'1px',marginTop:'20px',marginBottom:'40px',backgroundColor:'#E0E0E0'}}>\n\n                                    </Grid>\n                                    <Grid item container direction='column' style={{paddingLeft:'30px',paddingRight:'30px'}}>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Status'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                <Grid container style={{ width: '100%' }} justifyContent='flex-start' alignItems='center'>\n                                                    {specificAudience.confirm === true ? <img src={activeIcon} style={{ width: '14px', height: '14px', marginRight: '6px' }} /> : <img src={draftIcon} style={{ width: '14px', height: '14px', marginRight: '6px' }} /> } \n                                                    <Grid item>\n                                                        <Typography >{specificAudience.confirm === true ? 'Active' : 'Drafted'}</Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Name'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{ specificAudience.name === '' ? 'None' : specificAudience.name }</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Create Date'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                            <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{ specificAudience.publishTime}</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Creator'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{ specificAudience.lastUpdateBy }</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Last Updated'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{ specificAudience.lastEdited }</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Tags'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                {specificAudience.tags.length === 0 ? 'None' :\n                                                    <Grid container justifyContent='flex-start' alignItems='center'>\n                                                        {\n                                                            specificAudience.tags?.map((tag:any) =>\n                                                            {\n                                                                return (\n                                                                    <Badge key={tag.name} color={tag.color} label={`#${ tag.name }`} />\n                                                                )\n                                                            })\n                                                        }\n                                                    </Grid>\n                                                }\n                                            \n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Recurring'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{ audienceForm.schedule.period }</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Publish Date'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                <Grid container direction='column'>\n                                                    <Grid item container style={{ marginBottom: '4px' }}>\n                                                        <Grid item lg={3} md={3}>\n                                                            <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{`From`}</Typography>\n                                                        </Grid>\n                                                        <Grid item lg={9} md={9}>\n                                                            <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{`${audienceForm.schedule.fromDay} ${moment(audienceForm.schedule.fromTime).format('hh:mm:ss')}`}</Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item container >\n                                                        <Grid item lg={3} md={3}>\n                                                            <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{`To`}</Typography>\n                                                        </Grid>\n                                                        <Grid item lg={9} md={9}>\n                                                            <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{`${audienceForm.schedule.fromDay} ${moment(audienceForm.schedule.fromTime).format('hh:mm:ss')}`}</Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Next Publish Date'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                <Typography style={{fontSize:'16px',color:'#0E0F0F',fontFamily:'Noto sans'}}>{`${audienceForm.schedule.fromDay} ${moment(audienceForm.schedule.fromTime).format('hh:mm:ss')}`}</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container style={{ marginBottom: '20px' }}>\n                                            <Grid item lg={5} md={5}>\n                                                <Typography style={{fontSize:'16px',color:'#989898',fontFamily:'Noto sans'}}>{'Active Output'}</Typography>\n                                            </Grid>\n                                            <Grid item lg={7} md={7}>\n                                                -\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item container style={{paddingLeft:'28px'}}>\n                                        <Grid item style={{marginRight:'15px'}}>\n                                            <Button startIcon={<EditIcon style={{ color: '#5A91FF', width: '20px', height: '20px' }} />} variant=\"contained\" disableRipple style={{boxShadow:'none',border: '2px solid #5A91FF',backgroundColor:'#FFF',color:'#5A91FF',width:'100px'}} className={classes.nextButton} onClick={()=> history.push(`/audience/${specificId}/edit`)} >{'Edit'}</Button>\n                                        </Grid>\n                                        <Grid item >\n                                            <Button onClick={() =>\n                                            {\n                                                downloadFile(specificAudience, `audience_${ specificAudience.name }.json`)\n                                            }} startIcon={<ArchiveIcon style={{ color: '#5A91FF', width: '20px', height: '20px' }} />} variant=\"contained\" disableRipple style={{boxShadow:'none',border: '2px solid #5A91FF',backgroundColor:'#FFF',color:'#5A91FF',width:'120px'}} className={classes.nextButton} >{'Archieve'}</Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid  item container direction='column' style={{width:'72%',paddingRight:'60px'}} >\n                                {\n                                    specificAudience.details.filtering.map((creatorData:any, index:number) =>\n                                    {\n                                        return (\n                                            <>\n                                                <FilterSection key={creatorData.id} data={creatorData} editable={false} />\n                                                {\n                                                    index === specificAudience.details.filtering.length - 1 ? '' :\n                                                    <Grid item container justifyContent='center' style={{margin:'20px 0px'}}>\n                                                        <Button disabled={true} style={{borderRadius:'5px 0px 0px 5px'}} className={creatorData.connector === true ? classes.activeButton : classes.nonActiveButton}>{'AND'}</Button>\n                                                        <Button disabled={true} style={{borderRadius:'0px 5px 5px 0px'}} className={creatorData.connector === false ? classes.activeButton : classes.nonActiveButton}>{'OR'}</Button>\n                                                    </Grid>\n                                                }\n                                            </>\n                                        )\n                                    })\n                                }\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    </>\n                : ''\n            }\n\n        </Grid>\n    )\n}\n\nexport default AudienceDetailPages"],"sourceRoot":""}